/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.ALIASDECLINEDBYPROCESSORERROR;
import com.paypal.sandbox.apim.models.APPLEPAYAMOUNTMISMATCHERROR;
import com.paypal.sandbox.apim.models.BANKNOTSUPPORTEDFORVERIFICATION;
import com.paypal.sandbox.apim.models.BILLINGADDRESSINVALIDERROR;
import com.paypal.sandbox.apim.models.BLIKONECLICKMISSINGREQUIREDPARAMETERERROR;
import com.paypal.sandbox.apim.models.CANCELURLREQUIRED;
import com.paypal.sandbox.apim.models.CARDEXPIREDERROR;
import com.paypal.sandbox.apim.models.CARDEXPIRYREQUIRED;
import com.paypal.sandbox.apim.models.CARDNUMBERREQUIRED;
import com.paypal.sandbox.apim.models.CARDTYPENOTSUPPORTED;
import com.paypal.sandbox.apim.models.COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE;
import com.paypal.sandbox.apim.models.CRYPTOGRAMISREQUIRED;
import com.paypal.sandbox.apim.models.CRYPTOGRAMREQUIREDERROR;
import com.paypal.sandbox.apim.models.CURRENCYNOTSUPPORTEDFORBANK;
import com.paypal.sandbox.apim.models.CURRENCYNOTSUPPORTEDFORCARDTYPE;
import com.paypal.sandbox.apim.models.CURRENCYNOTSUPPORTEDFORCOUNTRY;
import com.paypal.sandbox.apim.models.DEVICEDATANOTAVAILABLE;
import com.paypal.sandbox.apim.models.EMVDATAREQUIREDERROR;
import com.paypal.sandbox.apim.models.GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR;
import com.paypal.sandbox.apim.models.IBANCOUNTRYNOTSUPPORTED;
import com.paypal.sandbox.apim.models.INCOMPATIBLEPARAMETERVALUEERROR;
import com.paypal.sandbox.apim.models.INVALIDEXPIRYDATEERROR;
import com.paypal.sandbox.apim.models.INVALIDGOOGLEPAYTOKENERROR;
import com.paypal.sandbox.apim.models.INVALIDIBAN;
import com.paypal.sandbox.apim.models.INVALIDSECURITYCODELENGTHERROR;
import com.paypal.sandbox.apim.models.ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE;
import com.paypal.sandbox.apim.models.MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR;
import com.paypal.sandbox.apim.models.MISSINGCRYPTOGRAMERROR;
import com.paypal.sandbox.apim.models.MISSINGPAYMENTPARAMERROR;
import com.paypal.sandbox.apim.models.MISSINGPREVIOUSREFERENCEERROR;
import com.paypal.sandbox.apim.models.NOPAYMENTSOURCEPROVIDED;
import com.paypal.sandbox.apim.models.NOTELIGIBLEFORPNREFPROCESSINGERROR;
import com.paypal.sandbox.apim.models.NOTENABLEDTOVAULTPAYMENTSOURCEERROR;
import com.paypal.sandbox.apim.models.ONEOFPARAMETERSREQUIREDERROR;
import com.paypal.sandbox.apim.models.ONEOFTHEPARAMETERSREQUIRED;
import com.paypal.sandbox.apim.models.ONLYONEBANKSOURCEALLOWED;
import com.paypal.sandbox.apim.models.ONLYONEPAYMENTSOURCEALLOWED;
import com.paypal.sandbox.apim.models.ORDERALREADYAUTHORIZED;
import com.paypal.sandbox.apim.models.ORDERALREADYCAPTURED;
import com.paypal.sandbox.apim.models.ORDERCANNOTBECONFIRMED;
import com.paypal.sandbox.apim.models.ORDERCOMPLETEONPAYMENTAPPROVALERROR;
import com.paypal.sandbox.apim.models.ORDERISPENDINGAPPROVAL;
import com.paypal.sandbox.apim.models.PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE;
import com.paypal.sandbox.apim.models.PAYMENTALREADYAPPROVED;
import com.paypal.sandbox.apim.models.PAYMENTSOURCECANNOTBEUSEDERROR;
import com.paypal.sandbox.apim.models.PAYMENTSOURCEDECLINEDBYPROCESSORERROR;
import com.paypal.sandbox.apim.models.PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR;
import com.paypal.sandbox.apim.models.PAYPALIDPROCESSINGINELIGIBILITYERROR;
import com.paypal.sandbox.apim.models.PAYPALTRANSACTIONIDNOTFOUNDERROR;
import com.paypal.sandbox.apim.models.PNREFNOTFOUNDERROR;
import com.paypal.sandbox.apim.models.REQUIREDPARAMETERFORPAYMENTSOURCE;
import com.paypal.sandbox.apim.models.RETURNURLREQUIRED;
import com.paypal.sandbox.apim.models.SETUPERRORFORBANK;
import com.paypal.sandbox.apim.models.SHIPPINGADDRESSINVALIDERROR;
import com.paypal.sandbox.apim.models.TOKENEXPIREDERROR;
import com.paypal.sandbox.apim.models.UNSUPPORTEDPROCESSINGINSTRUCTIONERROR;
import com.paypal.sandbox.apim.models.VAULTINSTRUCTIONDUPLICATEDERROR;
import com.paypal.sandbox.apim.models.VAULTINSTRUCTIONREQUIREDERROR;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersConfirm422IssuesItems.OrdersConfirm422IssuesItemsDeserializer.class)
public abstract class OrdersConfirm422IssuesItems {
    
    /**
     * This is ORDER_ALREADY_CAPTURED case.
     * @param oRDERALREADYCAPTURED ORDERALREADYCAPTURED value for oRDERALREADYCAPTURED.
     * @return The ORDERALREADYCAPTUREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromORDERALREADYCAPTURED(
            ORDERALREADYCAPTURED oRDERALREADYCAPTURED) {
        return oRDERALREADYCAPTURED == null ? null : new ORDERALREADYCAPTUREDCase(oRDERALREADYCAPTURED);
    }

    /**
     * This is ORDER_ALREADY_AUTHORIZED case.
     * @param oRDERALREADYAUTHORIZED ORDERALREADYAUTHORIZED value for oRDERALREADYAUTHORIZED.
     * @return The ORDERALREADYAUTHORIZEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromORDERALREADYAUTHORIZED(
            ORDERALREADYAUTHORIZED oRDERALREADYAUTHORIZED) {
        return oRDERALREADYAUTHORIZED == null ? null : new ORDERALREADYAUTHORIZEDCase(oRDERALREADYAUTHORIZED);
    }

    /**
     * This is ORDER_CANNOT_BE_CONFIRMED case.
     * @param oRDERCANNOTBECONFIRMED ORDERCANNOTBECONFIRMED value for oRDERCANNOTBECONFIRMED.
     * @return The ORDERCANNOTBECONFIRMEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromORDERCANNOTBECONFIRMED(
            ORDERCANNOTBECONFIRMED oRDERCANNOTBECONFIRMED) {
        return oRDERCANNOTBECONFIRMED == null ? null : new ORDERCANNOTBECONFIRMEDCase(oRDERCANNOTBECONFIRMED);
    }

    /**
     * This is MISSING_PREVIOUS_REFERENCE_ERROR case.
     * @param mISSINGPREVIOUSREFERENCEERROR MISSINGPREVIOUSREFERENCEERROR value for mISSINGPREVIOUSREFERENCEERROR.
     * @return The MISSINGPREVIOUSREFERENCEERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromMISSINGPREVIOUSREFERENCEERROR(
            MISSINGPREVIOUSREFERENCEERROR mISSINGPREVIOUSREFERENCEERROR) {
        return mISSINGPREVIOUSREFERENCEERROR == null ? null : new MISSINGPREVIOUSREFERENCEERRORCase(mISSINGPREVIOUSREFERENCEERROR);
    }

    /**
     * This is MISSING_CRYPTOGRAM_ERROR case.
     * @param mISSINGCRYPTOGRAMERROR MISSINGCRYPTOGRAMERROR value for mISSINGCRYPTOGRAMERROR.
     * @return The MISSINGCRYPTOGRAMERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromMISSINGCRYPTOGRAMERROR(
            MISSINGCRYPTOGRAMERROR mISSINGCRYPTOGRAMERROR) {
        return mISSINGCRYPTOGRAMERROR == null ? null : new MISSINGCRYPTOGRAMERRORCase(mISSINGCRYPTOGRAMERROR);
    }

    /**
     * This is CURRENCY_NOT_SUPPORTED_FOR_COUNTRY case.
     * @param cURRENCYNOTSUPPORTEDFORCOUNTRY CURRENCYNOTSUPPORTEDFORCOUNTRY value for cURRENCYNOTSUPPORTEDFORCOUNTRY.
     * @return The CURRENCYNOTSUPPORTEDFORCOUNTRYCase object.
     */
    public static OrdersConfirm422IssuesItems fromCURRENCYNOTSUPPORTEDFORCOUNTRY(
            CURRENCYNOTSUPPORTEDFORCOUNTRY cURRENCYNOTSUPPORTEDFORCOUNTRY) {
        return cURRENCYNOTSUPPORTEDFORCOUNTRY == null ? null : new CURRENCYNOTSUPPORTEDFORCOUNTRYCase(cURRENCYNOTSUPPORTEDFORCOUNTRY);
    }

    /**
     * This is CARD_EXPIRED_ERROR case.
     * @param cARDEXPIREDERROR CARDEXPIREDERROR value for cARDEXPIREDERROR.
     * @return The CARDEXPIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromCARDEXPIREDERROR(
            CARDEXPIREDERROR cARDEXPIREDERROR) {
        return cARDEXPIREDERROR == null ? null : new CARDEXPIREDERRORCase(cARDEXPIREDERROR);
    }

    /**
     * This is CARD_TYPE_NOT_SUPPORTED case.
     * @param cARDTYPENOTSUPPORTED CARDTYPENOTSUPPORTED value for cARDTYPENOTSUPPORTED.
     * @return The CARDTYPENOTSUPPORTEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromCARDTYPENOTSUPPORTED(
            CARDTYPENOTSUPPORTED cARDTYPENOTSUPPORTED) {
        return cARDTYPENOTSUPPORTED == null ? null : new CARDTYPENOTSUPPORTEDCase(cARDTYPENOTSUPPORTED);
    }

    /**
     * This is CURRENCY_NOT_SUPPORTED_FOR_CARD_TYPE case.
     * @param cURRENCYNOTSUPPORTEDFORCARDTYPE CURRENCYNOTSUPPORTEDFORCARDTYPE value for cURRENCYNOTSUPPORTEDFORCARDTYPE.
     * @return The CURRENCYNOTSUPPORTEDFORCARDTYPECase object.
     */
    public static OrdersConfirm422IssuesItems fromCURRENCYNOTSUPPORTEDFORCARDTYPE(
            CURRENCYNOTSUPPORTEDFORCARDTYPE cURRENCYNOTSUPPORTEDFORCARDTYPE) {
        return cURRENCYNOTSUPPORTEDFORCARDTYPE == null ? null : new CURRENCYNOTSUPPORTEDFORCARDTYPECase(cURRENCYNOTSUPPORTEDFORCARDTYPE);
    }

    /**
     * This is ONLY_ONE_PAYMENT_SOURCE_ALLOWED case.
     * @param oNLYONEPAYMENTSOURCEALLOWED ONLYONEPAYMENTSOURCEALLOWED value for oNLYONEPAYMENTSOURCEALLOWED.
     * @return The ONLYONEPAYMENTSOURCEALLOWEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromONLYONEPAYMENTSOURCEALLOWED(
            ONLYONEPAYMENTSOURCEALLOWED oNLYONEPAYMENTSOURCEALLOWED) {
        return oNLYONEPAYMENTSOURCEALLOWED == null ? null : new ONLYONEPAYMENTSOURCEALLOWEDCase(oNLYONEPAYMENTSOURCEALLOWED);
    }

    /**
     * This is NO_PAYMENT_SOURCE_PROVIDED case.
     * @param nOPAYMENTSOURCEPROVIDED NOPAYMENTSOURCEPROVIDED value for nOPAYMENTSOURCEPROVIDED.
     * @return The NOPAYMENTSOURCEPROVIDEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromNOPAYMENTSOURCEPROVIDED(
            NOPAYMENTSOURCEPROVIDED nOPAYMENTSOURCEPROVIDED) {
        return nOPAYMENTSOURCEPROVIDED == null ? null : new NOPAYMENTSOURCEPROVIDEDCase(nOPAYMENTSOURCEPROVIDED);
    }

    /**
     * This is PAYMENT_ALREADY_APPROVED case.
     * @param pAYMENTALREADYAPPROVED PAYMENTALREADYAPPROVED value for pAYMENTALREADYAPPROVED.
     * @return The PAYMENTALREADYAPPROVEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYMENTALREADYAPPROVED(
            PAYMENTALREADYAPPROVED pAYMENTALREADYAPPROVED) {
        return pAYMENTALREADYAPPROVED == null ? null : new PAYMENTALREADYAPPROVEDCase(pAYMENTALREADYAPPROVED);
    }

    /**
     * This is UNSUPPORTED_PROCESSING_INSTRUCTION_ERROR case.
     * @param uNSUPPORTEDPROCESSINGINSTRUCTIONERROR UNSUPPORTEDPROCESSINGINSTRUCTIONERROR value for uNSUPPORTEDPROCESSINGINSTRUCTIONERROR.
     * @return The UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromUNSUPPORTEDPROCESSINGINSTRUCTIONERROR(
            UNSUPPORTEDPROCESSINGINSTRUCTIONERROR uNSUPPORTEDPROCESSINGINSTRUCTIONERROR) {
        return uNSUPPORTEDPROCESSINGINSTRUCTIONERROR == null ? null : new UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase(uNSUPPORTEDPROCESSINGINSTRUCTIONERROR);
    }

    /**
     * This is ORDER_COMPLETE_ON_PAYMENT_APPROVAL_ERROR case.
     * @param oRDERCOMPLETEONPAYMENTAPPROVALERROR ORDERCOMPLETEONPAYMENTAPPROVALERROR value for oRDERCOMPLETEONPAYMENTAPPROVALERROR.
     * @return The ORDERCOMPLETEONPAYMENTAPPROVALERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromORDERCOMPLETEONPAYMENTAPPROVALERROR(
            ORDERCOMPLETEONPAYMENTAPPROVALERROR oRDERCOMPLETEONPAYMENTAPPROVALERROR) {
        return oRDERCOMPLETEONPAYMENTAPPROVALERROR == null ? null : new ORDERCOMPLETEONPAYMENTAPPROVALERRORCase(oRDERCOMPLETEONPAYMENTAPPROVALERROR);
    }

    /**
     * This is INVALID_EXPIRY_DATE_ERROR case.
     * @param iNVALIDEXPIRYDATEERROR INVALIDEXPIRYDATEERROR value for iNVALIDEXPIRYDATEERROR.
     * @return The INVALIDEXPIRYDATEERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromINVALIDEXPIRYDATEERROR(
            INVALIDEXPIRYDATEERROR iNVALIDEXPIRYDATEERROR) {
        return iNVALIDEXPIRYDATEERROR == null ? null : new INVALIDEXPIRYDATEERRORCase(iNVALIDEXPIRYDATEERROR);
    }

    /**
     * This is TOKEN_EXPIRED_ERROR case.
     * @param tOKENEXPIREDERROR TOKENEXPIREDERROR value for tOKENEXPIREDERROR.
     * @return The TOKENEXPIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromTOKENEXPIREDERROR(
            TOKENEXPIREDERROR tOKENEXPIREDERROR) {
        return tOKENEXPIREDERROR == null ? null : new TOKENEXPIREDERRORCase(tOKENEXPIREDERROR);
    }

    /**
     * This is INVALID_GOOGLE_PAY_TOKEN_ERROR case.
     * @param iNVALIDGOOGLEPAYTOKENERROR INVALIDGOOGLEPAYTOKENERROR value for iNVALIDGOOGLEPAYTOKENERROR.
     * @return The INVALIDGOOGLEPAYTOKENERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromINVALIDGOOGLEPAYTOKENERROR(
            INVALIDGOOGLEPAYTOKENERROR iNVALIDGOOGLEPAYTOKENERROR) {
        return iNVALIDGOOGLEPAYTOKENERROR == null ? null : new INVALIDGOOGLEPAYTOKENERRORCase(iNVALIDGOOGLEPAYTOKENERROR);
    }

    /**
     * This is GOOGLE_PAY_GATEWAY_MERCHANT_ID_MISMATCH_ERROR case.
     * @param gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR value for gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR.
     * @return The GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromGOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR(
            GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR) {
        return gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR == null ? null : new GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase(gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR);
    }

    /**
     * This is CRYPTOGRAM_REQUIRED_ERROR case.
     * @param cRYPTOGRAMREQUIREDERROR CRYPTOGRAMREQUIREDERROR value for cRYPTOGRAMREQUIREDERROR.
     * @return The CRYPTOGRAMREQUIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromCRYPTOGRAMREQUIREDERROR(
            CRYPTOGRAMREQUIREDERROR cRYPTOGRAMREQUIREDERROR) {
        return cRYPTOGRAMREQUIREDERROR == null ? null : new CRYPTOGRAMREQUIREDERRORCase(cRYPTOGRAMREQUIREDERROR);
    }

    /**
     * This is ONE_OF_PARAMETERS_REQUIRED_ERROR case.
     * @param oNEOFPARAMETERSREQUIREDERROR ONEOFPARAMETERSREQUIREDERROR value for oNEOFPARAMETERSREQUIREDERROR.
     * @return The ONEOFPARAMETERSREQUIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromONEOFPARAMETERSREQUIREDERROR(
            ONEOFPARAMETERSREQUIREDERROR oNEOFPARAMETERSREQUIREDERROR) {
        return oNEOFPARAMETERSREQUIREDERROR == null ? null : new ONEOFPARAMETERSREQUIREDERRORCase(oNEOFPARAMETERSREQUIREDERROR);
    }

    /**
     * This is RETURN_URL_REQUIRED case.
     * @param rETURNURLREQUIRED RETURNURLREQUIRED value for rETURNURLREQUIRED.
     * @return The RETURNURLREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromRETURNURLREQUIRED(
            RETURNURLREQUIRED rETURNURLREQUIRED) {
        return rETURNURLREQUIRED == null ? null : new RETURNURLREQUIREDCase(rETURNURLREQUIRED);
    }

    /**
     * This is CANCEL_URL_REQUIRED case.
     * @param cANCELURLREQUIRED CANCELURLREQUIRED value for cANCELURLREQUIRED.
     * @return The CANCELURLREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromCANCELURLREQUIRED(
            CANCELURLREQUIRED cANCELURLREQUIRED) {
        return cANCELURLREQUIRED == null ? null : new CANCELURLREQUIREDCase(cANCELURLREQUIRED);
    }

    /**
     * This is COUNTRY_NOT_SUPPORTED_BY_PAYMENT_SOURCE case.
     * @param cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE value for cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE.
     * @return The COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase object.
     */
    public static OrdersConfirm422IssuesItems fromCOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE(
            COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE) {
        return cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE == null ? null : new COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase(cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE);
    }

    /**
     * This is REQUIRED_PARAMETER_FOR_PAYMENT_SOURCE case.
     * @param rEQUIREDPARAMETERFORPAYMENTSOURCE REQUIREDPARAMETERFORPAYMENTSOURCE value for rEQUIREDPARAMETERFORPAYMENTSOURCE.
     * @return The REQUIREDPARAMETERFORPAYMENTSOURCECase object.
     */
    public static OrdersConfirm422IssuesItems fromREQUIREDPARAMETERFORPAYMENTSOURCE(
            REQUIREDPARAMETERFORPAYMENTSOURCE rEQUIREDPARAMETERFORPAYMENTSOURCE) {
        return rEQUIREDPARAMETERFORPAYMENTSOURCE == null ? null : new REQUIREDPARAMETERFORPAYMENTSOURCECase(rEQUIREDPARAMETERFORPAYMENTSOURCE);
    }

    /**
     * This is MISSING_PAYMENT_PARAM_ERROR case.
     * @param mISSINGPAYMENTPARAMERROR MISSINGPAYMENTPARAMERROR value for mISSINGPAYMENTPARAMERROR.
     * @return The MISSINGPAYMENTPARAMERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromMISSINGPAYMENTPARAMERROR(
            MISSINGPAYMENTPARAMERROR mISSINGPAYMENTPARAMERROR) {
        return mISSINGPAYMENTPARAMERROR == null ? null : new MISSINGPAYMENTPARAMERRORCase(mISSINGPAYMENTPARAMERROR);
    }

    /**
     * This is ITEM_CATEGORY_NOT_SUPPORTED_BY_PAYMENT_SOURCE case.
     * @param iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE value for iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE.
     * @return The ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase object.
     */
    public static OrdersConfirm422IssuesItems fromITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE(
            ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE) {
        return iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE == null ? null : new ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase(iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE);
    }

    /**
     * This is PAYMENT_SOURCE_INFO_CANNOT_BE_VERIFIED_ERROR case.
     * @param pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR value for pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR.
     * @return The PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR(
            PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR) {
        return pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR == null ? null : new PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase(pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR);
    }

    /**
     * This is PAYMENT_SOURCE_DECLINED_BY_PROCESSOR_ERROR case.
     * @param pAYMENTSOURCEDECLINEDBYPROCESSORERROR PAYMENTSOURCEDECLINEDBYPROCESSORERROR value for pAYMENTSOURCEDECLINEDBYPROCESSORERROR.
     * @return The PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYMENTSOURCEDECLINEDBYPROCESSORERROR(
            PAYMENTSOURCEDECLINEDBYPROCESSORERROR pAYMENTSOURCEDECLINEDBYPROCESSORERROR) {
        return pAYMENTSOURCEDECLINEDBYPROCESSORERROR == null ? null : new PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase(pAYMENTSOURCEDECLINEDBYPROCESSORERROR);
    }

    /**
     * This is PAYMENT_SOURCE_CANNOT_BE_USED_ERROR case.
     * @param pAYMENTSOURCECANNOTBEUSEDERROR PAYMENTSOURCECANNOTBEUSEDERROR value for pAYMENTSOURCECANNOTBEUSEDERROR.
     * @return The PAYMENTSOURCECANNOTBEUSEDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYMENTSOURCECANNOTBEUSEDERROR(
            PAYMENTSOURCECANNOTBEUSEDERROR pAYMENTSOURCECANNOTBEUSEDERROR) {
        return pAYMENTSOURCECANNOTBEUSEDERROR == null ? null : new PAYMENTSOURCECANNOTBEUSEDERRORCase(pAYMENTSOURCECANNOTBEUSEDERROR);
    }

    /**
     * This is SETUP_ERROR_FOR_BANK case.
     * @param sETUPERRORFORBANK SETUPERRORFORBANK value for sETUPERRORFORBANK.
     * @return The SETUPERRORFORBANKCase object.
     */
    public static OrdersConfirm422IssuesItems fromSETUPERRORFORBANK(
            SETUPERRORFORBANK sETUPERRORFORBANK) {
        return sETUPERRORFORBANK == null ? null : new SETUPERRORFORBANKCase(sETUPERRORFORBANK);
    }

    /**
     * This is BANK_NOT_SUPPORTED_FOR_VERIFICATION case.
     * @param bANKNOTSUPPORTEDFORVERIFICATION BANKNOTSUPPORTEDFORVERIFICATION value for bANKNOTSUPPORTEDFORVERIFICATION.
     * @return The BANKNOTSUPPORTEDFORVERIFICATIONCase object.
     */
    public static OrdersConfirm422IssuesItems fromBANKNOTSUPPORTEDFORVERIFICATION(
            BANKNOTSUPPORTEDFORVERIFICATION bANKNOTSUPPORTEDFORVERIFICATION) {
        return bANKNOTSUPPORTEDFORVERIFICATION == null ? null : new BANKNOTSUPPORTEDFORVERIFICATIONCase(bANKNOTSUPPORTEDFORVERIFICATION);
    }

    /**
     * This is APPLE_PAY_AMOUNT_MISMATCH_ERROR case.
     * @param aPPLEPAYAMOUNTMISMATCHERROR APPLEPAYAMOUNTMISMATCHERROR value for aPPLEPAYAMOUNTMISMATCHERROR.
     * @return The APPLEPAYAMOUNTMISMATCHERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromAPPLEPAYAMOUNTMISMATCHERROR(
            APPLEPAYAMOUNTMISMATCHERROR aPPLEPAYAMOUNTMISMATCHERROR) {
        return aPPLEPAYAMOUNTMISMATCHERROR == null ? null : new APPLEPAYAMOUNTMISMATCHERRORCase(aPPLEPAYAMOUNTMISMATCHERROR);
    }

    /**
     * This is ONE_OF_THE_PARAMETERS_REQUIRED case.
     * @param oNEOFTHEPARAMETERSREQUIRED ONEOFTHEPARAMETERSREQUIRED value for oNEOFTHEPARAMETERSREQUIRED.
     * @return The ONEOFTHEPARAMETERSREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromONEOFTHEPARAMETERSREQUIRED(
            ONEOFTHEPARAMETERSREQUIRED oNEOFTHEPARAMETERSREQUIRED) {
        return oNEOFTHEPARAMETERSREQUIRED == null ? null : new ONEOFTHEPARAMETERSREQUIREDCase(oNEOFTHEPARAMETERSREQUIRED);
    }

    /**
     * This is BILLING_ADDRESS_INVALID_ERROR case.
     * @param bILLINGADDRESSINVALIDERROR BILLINGADDRESSINVALIDERROR value for bILLINGADDRESSINVALIDERROR.
     * @return The BILLINGADDRESSINVALIDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromBILLINGADDRESSINVALIDERROR(
            BILLINGADDRESSINVALIDERROR bILLINGADDRESSINVALIDERROR) {
        return bILLINGADDRESSINVALIDERROR == null ? null : new BILLINGADDRESSINVALIDERRORCase(bILLINGADDRESSINVALIDERROR);
    }

    /**
     * This is SHIPPING_ADDRESS_INVALID_ERROR case.
     * @param sHIPPINGADDRESSINVALIDERROR SHIPPINGADDRESSINVALIDERROR value for sHIPPINGADDRESSINVALIDERROR.
     * @return The SHIPPINGADDRESSINVALIDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromSHIPPINGADDRESSINVALIDERROR(
            SHIPPINGADDRESSINVALIDERROR sHIPPINGADDRESSINVALIDERROR) {
        return sHIPPINGADDRESSINVALIDERROR == null ? null : new SHIPPINGADDRESSINVALIDERRORCase(sHIPPINGADDRESSINVALIDERROR);
    }

    /**
     * This is ORDER_IS_PENDING_APPROVAL case.
     * @param oRDERISPENDINGAPPROVAL ORDERISPENDINGAPPROVAL value for oRDERISPENDINGAPPROVAL.
     * @return The ORDERISPENDINGAPPROVALCase object.
     */
    public static OrdersConfirm422IssuesItems fromORDERISPENDINGAPPROVAL(
            ORDERISPENDINGAPPROVAL oRDERISPENDINGAPPROVAL) {
        return oRDERISPENDINGAPPROVAL == null ? null : new ORDERISPENDINGAPPROVALCase(oRDERISPENDINGAPPROVAL);
    }

    /**
     * This is DEVICE_DATA_NOT_AVAILABLE case.
     * @param dEVICEDATANOTAVAILABLE DEVICEDATANOTAVAILABLE value for dEVICEDATANOTAVAILABLE.
     * @return The DEVICEDATANOTAVAILABLECase object.
     */
    public static OrdersConfirm422IssuesItems fromDEVICEDATANOTAVAILABLE(
            DEVICEDATANOTAVAILABLE dEVICEDATANOTAVAILABLE) {
        return dEVICEDATANOTAVAILABLE == null ? null : new DEVICEDATANOTAVAILABLECase(dEVICEDATANOTAVAILABLE);
    }

    /**
     * This is CURRENCY_NOT_SUPPORTED_FOR_BANK case.
     * @param cURRENCYNOTSUPPORTEDFORBANK CURRENCYNOTSUPPORTEDFORBANK value for cURRENCYNOTSUPPORTEDFORBANK.
     * @return The CURRENCYNOTSUPPORTEDFORBANKCase object.
     */
    public static OrdersConfirm422IssuesItems fromCURRENCYNOTSUPPORTEDFORBANK(
            CURRENCYNOTSUPPORTEDFORBANK cURRENCYNOTSUPPORTEDFORBANK) {
        return cURRENCYNOTSUPPORTEDFORBANK == null ? null : new CURRENCYNOTSUPPORTEDFORBANKCase(cURRENCYNOTSUPPORTEDFORBANK);
    }

    /**
     * This is ONLY_ONE_BANK_SOURCE_ALLOWED case.
     * @param oNLYONEBANKSOURCEALLOWED ONLYONEBANKSOURCEALLOWED value for oNLYONEBANKSOURCEALLOWED.
     * @return The ONLYONEBANKSOURCEALLOWEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromONLYONEBANKSOURCEALLOWED(
            ONLYONEBANKSOURCEALLOWED oNLYONEBANKSOURCEALLOWED) {
        return oNLYONEBANKSOURCEALLOWED == null ? null : new ONLYONEBANKSOURCEALLOWEDCase(oNLYONEBANKSOURCEALLOWED);
    }

    /**
     * This is INVALID_IBAN case.
     * @param iNVALIDIBAN INVALIDIBAN value for iNVALIDIBAN.
     * @return The INVALIDIBANCase object.
     */
    public static OrdersConfirm422IssuesItems fromINVALIDIBAN(INVALIDIBAN iNVALIDIBAN) {
        return iNVALIDIBAN == null ? null : new INVALIDIBANCase(iNVALIDIBAN);
    }

    /**
     * This is IBAN_COUNTRY_NOT_SUPPORTED case.
     * @param iBANCOUNTRYNOTSUPPORTED IBANCOUNTRYNOTSUPPORTED value for iBANCOUNTRYNOTSUPPORTED.
     * @return The IBANCOUNTRYNOTSUPPORTEDCase object.
     */
    public static OrdersConfirm422IssuesItems fromIBANCOUNTRYNOTSUPPORTED(
            IBANCOUNTRYNOTSUPPORTED iBANCOUNTRYNOTSUPPORTED) {
        return iBANCOUNTRYNOTSUPPORTED == null ? null : new IBANCOUNTRYNOTSUPPORTEDCase(iBANCOUNTRYNOTSUPPORTED);
    }

    /**
     * This is PAYEE_COUNTRY_NOT_SUPPORTED_FOR_PAYMENT_SOURCE case.
     * @param pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE value for pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE.
     * @return The PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE(
            PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE) {
        return pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE == null ? null : new PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase(pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE);
    }

    /**
     * This is CARD_NUMBER_REQUIRED case.
     * @param cARDNUMBERREQUIRED CARDNUMBERREQUIRED value for cARDNUMBERREQUIRED.
     * @return The CARDNUMBERREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromCARDNUMBERREQUIRED(
            CARDNUMBERREQUIRED cARDNUMBERREQUIRED) {
        return cARDNUMBERREQUIRED == null ? null : new CARDNUMBERREQUIREDCase(cARDNUMBERREQUIRED);
    }

    /**
     * This is CARD_EXPIRY_REQUIRED case.
     * @param cARDEXPIRYREQUIRED CARDEXPIRYREQUIRED value for cARDEXPIRYREQUIRED.
     * @return The CARDEXPIRYREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromCARDEXPIRYREQUIRED(
            CARDEXPIRYREQUIRED cARDEXPIRYREQUIRED) {
        return cARDEXPIRYREQUIRED == null ? null : new CARDEXPIRYREQUIREDCase(cARDEXPIRYREQUIRED);
    }

    /**
     * This is INCOMPATIBLE_PARAMETER_VALUE_ERROR case.
     * @param iNCOMPATIBLEPARAMETERVALUEERROR INCOMPATIBLEPARAMETERVALUEERROR value for iNCOMPATIBLEPARAMETERVALUEERROR.
     * @return The INCOMPATIBLEPARAMETERVALUEERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromINCOMPATIBLEPARAMETERVALUEERROR(
            INCOMPATIBLEPARAMETERVALUEERROR iNCOMPATIBLEPARAMETERVALUEERROR) {
        return iNCOMPATIBLEPARAMETERVALUEERROR == null ? null : new INCOMPATIBLEPARAMETERVALUEERRORCase(iNCOMPATIBLEPARAMETERVALUEERROR);
    }

    /**
     * This is VAULT_INSTRUCTION_DUPLICATED_ERROR case.
     * @param vAULTINSTRUCTIONDUPLICATEDERROR VAULTINSTRUCTIONDUPLICATEDERROR value for vAULTINSTRUCTIONDUPLICATEDERROR.
     * @return The VAULTINSTRUCTIONDUPLICATEDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromVAULTINSTRUCTIONDUPLICATEDERROR(
            VAULTINSTRUCTIONDUPLICATEDERROR vAULTINSTRUCTIONDUPLICATEDERROR) {
        return vAULTINSTRUCTIONDUPLICATEDERROR == null ? null : new VAULTINSTRUCTIONDUPLICATEDERRORCase(vAULTINSTRUCTIONDUPLICATEDERROR);
    }

    /**
     * This is VAULT_INSTRUCTION_REQUIRED_ERROR case.
     * @param vAULTINSTRUCTIONREQUIREDERROR VAULTINSTRUCTIONREQUIREDERROR value for vAULTINSTRUCTIONREQUIREDERROR.
     * @return The VAULTINSTRUCTIONREQUIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromVAULTINSTRUCTIONREQUIREDERROR(
            VAULTINSTRUCTIONREQUIREDERROR vAULTINSTRUCTIONREQUIREDERROR) {
        return vAULTINSTRUCTIONREQUIREDERROR == null ? null : new VAULTINSTRUCTIONREQUIREDERRORCase(vAULTINSTRUCTIONREQUIREDERROR);
    }

    /**
     * This is MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE_ERROR case.
     * @param mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR value for mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR.
     * @return The MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromMISMATCHEDVAULTIDTOPAYMENTSOURCEERROR(
            MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR) {
        return mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR == null ? null : new MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase(mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR);
    }

    /**
     * This is NOT_ELIGIBLE_FOR_PNREF_PROCESSING_ERROR case.
     * @param nOTELIGIBLEFORPNREFPROCESSINGERROR NOTELIGIBLEFORPNREFPROCESSINGERROR value for nOTELIGIBLEFORPNREFPROCESSINGERROR.
     * @return The NOTELIGIBLEFORPNREFPROCESSINGERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromNOTELIGIBLEFORPNREFPROCESSINGERROR(
            NOTELIGIBLEFORPNREFPROCESSINGERROR nOTELIGIBLEFORPNREFPROCESSINGERROR) {
        return nOTELIGIBLEFORPNREFPROCESSINGERROR == null ? null : new NOTELIGIBLEFORPNREFPROCESSINGERRORCase(nOTELIGIBLEFORPNREFPROCESSINGERROR);
    }

    /**
     * This is PAYPAL_ID_PROCESSING_INELIGIBILITY_ERROR case.
     * @param pAYPALIDPROCESSINGINELIGIBILITYERROR PAYPALIDPROCESSINGINELIGIBILITYERROR value for pAYPALIDPROCESSINGINELIGIBILITYERROR.
     * @return The PAYPALIDPROCESSINGINELIGIBILITYERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYPALIDPROCESSINGINELIGIBILITYERROR(
            PAYPALIDPROCESSINGINELIGIBILITYERROR pAYPALIDPROCESSINGINELIGIBILITYERROR) {
        return pAYPALIDPROCESSINGINELIGIBILITYERROR == null ? null : new PAYPALIDPROCESSINGINELIGIBILITYERRORCase(pAYPALIDPROCESSINGINELIGIBILITYERROR);
    }

    /**
     * This is PAYPAL_TRANSACTION_ID_NOT_FOUND_ERROR case.
     * @param pAYPALTRANSACTIONIDNOTFOUNDERROR PAYPALTRANSACTIONIDNOTFOUNDERROR value for pAYPALTRANSACTIONIDNOTFOUNDERROR.
     * @return The PAYPALTRANSACTIONIDNOTFOUNDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPAYPALTRANSACTIONIDNOTFOUNDERROR(
            PAYPALTRANSACTIONIDNOTFOUNDERROR pAYPALTRANSACTIONIDNOTFOUNDERROR) {
        return pAYPALTRANSACTIONIDNOTFOUNDERROR == null ? null : new PAYPALTRANSACTIONIDNOTFOUNDERRORCase(pAYPALTRANSACTIONIDNOTFOUNDERROR);
    }

    /**
     * This is PNREF_NOT_FOUND_ERROR case.
     * @param pNREFNOTFOUNDERROR PNREFNOTFOUNDERROR value for pNREFNOTFOUNDERROR.
     * @return The PNREFNOTFOUNDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromPNREFNOTFOUNDERROR(
            PNREFNOTFOUNDERROR pNREFNOTFOUNDERROR) {
        return pNREFNOTFOUNDERROR == null ? null : new PNREFNOTFOUNDERRORCase(pNREFNOTFOUNDERROR);
    }

    /**
     * This is INVALID_SECURITY_CODE_LENGTH_ERROR case.
     * @param iNVALIDSECURITYCODELENGTHERROR INVALIDSECURITYCODELENGTHERROR value for iNVALIDSECURITYCODELENGTHERROR.
     * @return The INVALIDSECURITYCODELENGTHERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromINVALIDSECURITYCODELENGTHERROR(
            INVALIDSECURITYCODELENGTHERROR iNVALIDSECURITYCODELENGTHERROR) {
        return iNVALIDSECURITYCODELENGTHERROR == null ? null : new INVALIDSECURITYCODELENGTHERRORCase(iNVALIDSECURITYCODELENGTHERROR);
    }

    /**
     * This is NOT_ENABLED_TO_VAULT_PAYMENT_SOURCE_ERROR case.
     * @param nOTENABLEDTOVAULTPAYMENTSOURCEERROR NOTENABLEDTOVAULTPAYMENTSOURCEERROR value for nOTENABLEDTOVAULTPAYMENTSOURCEERROR.
     * @return The NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromNOTENABLEDTOVAULTPAYMENTSOURCEERROR(
            NOTENABLEDTOVAULTPAYMENTSOURCEERROR nOTENABLEDTOVAULTPAYMENTSOURCEERROR) {
        return nOTENABLEDTOVAULTPAYMENTSOURCEERROR == null ? null : new NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase(nOTENABLEDTOVAULTPAYMENTSOURCEERROR);
    }

    /**
     * This is CRYPTOGRAM_IS_REQUIRED case.
     * @param cRYPTOGRAMISREQUIRED CRYPTOGRAMISREQUIRED value for cRYPTOGRAMISREQUIRED.
     * @return The CRYPTOGRAMISREQUIREDCase object.
     */
    public static OrdersConfirm422IssuesItems fromCRYPTOGRAMISREQUIRED(
            CRYPTOGRAMISREQUIRED cRYPTOGRAMISREQUIRED) {
        return cRYPTOGRAMISREQUIRED == null ? null : new CRYPTOGRAMISREQUIREDCase(cRYPTOGRAMISREQUIRED);
    }

    /**
     * This is EMV_DATA_REQUIRED_ERROR case.
     * @param eMVDATAREQUIREDERROR EMVDATAREQUIREDERROR value for eMVDATAREQUIREDERROR.
     * @return The EMVDATAREQUIREDERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromEMVDATAREQUIREDERROR(
            EMVDATAREQUIREDERROR eMVDATAREQUIREDERROR) {
        return eMVDATAREQUIREDERROR == null ? null : new EMVDATAREQUIREDERRORCase(eMVDATAREQUIREDERROR);
    }

    /**
     * This is ALIAS_DECLINED_BY_PROCESSOR_ERROR case.
     * @param aLIASDECLINEDBYPROCESSORERROR ALIASDECLINEDBYPROCESSORERROR value for aLIASDECLINEDBYPROCESSORERROR.
     * @return The ALIASDECLINEDBYPROCESSORERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromALIASDECLINEDBYPROCESSORERROR(
            ALIASDECLINEDBYPROCESSORERROR aLIASDECLINEDBYPROCESSORERROR) {
        return aLIASDECLINEDBYPROCESSORERROR == null ? null : new ALIASDECLINEDBYPROCESSORERRORCase(aLIASDECLINEDBYPROCESSORERROR);
    }

    /**
     * This is BLIK_ONE_CLICK_MISSING_REQUIRED_PARAMETER_ERROR case.
     * @param bLIKONECLICKMISSINGREQUIREDPARAMETERERROR BLIKONECLICKMISSINGREQUIREDPARAMETERERROR value for bLIKONECLICKMISSINGREQUIREDPARAMETERERROR.
     * @return The BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase object.
     */
    public static OrdersConfirm422IssuesItems fromBLIKONECLICKMISSINGREQUIREDPARAMETERERROR(
            BLIKONECLICKMISSINGREQUIREDPARAMETERERROR bLIKONECLICKMISSINGREQUIREDPARAMETERERROR) {
        return bLIKONECLICKMISSINGREQUIREDPARAMETERERROR == null ? null : new BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase(bLIKONECLICKMISSINGREQUIREDPARAMETERERROR);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R oRDERALREADYCAPTURED(ORDERALREADYCAPTURED oRDERALREADYCAPTURED);

        R oRDERALREADYAUTHORIZED(ORDERALREADYAUTHORIZED oRDERALREADYAUTHORIZED);

        R oRDERCANNOTBECONFIRMED(ORDERCANNOTBECONFIRMED oRDERCANNOTBECONFIRMED);

        R mISSINGPREVIOUSREFERENCEERROR(MISSINGPREVIOUSREFERENCEERROR mISSINGPREVIOUSREFERENCEERROR);

        R mISSINGCRYPTOGRAMERROR(MISSINGCRYPTOGRAMERROR mISSINGCRYPTOGRAMERROR);

        R cURRENCYNOTSUPPORTEDFORCOUNTRY(CURRENCYNOTSUPPORTEDFORCOUNTRY cURRENCYNOTSUPPORTEDFORCOUNTRY);

        R cARDEXPIREDERROR(CARDEXPIREDERROR cARDEXPIREDERROR);

        R cARDTYPENOTSUPPORTED(CARDTYPENOTSUPPORTED cARDTYPENOTSUPPORTED);

        R cURRENCYNOTSUPPORTEDFORCARDTYPE(CURRENCYNOTSUPPORTEDFORCARDTYPE cURRENCYNOTSUPPORTEDFORCARDTYPE);

        R oNLYONEPAYMENTSOURCEALLOWED(ONLYONEPAYMENTSOURCEALLOWED oNLYONEPAYMENTSOURCEALLOWED);

        R nOPAYMENTSOURCEPROVIDED(NOPAYMENTSOURCEPROVIDED nOPAYMENTSOURCEPROVIDED);

        R pAYMENTALREADYAPPROVED(PAYMENTALREADYAPPROVED pAYMENTALREADYAPPROVED);

        R uNSUPPORTEDPROCESSINGINSTRUCTIONERROR(UNSUPPORTEDPROCESSINGINSTRUCTIONERROR uNSUPPORTEDPROCESSINGINSTRUCTIONERROR);

        R oRDERCOMPLETEONPAYMENTAPPROVALERROR(ORDERCOMPLETEONPAYMENTAPPROVALERROR oRDERCOMPLETEONPAYMENTAPPROVALERROR);

        R iNVALIDEXPIRYDATEERROR(INVALIDEXPIRYDATEERROR iNVALIDEXPIRYDATEERROR);

        R tOKENEXPIREDERROR(TOKENEXPIREDERROR tOKENEXPIREDERROR);

        R iNVALIDGOOGLEPAYTOKENERROR(INVALIDGOOGLEPAYTOKENERROR iNVALIDGOOGLEPAYTOKENERROR);

        R gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR(GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR);

        R cRYPTOGRAMREQUIREDERROR(CRYPTOGRAMREQUIREDERROR cRYPTOGRAMREQUIREDERROR);

        R oNEOFPARAMETERSREQUIREDERROR(ONEOFPARAMETERSREQUIREDERROR oNEOFPARAMETERSREQUIREDERROR);

        R rETURNURLREQUIRED(RETURNURLREQUIRED rETURNURLREQUIRED);

        R cANCELURLREQUIRED(CANCELURLREQUIRED cANCELURLREQUIRED);

        R cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE(COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE);

        R rEQUIREDPARAMETERFORPAYMENTSOURCE(REQUIREDPARAMETERFORPAYMENTSOURCE rEQUIREDPARAMETERFORPAYMENTSOURCE);

        R mISSINGPAYMENTPARAMERROR(MISSINGPAYMENTPARAMERROR mISSINGPAYMENTPARAMERROR);

        R iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE(ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE);

        R pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR(PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR);

        R pAYMENTSOURCEDECLINEDBYPROCESSORERROR(PAYMENTSOURCEDECLINEDBYPROCESSORERROR pAYMENTSOURCEDECLINEDBYPROCESSORERROR);

        R pAYMENTSOURCECANNOTBEUSEDERROR(PAYMENTSOURCECANNOTBEUSEDERROR pAYMENTSOURCECANNOTBEUSEDERROR);

        R sETUPERRORFORBANK(SETUPERRORFORBANK sETUPERRORFORBANK);

        R bANKNOTSUPPORTEDFORVERIFICATION(BANKNOTSUPPORTEDFORVERIFICATION bANKNOTSUPPORTEDFORVERIFICATION);

        R aPPLEPAYAMOUNTMISMATCHERROR(APPLEPAYAMOUNTMISMATCHERROR aPPLEPAYAMOUNTMISMATCHERROR);

        R oNEOFTHEPARAMETERSREQUIRED(ONEOFTHEPARAMETERSREQUIRED oNEOFTHEPARAMETERSREQUIRED);

        R bILLINGADDRESSINVALIDERROR(BILLINGADDRESSINVALIDERROR bILLINGADDRESSINVALIDERROR);

        R sHIPPINGADDRESSINVALIDERROR(SHIPPINGADDRESSINVALIDERROR sHIPPINGADDRESSINVALIDERROR);

        R oRDERISPENDINGAPPROVAL(ORDERISPENDINGAPPROVAL oRDERISPENDINGAPPROVAL);

        R dEVICEDATANOTAVAILABLE(DEVICEDATANOTAVAILABLE dEVICEDATANOTAVAILABLE);

        R cURRENCYNOTSUPPORTEDFORBANK(CURRENCYNOTSUPPORTEDFORBANK cURRENCYNOTSUPPORTEDFORBANK);

        R oNLYONEBANKSOURCEALLOWED(ONLYONEBANKSOURCEALLOWED oNLYONEBANKSOURCEALLOWED);

        R iNVALIDIBAN(INVALIDIBAN iNVALIDIBAN);

        R iBANCOUNTRYNOTSUPPORTED(IBANCOUNTRYNOTSUPPORTED iBANCOUNTRYNOTSUPPORTED);

        R pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE(PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE);

        R cARDNUMBERREQUIRED(CARDNUMBERREQUIRED cARDNUMBERREQUIRED);

        R cARDEXPIRYREQUIRED(CARDEXPIRYREQUIRED cARDEXPIRYREQUIRED);

        R iNCOMPATIBLEPARAMETERVALUEERROR(INCOMPATIBLEPARAMETERVALUEERROR iNCOMPATIBLEPARAMETERVALUEERROR);

        R vAULTINSTRUCTIONDUPLICATEDERROR(VAULTINSTRUCTIONDUPLICATEDERROR vAULTINSTRUCTIONDUPLICATEDERROR);

        R vAULTINSTRUCTIONREQUIREDERROR(VAULTINSTRUCTIONREQUIREDERROR vAULTINSTRUCTIONREQUIREDERROR);

        R mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR(MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR);

        R nOTELIGIBLEFORPNREFPROCESSINGERROR(NOTELIGIBLEFORPNREFPROCESSINGERROR nOTELIGIBLEFORPNREFPROCESSINGERROR);

        R pAYPALIDPROCESSINGINELIGIBILITYERROR(PAYPALIDPROCESSINGINELIGIBILITYERROR pAYPALIDPROCESSINGINELIGIBILITYERROR);

        R pAYPALTRANSACTIONIDNOTFOUNDERROR(PAYPALTRANSACTIONIDNOTFOUNDERROR pAYPALTRANSACTIONIDNOTFOUNDERROR);

        R pNREFNOTFOUNDERROR(PNREFNOTFOUNDERROR pNREFNOTFOUNDERROR);

        R iNVALIDSECURITYCODELENGTHERROR(INVALIDSECURITYCODELENGTHERROR iNVALIDSECURITYCODELENGTHERROR);

        R nOTENABLEDTOVAULTPAYMENTSOURCEERROR(NOTENABLEDTOVAULTPAYMENTSOURCEERROR nOTENABLEDTOVAULTPAYMENTSOURCEERROR);

        R cRYPTOGRAMISREQUIRED(CRYPTOGRAMISREQUIRED cRYPTOGRAMISREQUIRED);

        R eMVDATAREQUIREDERROR(EMVDATAREQUIREDERROR eMVDATAREQUIREDERROR);

        R aLIASDECLINEDBYPROCESSORERROR(ALIASDECLINEDBYPROCESSORERROR aLIASDECLINEDBYPROCESSORERROR);

        R bLIKONECLICKMISSINGREQUIREDPARAMETERERROR(BLIKONECLICKMISSINGREQUIREDPARAMETERERROR bLIKONECLICKMISSINGREQUIREDPARAMETERERROR);
    }

    /**
     * This is a implementation class for ORDERALREADYCAPTUREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERALREADYCAPTURED")
    private static class ORDERALREADYCAPTUREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ORDERALREADYCAPTURED oRDERALREADYCAPTURED;

        ORDERALREADYCAPTUREDCase(ORDERALREADYCAPTURED oRDERALREADYCAPTURED) {
            this.oRDERALREADYCAPTURED = oRDERALREADYCAPTURED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERALREADYCAPTURED(this.oRDERALREADYCAPTURED);
        }

        @JsonCreator
        private ORDERALREADYCAPTUREDCase(JsonNode jsonNode) throws IOException {
            this.oRDERALREADYCAPTURED = ApiHelper.deserialize(jsonNode,
                ORDERALREADYCAPTURED.class);
        }

        @Override
        public String toString() {
            return oRDERALREADYCAPTURED.toString();
        }
    }

    /**
     * This is a implementation class for ORDERALREADYAUTHORIZEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERALREADYAUTHORIZED")
    private static class ORDERALREADYAUTHORIZEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ORDERALREADYAUTHORIZED oRDERALREADYAUTHORIZED;

        ORDERALREADYAUTHORIZEDCase(ORDERALREADYAUTHORIZED oRDERALREADYAUTHORIZED) {
            this.oRDERALREADYAUTHORIZED = oRDERALREADYAUTHORIZED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERALREADYAUTHORIZED(this.oRDERALREADYAUTHORIZED);
        }

        @JsonCreator
        private ORDERALREADYAUTHORIZEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERALREADYAUTHORIZED = ApiHelper.deserialize(jsonNode,
                ORDERALREADYAUTHORIZED.class);
        }

        @Override
        public String toString() {
            return oRDERALREADYAUTHORIZED.toString();
        }
    }

    /**
     * This is a implementation class for ORDERCANNOTBECONFIRMEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERCANNOTBECONFIRMED")
    private static class ORDERCANNOTBECONFIRMEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ORDERCANNOTBECONFIRMED oRDERCANNOTBECONFIRMED;

        ORDERCANNOTBECONFIRMEDCase(ORDERCANNOTBECONFIRMED oRDERCANNOTBECONFIRMED) {
            this.oRDERCANNOTBECONFIRMED = oRDERCANNOTBECONFIRMED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERCANNOTBECONFIRMED(this.oRDERCANNOTBECONFIRMED);
        }

        @JsonCreator
        private ORDERCANNOTBECONFIRMEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERCANNOTBECONFIRMED = ApiHelper.deserialize(jsonNode,
                ORDERCANNOTBECONFIRMED.class);
        }

        @Override
        public String toString() {
            return oRDERCANNOTBECONFIRMED.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPREVIOUSREFERENCEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPREVIOUSREFERENCEERROR")
    private static class MISSINGPREVIOUSREFERENCEERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private MISSINGPREVIOUSREFERENCEERROR mISSINGPREVIOUSREFERENCEERROR;

        MISSINGPREVIOUSREFERENCEERRORCase(MISSINGPREVIOUSREFERENCEERROR mISSINGPREVIOUSREFERENCEERROR) {
            this.mISSINGPREVIOUSREFERENCEERROR = mISSINGPREVIOUSREFERENCEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPREVIOUSREFERENCEERROR(this.mISSINGPREVIOUSREFERENCEERROR);
        }

        @JsonCreator
        private MISSINGPREVIOUSREFERENCEERRORCase(JsonNode jsonNode) throws IOException {
            this.mISSINGPREVIOUSREFERENCEERROR = ApiHelper.deserialize(jsonNode,
                MISSINGPREVIOUSREFERENCEERROR.class);
        }

        @Override
        public String toString() {
            return mISSINGPREVIOUSREFERENCEERROR.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGCRYPTOGRAMERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGCRYPTOGRAMERROR")
    private static class MISSINGCRYPTOGRAMERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private MISSINGCRYPTOGRAMERROR mISSINGCRYPTOGRAMERROR;

        MISSINGCRYPTOGRAMERRORCase(MISSINGCRYPTOGRAMERROR mISSINGCRYPTOGRAMERROR) {
            this.mISSINGCRYPTOGRAMERROR = mISSINGCRYPTOGRAMERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGCRYPTOGRAMERROR(this.mISSINGCRYPTOGRAMERROR);
        }

        @JsonCreator
        private MISSINGCRYPTOGRAMERRORCase(JsonNode jsonNode) throws IOException {
            this.mISSINGCRYPTOGRAMERROR = ApiHelper.deserialize(jsonNode,
                MISSINGCRYPTOGRAMERROR.class);
        }

        @Override
        public String toString() {
            return mISSINGCRYPTOGRAMERROR.toString();
        }
    }

    /**
     * This is a implementation class for CURRENCYNOTSUPPORTEDFORCOUNTRYCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CURRENCYNOTSUPPORTEDFORCOUNTRY")
    private static class CURRENCYNOTSUPPORTEDFORCOUNTRYCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CURRENCYNOTSUPPORTEDFORCOUNTRY cURRENCYNOTSUPPORTEDFORCOUNTRY;

        CURRENCYNOTSUPPORTEDFORCOUNTRYCase(CURRENCYNOTSUPPORTEDFORCOUNTRY cURRENCYNOTSUPPORTEDFORCOUNTRY) {
            this.cURRENCYNOTSUPPORTEDFORCOUNTRY = cURRENCYNOTSUPPORTEDFORCOUNTRY;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cURRENCYNOTSUPPORTEDFORCOUNTRY(this.cURRENCYNOTSUPPORTEDFORCOUNTRY);
        }

        @JsonCreator
        private CURRENCYNOTSUPPORTEDFORCOUNTRYCase(JsonNode jsonNode) throws IOException {
            this.cURRENCYNOTSUPPORTEDFORCOUNTRY = ApiHelper.deserialize(jsonNode,
                CURRENCYNOTSUPPORTEDFORCOUNTRY.class);
        }

        @Override
        public String toString() {
            return cURRENCYNOTSUPPORTEDFORCOUNTRY.toString();
        }
    }

    /**
     * This is a implementation class for CARDEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDEXPIREDERROR")
    private static class CARDEXPIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CARDEXPIREDERROR cARDEXPIREDERROR;

        CARDEXPIREDERRORCase(CARDEXPIREDERROR cARDEXPIREDERROR) {
            this.cARDEXPIREDERROR = cARDEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDEXPIREDERROR(this.cARDEXPIREDERROR);
        }

        @JsonCreator
        private CARDEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.cARDEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                CARDEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return cARDEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for CARDTYPENOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDTYPENOTSUPPORTED")
    private static class CARDTYPENOTSUPPORTEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CARDTYPENOTSUPPORTED cARDTYPENOTSUPPORTED;

        CARDTYPENOTSUPPORTEDCase(CARDTYPENOTSUPPORTED cARDTYPENOTSUPPORTED) {
            this.cARDTYPENOTSUPPORTED = cARDTYPENOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDTYPENOTSUPPORTED(this.cARDTYPENOTSUPPORTED);
        }

        @JsonCreator
        private CARDTYPENOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.cARDTYPENOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                CARDTYPENOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return cARDTYPENOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for CURRENCYNOTSUPPORTEDFORCARDTYPECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CURRENCYNOTSUPPORTEDFORCARDTYPE")
    private static class CURRENCYNOTSUPPORTEDFORCARDTYPECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CURRENCYNOTSUPPORTEDFORCARDTYPE cURRENCYNOTSUPPORTEDFORCARDTYPE;

        CURRENCYNOTSUPPORTEDFORCARDTYPECase(CURRENCYNOTSUPPORTEDFORCARDTYPE cURRENCYNOTSUPPORTEDFORCARDTYPE) {
            this.cURRENCYNOTSUPPORTEDFORCARDTYPE = cURRENCYNOTSUPPORTEDFORCARDTYPE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cURRENCYNOTSUPPORTEDFORCARDTYPE(this.cURRENCYNOTSUPPORTEDFORCARDTYPE);
        }

        @JsonCreator
        private CURRENCYNOTSUPPORTEDFORCARDTYPECase(JsonNode jsonNode) throws IOException {
            this.cURRENCYNOTSUPPORTEDFORCARDTYPE = ApiHelper.deserialize(jsonNode,
                CURRENCYNOTSUPPORTEDFORCARDTYPE.class);
        }

        @Override
        public String toString() {
            return cURRENCYNOTSUPPORTEDFORCARDTYPE.toString();
        }
    }

    /**
     * This is a implementation class for ONLYONEPAYMENTSOURCEALLOWEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ONLYONEPAYMENTSOURCEALLOWED")
    private static class ONLYONEPAYMENTSOURCEALLOWEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ONLYONEPAYMENTSOURCEALLOWED oNLYONEPAYMENTSOURCEALLOWED;

        ONLYONEPAYMENTSOURCEALLOWEDCase(ONLYONEPAYMENTSOURCEALLOWED oNLYONEPAYMENTSOURCEALLOWED) {
            this.oNLYONEPAYMENTSOURCEALLOWED = oNLYONEPAYMENTSOURCEALLOWED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oNLYONEPAYMENTSOURCEALLOWED(this.oNLYONEPAYMENTSOURCEALLOWED);
        }

        @JsonCreator
        private ONLYONEPAYMENTSOURCEALLOWEDCase(JsonNode jsonNode) throws IOException {
            this.oNLYONEPAYMENTSOURCEALLOWED = ApiHelper.deserialize(jsonNode,
                ONLYONEPAYMENTSOURCEALLOWED.class);
        }

        @Override
        public String toString() {
            return oNLYONEPAYMENTSOURCEALLOWED.toString();
        }
    }

    /**
     * This is a implementation class for NOPAYMENTSOURCEPROVIDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOPAYMENTSOURCEPROVIDED")
    private static class NOPAYMENTSOURCEPROVIDEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private NOPAYMENTSOURCEPROVIDED nOPAYMENTSOURCEPROVIDED;

        NOPAYMENTSOURCEPROVIDEDCase(NOPAYMENTSOURCEPROVIDED nOPAYMENTSOURCEPROVIDED) {
            this.nOPAYMENTSOURCEPROVIDED = nOPAYMENTSOURCEPROVIDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOPAYMENTSOURCEPROVIDED(this.nOPAYMENTSOURCEPROVIDED);
        }

        @JsonCreator
        private NOPAYMENTSOURCEPROVIDEDCase(JsonNode jsonNode) throws IOException {
            this.nOPAYMENTSOURCEPROVIDED = ApiHelper.deserialize(jsonNode,
                NOPAYMENTSOURCEPROVIDED.class);
        }

        @Override
        public String toString() {
            return nOPAYMENTSOURCEPROVIDED.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTALREADYAPPROVEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTALREADYAPPROVED")
    private static class PAYMENTALREADYAPPROVEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYMENTALREADYAPPROVED pAYMENTALREADYAPPROVED;

        PAYMENTALREADYAPPROVEDCase(PAYMENTALREADYAPPROVED pAYMENTALREADYAPPROVED) {
            this.pAYMENTALREADYAPPROVED = pAYMENTALREADYAPPROVED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTALREADYAPPROVED(this.pAYMENTALREADYAPPROVED);
        }

        @JsonCreator
        private PAYMENTALREADYAPPROVEDCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTALREADYAPPROVED = ApiHelper.deserialize(jsonNode,
                PAYMENTALREADYAPPROVED.class);
        }

        @Override
        public String toString() {
            return pAYMENTALREADYAPPROVED.toString();
        }
    }

    /**
     * This is a implementation class for UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "UNSUPPORTEDPROCESSINGINSTRUCTIONERROR")
    private static class UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private UNSUPPORTEDPROCESSINGINSTRUCTIONERROR uNSUPPORTEDPROCESSINGINSTRUCTIONERROR;

        UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase(UNSUPPORTEDPROCESSINGINSTRUCTIONERROR uNSUPPORTEDPROCESSINGINSTRUCTIONERROR) {
            this.uNSUPPORTEDPROCESSINGINSTRUCTIONERROR = uNSUPPORTEDPROCESSINGINSTRUCTIONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.uNSUPPORTEDPROCESSINGINSTRUCTIONERROR(this.uNSUPPORTEDPROCESSINGINSTRUCTIONERROR);
        }

        @JsonCreator
        private UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase(JsonNode jsonNode) throws IOException {
            this.uNSUPPORTEDPROCESSINGINSTRUCTIONERROR = ApiHelper.deserialize(jsonNode,
                UNSUPPORTEDPROCESSINGINSTRUCTIONERROR.class);
        }

        @Override
        public String toString() {
            return uNSUPPORTEDPROCESSINGINSTRUCTIONERROR.toString();
        }
    }

    /**
     * This is a implementation class for ORDERCOMPLETEONPAYMENTAPPROVALERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERCOMPLETEONPAYMENTAPPROVALERROR")
    private static class ORDERCOMPLETEONPAYMENTAPPROVALERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ORDERCOMPLETEONPAYMENTAPPROVALERROR oRDERCOMPLETEONPAYMENTAPPROVALERROR;

        ORDERCOMPLETEONPAYMENTAPPROVALERRORCase(ORDERCOMPLETEONPAYMENTAPPROVALERROR oRDERCOMPLETEONPAYMENTAPPROVALERROR) {
            this.oRDERCOMPLETEONPAYMENTAPPROVALERROR = oRDERCOMPLETEONPAYMENTAPPROVALERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERCOMPLETEONPAYMENTAPPROVALERROR(this.oRDERCOMPLETEONPAYMENTAPPROVALERROR);
        }

        @JsonCreator
        private ORDERCOMPLETEONPAYMENTAPPROVALERRORCase(JsonNode jsonNode) throws IOException {
            this.oRDERCOMPLETEONPAYMENTAPPROVALERROR = ApiHelper.deserialize(jsonNode,
                ORDERCOMPLETEONPAYMENTAPPROVALERROR.class);
        }

        @Override
        public String toString() {
            return oRDERCOMPLETEONPAYMENTAPPROVALERROR.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDEXPIRYDATEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDEXPIRYDATEERROR")
    private static class INVALIDEXPIRYDATEERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private INVALIDEXPIRYDATEERROR iNVALIDEXPIRYDATEERROR;

        INVALIDEXPIRYDATEERRORCase(INVALIDEXPIRYDATEERROR iNVALIDEXPIRYDATEERROR) {
            this.iNVALIDEXPIRYDATEERROR = iNVALIDEXPIRYDATEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDEXPIRYDATEERROR(this.iNVALIDEXPIRYDATEERROR);
        }

        @JsonCreator
        private INVALIDEXPIRYDATEERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDEXPIRYDATEERROR = ApiHelper.deserialize(jsonNode,
                INVALIDEXPIRYDATEERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDEXPIRYDATEERROR.toString();
        }
    }

    /**
     * This is a implementation class for TOKENEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TOKENEXPIREDERROR")
    private static class TOKENEXPIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private TOKENEXPIREDERROR tOKENEXPIREDERROR;

        TOKENEXPIREDERRORCase(TOKENEXPIREDERROR tOKENEXPIREDERROR) {
            this.tOKENEXPIREDERROR = tOKENEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tOKENEXPIREDERROR(this.tOKENEXPIREDERROR);
        }

        @JsonCreator
        private TOKENEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.tOKENEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                TOKENEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return tOKENEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDGOOGLEPAYTOKENERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDGOOGLEPAYTOKENERROR")
    private static class INVALIDGOOGLEPAYTOKENERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private INVALIDGOOGLEPAYTOKENERROR iNVALIDGOOGLEPAYTOKENERROR;

        INVALIDGOOGLEPAYTOKENERRORCase(INVALIDGOOGLEPAYTOKENERROR iNVALIDGOOGLEPAYTOKENERROR) {
            this.iNVALIDGOOGLEPAYTOKENERROR = iNVALIDGOOGLEPAYTOKENERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDGOOGLEPAYTOKENERROR(this.iNVALIDGOOGLEPAYTOKENERROR);
        }

        @JsonCreator
        private INVALIDGOOGLEPAYTOKENERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDGOOGLEPAYTOKENERROR = ApiHelper.deserialize(jsonNode,
                INVALIDGOOGLEPAYTOKENERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDGOOGLEPAYTOKENERROR.toString();
        }
    }

    /**
     * This is a implementation class for GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR")
    private static class GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR;

        GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase(GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR) {
            this.gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR = gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR(this.gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR);
        }

        @JsonCreator
        private GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase(JsonNode jsonNode) throws IOException {
            this.gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR = ApiHelper.deserialize(jsonNode,
                GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR.class);
        }

        @Override
        public String toString() {
            return gOOGLEPAYGATEWAYMERCHANTIDMISMATCHERROR.toString();
        }
    }

    /**
     * This is a implementation class for CRYPTOGRAMREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CRYPTOGRAMREQUIREDERROR")
    private static class CRYPTOGRAMREQUIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CRYPTOGRAMREQUIREDERROR cRYPTOGRAMREQUIREDERROR;

        CRYPTOGRAMREQUIREDERRORCase(CRYPTOGRAMREQUIREDERROR cRYPTOGRAMREQUIREDERROR) {
            this.cRYPTOGRAMREQUIREDERROR = cRYPTOGRAMREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cRYPTOGRAMREQUIREDERROR(this.cRYPTOGRAMREQUIREDERROR);
        }

        @JsonCreator
        private CRYPTOGRAMREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.cRYPTOGRAMREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                CRYPTOGRAMREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return cRYPTOGRAMREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ONEOFPARAMETERSREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ONEOFPARAMETERSREQUIREDERROR")
    private static class ONEOFPARAMETERSREQUIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ONEOFPARAMETERSREQUIREDERROR oNEOFPARAMETERSREQUIREDERROR;

        ONEOFPARAMETERSREQUIREDERRORCase(ONEOFPARAMETERSREQUIREDERROR oNEOFPARAMETERSREQUIREDERROR) {
            this.oNEOFPARAMETERSREQUIREDERROR = oNEOFPARAMETERSREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oNEOFPARAMETERSREQUIREDERROR(this.oNEOFPARAMETERSREQUIREDERROR);
        }

        @JsonCreator
        private ONEOFPARAMETERSREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.oNEOFPARAMETERSREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                ONEOFPARAMETERSREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return oNEOFPARAMETERSREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for RETURNURLREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "RETURNURLREQUIRED")
    private static class RETURNURLREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private RETURNURLREQUIRED rETURNURLREQUIRED;

        RETURNURLREQUIREDCase(RETURNURLREQUIRED rETURNURLREQUIRED) {
            this.rETURNURLREQUIRED = rETURNURLREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rETURNURLREQUIRED(this.rETURNURLREQUIRED);
        }

        @JsonCreator
        private RETURNURLREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.rETURNURLREQUIRED = ApiHelper.deserialize(jsonNode,
                RETURNURLREQUIRED.class);
        }

        @Override
        public String toString() {
            return rETURNURLREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for CANCELURLREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CANCELURLREQUIRED")
    private static class CANCELURLREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CANCELURLREQUIRED cANCELURLREQUIRED;

        CANCELURLREQUIREDCase(CANCELURLREQUIRED cANCELURLREQUIRED) {
            this.cANCELURLREQUIRED = cANCELURLREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cANCELURLREQUIRED(this.cANCELURLREQUIRED);
        }

        @JsonCreator
        private CANCELURLREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.cANCELURLREQUIRED = ApiHelper.deserialize(jsonNode,
                CANCELURLREQUIRED.class);
        }

        @Override
        public String toString() {
            return cANCELURLREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE")
    private static class COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE;

        COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase(COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE) {
            this.cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE = cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE(this.cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE);
        }

        @JsonCreator
        private COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase(JsonNode jsonNode) throws IOException {
            this.cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE = ApiHelper.deserialize(jsonNode,
                COUNTRYNOTSUPPORTEDBYPAYMENTSOURCE.class);
        }

        @Override
        public String toString() {
            return cOUNTRYNOTSUPPORTEDBYPAYMENTSOURCE.toString();
        }
    }

    /**
     * This is a implementation class for REQUIREDPARAMETERFORPAYMENTSOURCECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REQUIREDPARAMETERFORPAYMENTSOURCE")
    private static class REQUIREDPARAMETERFORPAYMENTSOURCECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private REQUIREDPARAMETERFORPAYMENTSOURCE rEQUIREDPARAMETERFORPAYMENTSOURCE;

        REQUIREDPARAMETERFORPAYMENTSOURCECase(REQUIREDPARAMETERFORPAYMENTSOURCE rEQUIREDPARAMETERFORPAYMENTSOURCE) {
            this.rEQUIREDPARAMETERFORPAYMENTSOURCE = rEQUIREDPARAMETERFORPAYMENTSOURCE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEQUIREDPARAMETERFORPAYMENTSOURCE(this.rEQUIREDPARAMETERFORPAYMENTSOURCE);
        }

        @JsonCreator
        private REQUIREDPARAMETERFORPAYMENTSOURCECase(JsonNode jsonNode) throws IOException {
            this.rEQUIREDPARAMETERFORPAYMENTSOURCE = ApiHelper.deserialize(jsonNode,
                REQUIREDPARAMETERFORPAYMENTSOURCE.class);
        }

        @Override
        public String toString() {
            return rEQUIREDPARAMETERFORPAYMENTSOURCE.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPAYMENTPARAMERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPAYMENTPARAMERROR")
    private static class MISSINGPAYMENTPARAMERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private MISSINGPAYMENTPARAMERROR mISSINGPAYMENTPARAMERROR;

        MISSINGPAYMENTPARAMERRORCase(MISSINGPAYMENTPARAMERROR mISSINGPAYMENTPARAMERROR) {
            this.mISSINGPAYMENTPARAMERROR = mISSINGPAYMENTPARAMERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPAYMENTPARAMERROR(this.mISSINGPAYMENTPARAMERROR);
        }

        @JsonCreator
        private MISSINGPAYMENTPARAMERRORCase(JsonNode jsonNode) throws IOException {
            this.mISSINGPAYMENTPARAMERROR = ApiHelper.deserialize(jsonNode,
                MISSINGPAYMENTPARAMERROR.class);
        }

        @Override
        public String toString() {
            return mISSINGPAYMENTPARAMERROR.toString();
        }
    }

    /**
     * This is a implementation class for ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE")
    private static class ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE;

        ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase(ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE) {
            this.iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE = iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE(this.iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE);
        }

        @JsonCreator
        private ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase(JsonNode jsonNode) throws IOException {
            this.iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE = ApiHelper.deserialize(jsonNode,
                ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE.class);
        }

        @Override
        public String toString() {
            return iTEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCE.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR")
    private static class PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR;

        PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase(PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR) {
            this.pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR = pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR(this.pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR);
        }

        @JsonCreator
        private PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCEINFOCANNOTBEVERIFIEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCEDECLINEDBYPROCESSORERROR")
    private static class PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYMENTSOURCEDECLINEDBYPROCESSORERROR pAYMENTSOURCEDECLINEDBYPROCESSORERROR;

        PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase(PAYMENTSOURCEDECLINEDBYPROCESSORERROR pAYMENTSOURCEDECLINEDBYPROCESSORERROR) {
            this.pAYMENTSOURCEDECLINEDBYPROCESSORERROR = pAYMENTSOURCEDECLINEDBYPROCESSORERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCEDECLINEDBYPROCESSORERROR(this.pAYMENTSOURCEDECLINEDBYPROCESSORERROR);
        }

        @JsonCreator
        private PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCEDECLINEDBYPROCESSORERROR = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCEDECLINEDBYPROCESSORERROR.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCEDECLINEDBYPROCESSORERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCECANNOTBEUSEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCECANNOTBEUSEDERROR")
    private static class PAYMENTSOURCECANNOTBEUSEDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYMENTSOURCECANNOTBEUSEDERROR pAYMENTSOURCECANNOTBEUSEDERROR;

        PAYMENTSOURCECANNOTBEUSEDERRORCase(PAYMENTSOURCECANNOTBEUSEDERROR pAYMENTSOURCECANNOTBEUSEDERROR) {
            this.pAYMENTSOURCECANNOTBEUSEDERROR = pAYMENTSOURCECANNOTBEUSEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCECANNOTBEUSEDERROR(this.pAYMENTSOURCECANNOTBEUSEDERROR);
        }

        @JsonCreator
        private PAYMENTSOURCECANNOTBEUSEDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCECANNOTBEUSEDERROR = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCECANNOTBEUSEDERROR.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCECANNOTBEUSEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for SETUPERRORFORBANKCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SETUPERRORFORBANK")
    private static class SETUPERRORFORBANKCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private SETUPERRORFORBANK sETUPERRORFORBANK;

        SETUPERRORFORBANKCase(SETUPERRORFORBANK sETUPERRORFORBANK) {
            this.sETUPERRORFORBANK = sETUPERRORFORBANK;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sETUPERRORFORBANK(this.sETUPERRORFORBANK);
        }

        @JsonCreator
        private SETUPERRORFORBANKCase(JsonNode jsonNode) throws IOException {
            this.sETUPERRORFORBANK = ApiHelper.deserialize(jsonNode,
                SETUPERRORFORBANK.class);
        }

        @Override
        public String toString() {
            return sETUPERRORFORBANK.toString();
        }
    }

    /**
     * This is a implementation class for BANKNOTSUPPORTEDFORVERIFICATIONCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BANKNOTSUPPORTEDFORVERIFICATION")
    private static class BANKNOTSUPPORTEDFORVERIFICATIONCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private BANKNOTSUPPORTEDFORVERIFICATION bANKNOTSUPPORTEDFORVERIFICATION;

        BANKNOTSUPPORTEDFORVERIFICATIONCase(BANKNOTSUPPORTEDFORVERIFICATION bANKNOTSUPPORTEDFORVERIFICATION) {
            this.bANKNOTSUPPORTEDFORVERIFICATION = bANKNOTSUPPORTEDFORVERIFICATION;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bANKNOTSUPPORTEDFORVERIFICATION(this.bANKNOTSUPPORTEDFORVERIFICATION);
        }

        @JsonCreator
        private BANKNOTSUPPORTEDFORVERIFICATIONCase(JsonNode jsonNode) throws IOException {
            this.bANKNOTSUPPORTEDFORVERIFICATION = ApiHelper.deserialize(jsonNode,
                BANKNOTSUPPORTEDFORVERIFICATION.class);
        }

        @Override
        public String toString() {
            return bANKNOTSUPPORTEDFORVERIFICATION.toString();
        }
    }

    /**
     * This is a implementation class for APPLEPAYAMOUNTMISMATCHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "APPLEPAYAMOUNTMISMATCHERROR")
    private static class APPLEPAYAMOUNTMISMATCHERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private APPLEPAYAMOUNTMISMATCHERROR aPPLEPAYAMOUNTMISMATCHERROR;

        APPLEPAYAMOUNTMISMATCHERRORCase(APPLEPAYAMOUNTMISMATCHERROR aPPLEPAYAMOUNTMISMATCHERROR) {
            this.aPPLEPAYAMOUNTMISMATCHERROR = aPPLEPAYAMOUNTMISMATCHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aPPLEPAYAMOUNTMISMATCHERROR(this.aPPLEPAYAMOUNTMISMATCHERROR);
        }

        @JsonCreator
        private APPLEPAYAMOUNTMISMATCHERRORCase(JsonNode jsonNode) throws IOException {
            this.aPPLEPAYAMOUNTMISMATCHERROR = ApiHelper.deserialize(jsonNode,
                APPLEPAYAMOUNTMISMATCHERROR.class);
        }

        @Override
        public String toString() {
            return aPPLEPAYAMOUNTMISMATCHERROR.toString();
        }
    }

    /**
     * This is a implementation class for ONEOFTHEPARAMETERSREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ONEOFTHEPARAMETERSREQUIRED")
    private static class ONEOFTHEPARAMETERSREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ONEOFTHEPARAMETERSREQUIRED oNEOFTHEPARAMETERSREQUIRED;

        ONEOFTHEPARAMETERSREQUIREDCase(ONEOFTHEPARAMETERSREQUIRED oNEOFTHEPARAMETERSREQUIRED) {
            this.oNEOFTHEPARAMETERSREQUIRED = oNEOFTHEPARAMETERSREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oNEOFTHEPARAMETERSREQUIRED(this.oNEOFTHEPARAMETERSREQUIRED);
        }

        @JsonCreator
        private ONEOFTHEPARAMETERSREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.oNEOFTHEPARAMETERSREQUIRED = ApiHelper.deserialize(jsonNode,
                ONEOFTHEPARAMETERSREQUIRED.class);
        }

        @Override
        public String toString() {
            return oNEOFTHEPARAMETERSREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for BILLINGADDRESSINVALIDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BILLINGADDRESSINVALIDERROR")
    private static class BILLINGADDRESSINVALIDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private BILLINGADDRESSINVALIDERROR bILLINGADDRESSINVALIDERROR;

        BILLINGADDRESSINVALIDERRORCase(BILLINGADDRESSINVALIDERROR bILLINGADDRESSINVALIDERROR) {
            this.bILLINGADDRESSINVALIDERROR = bILLINGADDRESSINVALIDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bILLINGADDRESSINVALIDERROR(this.bILLINGADDRESSINVALIDERROR);
        }

        @JsonCreator
        private BILLINGADDRESSINVALIDERRORCase(JsonNode jsonNode) throws IOException {
            this.bILLINGADDRESSINVALIDERROR = ApiHelper.deserialize(jsonNode,
                BILLINGADDRESSINVALIDERROR.class);
        }

        @Override
        public String toString() {
            return bILLINGADDRESSINVALIDERROR.toString();
        }
    }

    /**
     * This is a implementation class for SHIPPINGADDRESSINVALIDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SHIPPINGADDRESSINVALIDERROR")
    private static class SHIPPINGADDRESSINVALIDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private SHIPPINGADDRESSINVALIDERROR sHIPPINGADDRESSINVALIDERROR;

        SHIPPINGADDRESSINVALIDERRORCase(SHIPPINGADDRESSINVALIDERROR sHIPPINGADDRESSINVALIDERROR) {
            this.sHIPPINGADDRESSINVALIDERROR = sHIPPINGADDRESSINVALIDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sHIPPINGADDRESSINVALIDERROR(this.sHIPPINGADDRESSINVALIDERROR);
        }

        @JsonCreator
        private SHIPPINGADDRESSINVALIDERRORCase(JsonNode jsonNode) throws IOException {
            this.sHIPPINGADDRESSINVALIDERROR = ApiHelper.deserialize(jsonNode,
                SHIPPINGADDRESSINVALIDERROR.class);
        }

        @Override
        public String toString() {
            return sHIPPINGADDRESSINVALIDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ORDERISPENDINGAPPROVALCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERISPENDINGAPPROVAL")
    private static class ORDERISPENDINGAPPROVALCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ORDERISPENDINGAPPROVAL oRDERISPENDINGAPPROVAL;

        ORDERISPENDINGAPPROVALCase(ORDERISPENDINGAPPROVAL oRDERISPENDINGAPPROVAL) {
            this.oRDERISPENDINGAPPROVAL = oRDERISPENDINGAPPROVAL;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERISPENDINGAPPROVAL(this.oRDERISPENDINGAPPROVAL);
        }

        @JsonCreator
        private ORDERISPENDINGAPPROVALCase(JsonNode jsonNode) throws IOException {
            this.oRDERISPENDINGAPPROVAL = ApiHelper.deserialize(jsonNode,
                ORDERISPENDINGAPPROVAL.class);
        }

        @Override
        public String toString() {
            return oRDERISPENDINGAPPROVAL.toString();
        }
    }

    /**
     * This is a implementation class for DEVICEDATANOTAVAILABLECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DEVICEDATANOTAVAILABLE")
    private static class DEVICEDATANOTAVAILABLECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private DEVICEDATANOTAVAILABLE dEVICEDATANOTAVAILABLE;

        DEVICEDATANOTAVAILABLECase(DEVICEDATANOTAVAILABLE dEVICEDATANOTAVAILABLE) {
            this.dEVICEDATANOTAVAILABLE = dEVICEDATANOTAVAILABLE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dEVICEDATANOTAVAILABLE(this.dEVICEDATANOTAVAILABLE);
        }

        @JsonCreator
        private DEVICEDATANOTAVAILABLECase(JsonNode jsonNode) throws IOException {
            this.dEVICEDATANOTAVAILABLE = ApiHelper.deserialize(jsonNode,
                DEVICEDATANOTAVAILABLE.class);
        }

        @Override
        public String toString() {
            return dEVICEDATANOTAVAILABLE.toString();
        }
    }

    /**
     * This is a implementation class for CURRENCYNOTSUPPORTEDFORBANKCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CURRENCYNOTSUPPORTEDFORBANK")
    private static class CURRENCYNOTSUPPORTEDFORBANKCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CURRENCYNOTSUPPORTEDFORBANK cURRENCYNOTSUPPORTEDFORBANK;

        CURRENCYNOTSUPPORTEDFORBANKCase(CURRENCYNOTSUPPORTEDFORBANK cURRENCYNOTSUPPORTEDFORBANK) {
            this.cURRENCYNOTSUPPORTEDFORBANK = cURRENCYNOTSUPPORTEDFORBANK;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cURRENCYNOTSUPPORTEDFORBANK(this.cURRENCYNOTSUPPORTEDFORBANK);
        }

        @JsonCreator
        private CURRENCYNOTSUPPORTEDFORBANKCase(JsonNode jsonNode) throws IOException {
            this.cURRENCYNOTSUPPORTEDFORBANK = ApiHelper.deserialize(jsonNode,
                CURRENCYNOTSUPPORTEDFORBANK.class);
        }

        @Override
        public String toString() {
            return cURRENCYNOTSUPPORTEDFORBANK.toString();
        }
    }

    /**
     * This is a implementation class for ONLYONEBANKSOURCEALLOWEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ONLYONEBANKSOURCEALLOWED")
    private static class ONLYONEBANKSOURCEALLOWEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ONLYONEBANKSOURCEALLOWED oNLYONEBANKSOURCEALLOWED;

        ONLYONEBANKSOURCEALLOWEDCase(ONLYONEBANKSOURCEALLOWED oNLYONEBANKSOURCEALLOWED) {
            this.oNLYONEBANKSOURCEALLOWED = oNLYONEBANKSOURCEALLOWED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oNLYONEBANKSOURCEALLOWED(this.oNLYONEBANKSOURCEALLOWED);
        }

        @JsonCreator
        private ONLYONEBANKSOURCEALLOWEDCase(JsonNode jsonNode) throws IOException {
            this.oNLYONEBANKSOURCEALLOWED = ApiHelper.deserialize(jsonNode,
                ONLYONEBANKSOURCEALLOWED.class);
        }

        @Override
        public String toString() {
            return oNLYONEBANKSOURCEALLOWED.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDIBANCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDIBAN")
    private static class INVALIDIBANCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private INVALIDIBAN iNVALIDIBAN;

        INVALIDIBANCase(INVALIDIBAN iNVALIDIBAN) {
            this.iNVALIDIBAN = iNVALIDIBAN;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDIBAN(this.iNVALIDIBAN);
        }

        @JsonCreator
        private INVALIDIBANCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDIBAN = ApiHelper.deserialize(jsonNode,
                INVALIDIBAN.class);
        }

        @Override
        public String toString() {
            return iNVALIDIBAN.toString();
        }
    }

    /**
     * This is a implementation class for IBANCOUNTRYNOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "IBANCOUNTRYNOTSUPPORTED")
    private static class IBANCOUNTRYNOTSUPPORTEDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private IBANCOUNTRYNOTSUPPORTED iBANCOUNTRYNOTSUPPORTED;

        IBANCOUNTRYNOTSUPPORTEDCase(IBANCOUNTRYNOTSUPPORTED iBANCOUNTRYNOTSUPPORTED) {
            this.iBANCOUNTRYNOTSUPPORTED = iBANCOUNTRYNOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iBANCOUNTRYNOTSUPPORTED(this.iBANCOUNTRYNOTSUPPORTED);
        }

        @JsonCreator
        private IBANCOUNTRYNOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.iBANCOUNTRYNOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                IBANCOUNTRYNOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return iBANCOUNTRYNOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE")
    private static class PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE;

        PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase(PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE) {
            this.pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE = pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE(this.pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE);
        }

        @JsonCreator
        private PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase(JsonNode jsonNode) throws IOException {
            this.pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE = ApiHelper.deserialize(jsonNode,
                PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE.class);
        }

        @Override
        public String toString() {
            return pAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCE.toString();
        }
    }

    /**
     * This is a implementation class for CARDNUMBERREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDNUMBERREQUIRED")
    private static class CARDNUMBERREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CARDNUMBERREQUIRED cARDNUMBERREQUIRED;

        CARDNUMBERREQUIREDCase(CARDNUMBERREQUIRED cARDNUMBERREQUIRED) {
            this.cARDNUMBERREQUIRED = cARDNUMBERREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDNUMBERREQUIRED(this.cARDNUMBERREQUIRED);
        }

        @JsonCreator
        private CARDNUMBERREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.cARDNUMBERREQUIRED = ApiHelper.deserialize(jsonNode,
                CARDNUMBERREQUIRED.class);
        }

        @Override
        public String toString() {
            return cARDNUMBERREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for CARDEXPIRYREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDEXPIRYREQUIRED")
    private static class CARDEXPIRYREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CARDEXPIRYREQUIRED cARDEXPIRYREQUIRED;

        CARDEXPIRYREQUIREDCase(CARDEXPIRYREQUIRED cARDEXPIRYREQUIRED) {
            this.cARDEXPIRYREQUIRED = cARDEXPIRYREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDEXPIRYREQUIRED(this.cARDEXPIRYREQUIRED);
        }

        @JsonCreator
        private CARDEXPIRYREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.cARDEXPIRYREQUIRED = ApiHelper.deserialize(jsonNode,
                CARDEXPIRYREQUIRED.class);
        }

        @Override
        public String toString() {
            return cARDEXPIRYREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for INCOMPATIBLEPARAMETERVALUEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INCOMPATIBLEPARAMETERVALUEERROR")
    private static class INCOMPATIBLEPARAMETERVALUEERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private INCOMPATIBLEPARAMETERVALUEERROR iNCOMPATIBLEPARAMETERVALUEERROR;

        INCOMPATIBLEPARAMETERVALUEERRORCase(INCOMPATIBLEPARAMETERVALUEERROR iNCOMPATIBLEPARAMETERVALUEERROR) {
            this.iNCOMPATIBLEPARAMETERVALUEERROR = iNCOMPATIBLEPARAMETERVALUEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNCOMPATIBLEPARAMETERVALUEERROR(this.iNCOMPATIBLEPARAMETERVALUEERROR);
        }

        @JsonCreator
        private INCOMPATIBLEPARAMETERVALUEERRORCase(JsonNode jsonNode) throws IOException {
            this.iNCOMPATIBLEPARAMETERVALUEERROR = ApiHelper.deserialize(jsonNode,
                INCOMPATIBLEPARAMETERVALUEERROR.class);
        }

        @Override
        public String toString() {
            return iNCOMPATIBLEPARAMETERVALUEERROR.toString();
        }
    }

    /**
     * This is a implementation class for VAULTINSTRUCTIONDUPLICATEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VAULTINSTRUCTIONDUPLICATEDERROR")
    private static class VAULTINSTRUCTIONDUPLICATEDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private VAULTINSTRUCTIONDUPLICATEDERROR vAULTINSTRUCTIONDUPLICATEDERROR;

        VAULTINSTRUCTIONDUPLICATEDERRORCase(VAULTINSTRUCTIONDUPLICATEDERROR vAULTINSTRUCTIONDUPLICATEDERROR) {
            this.vAULTINSTRUCTIONDUPLICATEDERROR = vAULTINSTRUCTIONDUPLICATEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vAULTINSTRUCTIONDUPLICATEDERROR(this.vAULTINSTRUCTIONDUPLICATEDERROR);
        }

        @JsonCreator
        private VAULTINSTRUCTIONDUPLICATEDERRORCase(JsonNode jsonNode) throws IOException {
            this.vAULTINSTRUCTIONDUPLICATEDERROR = ApiHelper.deserialize(jsonNode,
                VAULTINSTRUCTIONDUPLICATEDERROR.class);
        }

        @Override
        public String toString() {
            return vAULTINSTRUCTIONDUPLICATEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for VAULTINSTRUCTIONREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VAULTINSTRUCTIONREQUIREDERROR")
    private static class VAULTINSTRUCTIONREQUIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private VAULTINSTRUCTIONREQUIREDERROR vAULTINSTRUCTIONREQUIREDERROR;

        VAULTINSTRUCTIONREQUIREDERRORCase(VAULTINSTRUCTIONREQUIREDERROR vAULTINSTRUCTIONREQUIREDERROR) {
            this.vAULTINSTRUCTIONREQUIREDERROR = vAULTINSTRUCTIONREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vAULTINSTRUCTIONREQUIREDERROR(this.vAULTINSTRUCTIONREQUIREDERROR);
        }

        @JsonCreator
        private VAULTINSTRUCTIONREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.vAULTINSTRUCTIONREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                VAULTINSTRUCTIONREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return vAULTINSTRUCTIONREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR")
    private static class MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR;

        MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase(MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR) {
            this.mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR = mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR(this.mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR);
        }

        @JsonCreator
        private MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase(JsonNode jsonNode) throws IOException {
            this.mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR = ApiHelper.deserialize(jsonNode,
                MISMATCHEDVAULTIDTOPAYMENTSOURCEERROR.class);
        }

        @Override
        public String toString() {
            return mISMATCHEDVAULTIDTOPAYMENTSOURCEERROR.toString();
        }
    }

    /**
     * This is a implementation class for NOTELIGIBLEFORPNREFPROCESSINGERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTELIGIBLEFORPNREFPROCESSINGERROR")
    private static class NOTELIGIBLEFORPNREFPROCESSINGERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private NOTELIGIBLEFORPNREFPROCESSINGERROR nOTELIGIBLEFORPNREFPROCESSINGERROR;

        NOTELIGIBLEFORPNREFPROCESSINGERRORCase(NOTELIGIBLEFORPNREFPROCESSINGERROR nOTELIGIBLEFORPNREFPROCESSINGERROR) {
            this.nOTELIGIBLEFORPNREFPROCESSINGERROR = nOTELIGIBLEFORPNREFPROCESSINGERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTELIGIBLEFORPNREFPROCESSINGERROR(this.nOTELIGIBLEFORPNREFPROCESSINGERROR);
        }

        @JsonCreator
        private NOTELIGIBLEFORPNREFPROCESSINGERRORCase(JsonNode jsonNode) throws IOException {
            this.nOTELIGIBLEFORPNREFPROCESSINGERROR = ApiHelper.deserialize(jsonNode,
                NOTELIGIBLEFORPNREFPROCESSINGERROR.class);
        }

        @Override
        public String toString() {
            return nOTELIGIBLEFORPNREFPROCESSINGERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALIDPROCESSINGINELIGIBILITYERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALIDPROCESSINGINELIGIBILITYERROR")
    private static class PAYPALIDPROCESSINGINELIGIBILITYERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYPALIDPROCESSINGINELIGIBILITYERROR pAYPALIDPROCESSINGINELIGIBILITYERROR;

        PAYPALIDPROCESSINGINELIGIBILITYERRORCase(PAYPALIDPROCESSINGINELIGIBILITYERROR pAYPALIDPROCESSINGINELIGIBILITYERROR) {
            this.pAYPALIDPROCESSINGINELIGIBILITYERROR = pAYPALIDPROCESSINGINELIGIBILITYERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALIDPROCESSINGINELIGIBILITYERROR(this.pAYPALIDPROCESSINGINELIGIBILITYERROR);
        }

        @JsonCreator
        private PAYPALIDPROCESSINGINELIGIBILITYERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYPALIDPROCESSINGINELIGIBILITYERROR = ApiHelper.deserialize(jsonNode,
                PAYPALIDPROCESSINGINELIGIBILITYERROR.class);
        }

        @Override
        public String toString() {
            return pAYPALIDPROCESSINGINELIGIBILITYERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALTRANSACTIONIDNOTFOUNDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALTRANSACTIONIDNOTFOUNDERROR")
    private static class PAYPALTRANSACTIONIDNOTFOUNDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PAYPALTRANSACTIONIDNOTFOUNDERROR pAYPALTRANSACTIONIDNOTFOUNDERROR;

        PAYPALTRANSACTIONIDNOTFOUNDERRORCase(PAYPALTRANSACTIONIDNOTFOUNDERROR pAYPALTRANSACTIONIDNOTFOUNDERROR) {
            this.pAYPALTRANSACTIONIDNOTFOUNDERROR = pAYPALTRANSACTIONIDNOTFOUNDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALTRANSACTIONIDNOTFOUNDERROR(this.pAYPALTRANSACTIONIDNOTFOUNDERROR);
        }

        @JsonCreator
        private PAYPALTRANSACTIONIDNOTFOUNDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYPALTRANSACTIONIDNOTFOUNDERROR = ApiHelper.deserialize(jsonNode,
                PAYPALTRANSACTIONIDNOTFOUNDERROR.class);
        }

        @Override
        public String toString() {
            return pAYPALTRANSACTIONIDNOTFOUNDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PNREFNOTFOUNDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PNREFNOTFOUNDERROR")
    private static class PNREFNOTFOUNDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private PNREFNOTFOUNDERROR pNREFNOTFOUNDERROR;

        PNREFNOTFOUNDERRORCase(PNREFNOTFOUNDERROR pNREFNOTFOUNDERROR) {
            this.pNREFNOTFOUNDERROR = pNREFNOTFOUNDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pNREFNOTFOUNDERROR(this.pNREFNOTFOUNDERROR);
        }

        @JsonCreator
        private PNREFNOTFOUNDERRORCase(JsonNode jsonNode) throws IOException {
            this.pNREFNOTFOUNDERROR = ApiHelper.deserialize(jsonNode,
                PNREFNOTFOUNDERROR.class);
        }

        @Override
        public String toString() {
            return pNREFNOTFOUNDERROR.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSECURITYCODELENGTHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSECURITYCODELENGTHERROR")
    private static class INVALIDSECURITYCODELENGTHERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private INVALIDSECURITYCODELENGTHERROR iNVALIDSECURITYCODELENGTHERROR;

        INVALIDSECURITYCODELENGTHERRORCase(INVALIDSECURITYCODELENGTHERROR iNVALIDSECURITYCODELENGTHERROR) {
            this.iNVALIDSECURITYCODELENGTHERROR = iNVALIDSECURITYCODELENGTHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSECURITYCODELENGTHERROR(this.iNVALIDSECURITYCODELENGTHERROR);
        }

        @JsonCreator
        private INVALIDSECURITYCODELENGTHERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSECURITYCODELENGTHERROR = ApiHelper.deserialize(jsonNode,
                INVALIDSECURITYCODELENGTHERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDSECURITYCODELENGTHERROR.toString();
        }
    }

    /**
     * This is a implementation class for NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTENABLEDTOVAULTPAYMENTSOURCEERROR")
    private static class NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private NOTENABLEDTOVAULTPAYMENTSOURCEERROR nOTENABLEDTOVAULTPAYMENTSOURCEERROR;

        NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase(NOTENABLEDTOVAULTPAYMENTSOURCEERROR nOTENABLEDTOVAULTPAYMENTSOURCEERROR) {
            this.nOTENABLEDTOVAULTPAYMENTSOURCEERROR = nOTENABLEDTOVAULTPAYMENTSOURCEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTENABLEDTOVAULTPAYMENTSOURCEERROR(this.nOTENABLEDTOVAULTPAYMENTSOURCEERROR);
        }

        @JsonCreator
        private NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase(JsonNode jsonNode) throws IOException {
            this.nOTENABLEDTOVAULTPAYMENTSOURCEERROR = ApiHelper.deserialize(jsonNode,
                NOTENABLEDTOVAULTPAYMENTSOURCEERROR.class);
        }

        @Override
        public String toString() {
            return nOTENABLEDTOVAULTPAYMENTSOURCEERROR.toString();
        }
    }

    /**
     * This is a implementation class for CRYPTOGRAMISREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CRYPTOGRAMISREQUIRED")
    private static class CRYPTOGRAMISREQUIREDCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private CRYPTOGRAMISREQUIRED cRYPTOGRAMISREQUIRED;

        CRYPTOGRAMISREQUIREDCase(CRYPTOGRAMISREQUIRED cRYPTOGRAMISREQUIRED) {
            this.cRYPTOGRAMISREQUIRED = cRYPTOGRAMISREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cRYPTOGRAMISREQUIRED(this.cRYPTOGRAMISREQUIRED);
        }

        @JsonCreator
        private CRYPTOGRAMISREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.cRYPTOGRAMISREQUIRED = ApiHelper.deserialize(jsonNode,
                CRYPTOGRAMISREQUIRED.class);
        }

        @Override
        public String toString() {
            return cRYPTOGRAMISREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for EMVDATAREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "EMVDATAREQUIREDERROR")
    private static class EMVDATAREQUIREDERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private EMVDATAREQUIREDERROR eMVDATAREQUIREDERROR;

        EMVDATAREQUIREDERRORCase(EMVDATAREQUIREDERROR eMVDATAREQUIREDERROR) {
            this.eMVDATAREQUIREDERROR = eMVDATAREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.eMVDATAREQUIREDERROR(this.eMVDATAREQUIREDERROR);
        }

        @JsonCreator
        private EMVDATAREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.eMVDATAREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                EMVDATAREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return eMVDATAREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ALIASDECLINEDBYPROCESSORERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ALIASDECLINEDBYPROCESSORERROR")
    private static class ALIASDECLINEDBYPROCESSORERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private ALIASDECLINEDBYPROCESSORERROR aLIASDECLINEDBYPROCESSORERROR;

        ALIASDECLINEDBYPROCESSORERRORCase(ALIASDECLINEDBYPROCESSORERROR aLIASDECLINEDBYPROCESSORERROR) {
            this.aLIASDECLINEDBYPROCESSORERROR = aLIASDECLINEDBYPROCESSORERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aLIASDECLINEDBYPROCESSORERROR(this.aLIASDECLINEDBYPROCESSORERROR);
        }

        @JsonCreator
        private ALIASDECLINEDBYPROCESSORERRORCase(JsonNode jsonNode) throws IOException {
            this.aLIASDECLINEDBYPROCESSORERROR = ApiHelper.deserialize(jsonNode,
                ALIASDECLINEDBYPROCESSORERROR.class);
        }

        @Override
        public String toString() {
            return aLIASDECLINEDBYPROCESSORERROR.toString();
        }
    }

    /**
     * This is a implementation class for BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BLIKONECLICKMISSINGREQUIREDPARAMETERERROR")
    private static class BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase extends OrdersConfirm422IssuesItems {

        @JsonValue
        private BLIKONECLICKMISSINGREQUIREDPARAMETERERROR bLIKONECLICKMISSINGREQUIREDPARAMETERERROR;

        BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase(BLIKONECLICKMISSINGREQUIREDPARAMETERERROR bLIKONECLICKMISSINGREQUIREDPARAMETERERROR) {
            this.bLIKONECLICKMISSINGREQUIREDPARAMETERERROR = bLIKONECLICKMISSINGREQUIREDPARAMETERERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bLIKONECLICKMISSINGREQUIREDPARAMETERERROR(this.bLIKONECLICKMISSINGREQUIREDPARAMETERERROR);
        }

        @JsonCreator
        private BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase(JsonNode jsonNode) throws IOException {
            this.bLIKONECLICKMISSINGREQUIREDPARAMETERERROR = ApiHelper.deserialize(jsonNode,
                BLIKONECLICKMISSINGREQUIREDPARAMETERERROR.class);
        }

        @Override
        public String toString() {
            return bLIKONECLICKMISSINGREQUIREDPARAMETERERROR.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersConfirm422IssuesItems.
     */
    protected static class OrdersConfirm422IssuesItemsDeserializer
            extends JsonDeserializer<OrdersConfirm422IssuesItems> {

        @Override
        public OrdersConfirm422IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(ORDERALREADYCAPTUREDCase.class,
                    ORDERALREADYAUTHORIZEDCase.class, ORDERCANNOTBECONFIRMEDCase.class,
                    MISSINGPREVIOUSREFERENCEERRORCase.class, MISSINGCRYPTOGRAMERRORCase.class,
                    CURRENCYNOTSUPPORTEDFORCOUNTRYCase.class, CARDEXPIREDERRORCase.class,
                    CARDTYPENOTSUPPORTEDCase.class, CURRENCYNOTSUPPORTEDFORCARDTYPECase.class,
                    ONLYONEPAYMENTSOURCEALLOWEDCase.class, NOPAYMENTSOURCEPROVIDEDCase.class,
                    PAYMENTALREADYAPPROVEDCase.class,
                    UNSUPPORTEDPROCESSINGINSTRUCTIONERRORCase.class,
                    ORDERCOMPLETEONPAYMENTAPPROVALERRORCase.class, INVALIDEXPIRYDATEERRORCase.class,
                    TOKENEXPIREDERRORCase.class, INVALIDGOOGLEPAYTOKENERRORCase.class,
                    GOOGLEPAYGATEWAYMERCHANTIDMISMATCHERRORCase.class,
                    CRYPTOGRAMREQUIREDERRORCase.class, ONEOFPARAMETERSREQUIREDERRORCase.class,
                    RETURNURLREQUIREDCase.class, CANCELURLREQUIREDCase.class,
                    COUNTRYNOTSUPPORTEDBYPAYMENTSOURCECase.class,
                    REQUIREDPARAMETERFORPAYMENTSOURCECase.class, MISSINGPAYMENTPARAMERRORCase.class,
                    ITEMCATEGORYNOTSUPPORTEDBYPAYMENTSOURCECase.class,
                    PAYMENTSOURCEINFOCANNOTBEVERIFIEDERRORCase.class,
                    PAYMENTSOURCEDECLINEDBYPROCESSORERRORCase.class,
                    PAYMENTSOURCECANNOTBEUSEDERRORCase.class, SETUPERRORFORBANKCase.class,
                    BANKNOTSUPPORTEDFORVERIFICATIONCase.class,
                    APPLEPAYAMOUNTMISMATCHERRORCase.class, ONEOFTHEPARAMETERSREQUIREDCase.class,
                    BILLINGADDRESSINVALIDERRORCase.class, SHIPPINGADDRESSINVALIDERRORCase.class,
                    ORDERISPENDINGAPPROVALCase.class, DEVICEDATANOTAVAILABLECase.class,
                    CURRENCYNOTSUPPORTEDFORBANKCase.class, ONLYONEBANKSOURCEALLOWEDCase.class,
                    INVALIDIBANCase.class, IBANCOUNTRYNOTSUPPORTEDCase.class,
                    PAYEECOUNTRYNOTSUPPORTEDFORPAYMENTSOURCECase.class,
                    CARDNUMBERREQUIREDCase.class, CARDEXPIRYREQUIREDCase.class,
                    INCOMPATIBLEPARAMETERVALUEERRORCase.class,
                    VAULTINSTRUCTIONDUPLICATEDERRORCase.class,
                    VAULTINSTRUCTIONREQUIREDERRORCase.class,
                    MISMATCHEDVAULTIDTOPAYMENTSOURCEERRORCase.class,
                    NOTELIGIBLEFORPNREFPROCESSINGERRORCase.class,
                    PAYPALIDPROCESSINGINELIGIBILITYERRORCase.class,
                    PAYPALTRANSACTIONIDNOTFOUNDERRORCase.class, PNREFNOTFOUNDERRORCase.class,
                    INVALIDSECURITYCODELENGTHERRORCase.class,
                    NOTENABLEDTOVAULTPAYMENTSOURCEERRORCase.class, CRYPTOGRAMISREQUIREDCase.class,
                    EMVDATAREQUIREDERRORCase.class, ALIASDECLINEDBYPROCESSORERRORCase.class,
                    BLIKONECLICKMISSINGREQUIREDPARAMETERERRORCase.class), false);
        }
    }

}
