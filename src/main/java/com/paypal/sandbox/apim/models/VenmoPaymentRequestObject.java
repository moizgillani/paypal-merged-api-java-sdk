/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for VenmoPaymentRequestObject type.
 */
public class VenmoPaymentRequestObject {
    private String vaultId;
    private String emailAddress;
    private VenmoWalletExperienceContext experienceContext;
    private VenmoWalletAttributes attributes;

    /**
     * Default constructor.
     */
    public VenmoPaymentRequestObject() {
    }

    /**
     * Initialization constructor.
     * @param  vaultId  String value for vaultId.
     * @param  emailAddress  String value for emailAddress.
     * @param  experienceContext  VenmoWalletExperienceContext value for experienceContext.
     * @param  attributes  VenmoWalletAttributes value for attributes.
     */
    public VenmoPaymentRequestObject(
            String vaultId,
            String emailAddress,
            VenmoWalletExperienceContext experienceContext,
            VenmoWalletAttributes attributes) {
        this.vaultId = vaultId;
        this.emailAddress = emailAddress;
        this.experienceContext = experienceContext;
        this.attributes = attributes;
    }

    /**
     * Getter for VaultId.
     * The PayPal-generated ID for the saved Venmo wallet payment_source. This ID should be stored
     * on the merchant's server so the saved payment source can be used for future transactions.
     * @return Returns the String
     */
    @JsonGetter("vault_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVaultId() {
        return vaultId;
    }

    /**
     * Setter for VaultId.
     * The PayPal-generated ID for the saved Venmo wallet payment_source. This ID should be stored
     * on the merchant's server so the saved payment source can be used for future transactions.
     * @param vaultId Value for String
     */
    @JsonSetter("vault_id")
    public void setVaultId(String vaultId) {
        this.vaultId = vaultId;
    }

    /**
     * Getter for EmailAddress.
     * The email address of the payer.
     * @return Returns the String
     */
    @JsonGetter("email_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Setter for EmailAddress.
     * The email address of the payer.
     * @param emailAddress Value for String
     */
    @JsonSetter("email_address")
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    /**
     * Getter for ExperienceContext.
     * Customizes the buyer experience during the approval process for payment with
     * Venmo.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Partners and Marketplaces might configure
     * &lt;code&gt;shipping_preference&lt;/code&gt; during partner account setup, which overrides the request
     * values.&lt;/blockquote&gt;
     * @return Returns the VenmoWalletExperienceContext
     */
    @JsonGetter("experience_context")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public VenmoWalletExperienceContext getExperienceContext() {
        return experienceContext;
    }

    /**
     * Setter for ExperienceContext.
     * Customizes the buyer experience during the approval process for payment with
     * Venmo.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Partners and Marketplaces might configure
     * &lt;code&gt;shipping_preference&lt;/code&gt; during partner account setup, which overrides the request
     * values.&lt;/blockquote&gt;
     * @param experienceContext Value for VenmoWalletExperienceContext
     */
    @JsonSetter("experience_context")
    public void setExperienceContext(VenmoWalletExperienceContext experienceContext) {
        this.experienceContext = experienceContext;
    }

    /**
     * Getter for Attributes.
     * Additional attributes associated with the use of this wallet.
     * @return Returns the VenmoWalletAttributes
     */
    @JsonGetter("attributes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public VenmoWalletAttributes getAttributes() {
        return attributes;
    }

    /**
     * Setter for Attributes.
     * Additional attributes associated with the use of this wallet.
     * @param attributes Value for VenmoWalletAttributes
     */
    @JsonSetter("attributes")
    public void setAttributes(VenmoWalletAttributes attributes) {
        this.attributes = attributes;
    }

    /**
     * Converts this VenmoPaymentRequestObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "VenmoPaymentRequestObject [" + "vaultId=" + vaultId + ", emailAddress="
                + emailAddress + ", experienceContext=" + experienceContext + ", attributes="
                + attributes + "]";
    }

    /**
     * Builds a new {@link VenmoPaymentRequestObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link VenmoPaymentRequestObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .vaultId(getVaultId())
                .emailAddress(getEmailAddress())
                .experienceContext(getExperienceContext())
                .attributes(getAttributes());
        return builder;
    }

    /**
     * Class to build instances of {@link VenmoPaymentRequestObject}.
     */
    public static class Builder {
        private String vaultId;
        private String emailAddress;
        private VenmoWalletExperienceContext experienceContext;
        private VenmoWalletAttributes attributes;



        /**
         * Setter for vaultId.
         * @param  vaultId  String value for vaultId.
         * @return Builder
         */
        public Builder vaultId(String vaultId) {
            this.vaultId = vaultId;
            return this;
        }

        /**
         * Setter for emailAddress.
         * @param  emailAddress  String value for emailAddress.
         * @return Builder
         */
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * Setter for experienceContext.
         * @param  experienceContext  VenmoWalletExperienceContext value for experienceContext.
         * @return Builder
         */
        public Builder experienceContext(VenmoWalletExperienceContext experienceContext) {
            this.experienceContext = experienceContext;
            return this;
        }

        /**
         * Setter for attributes.
         * @param  attributes  VenmoWalletAttributes value for attributes.
         * @return Builder
         */
        public Builder attributes(VenmoWalletAttributes attributes) {
            this.attributes = attributes;
            return this;
        }

        /**
         * Builds a new {@link VenmoPaymentRequestObject} object using the set fields.
         * @return {@link VenmoPaymentRequestObject}
         */
        public VenmoPaymentRequestObject build() {
            return new VenmoPaymentRequestObject(vaultId, emailAddress, experienceContext,
                    attributes);
        }
    }
}
