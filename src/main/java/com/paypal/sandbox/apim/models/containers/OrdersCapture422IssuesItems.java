/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.AGREEMENTALREADYCANCELLEDRESULT;
import com.paypal.sandbox.apim.models.APPLEPAYAMOUNTMISMATCHERRORRESPONSE;
import com.paypal.sandbox.apim.models.AUTHCAPTURENOTENABLEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.BANKNOTSUPPORTEDFORVERIFICATIONERROR;
import com.paypal.sandbox.apim.models.BILLINGAGREEMENTIDMISMATCHERROR;
import com.paypal.sandbox.apim.models.BILLINGAGREEMENTNOTFOUNDRESULT;
import com.paypal.sandbox.apim.models.CANCELURLREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.CARDBRANDNOTSUPPORTEDERROR;
import com.paypal.sandbox.apim.models.CARDEXPIRYREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.CARDNUMBERREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE;
import com.paypal.sandbox.apim.models.COMPLIANCEVIOLATIONERROR;
import com.paypal.sandbox.apim.models.CURRENCYNOTSUPPORTEDFORBANKERROR;
import com.paypal.sandbox.apim.models.DECLINEDDUETORELATEDTXNERROR;
import com.paypal.sandbox.apim.models.DOMESTICTRANSACTIONREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.DUPLICATEINVOICEIDERRORRESPONSE;
import com.paypal.sandbox.apim.models.IBANCOUNTRYNOTSUPPORTEDERROR;
import com.paypal.sandbox.apim.models.IDENTIFIERNOTFOUND;
import com.paypal.sandbox.apim.models.INCOMPATIBLEPARAMETERVALUEERRORRESPONSE;
import com.paypal.sandbox.apim.models.INSTRUMENTDECLINEDERROR;
import com.paypal.sandbox.apim.models.INVALIDIBANERROR;
import com.paypal.sandbox.apim.models.INVALIDPICKUPADDRESSERROR;
import com.paypal.sandbox.apim.models.INVALIDPREVTRANSREFERRORRESPONSE;
import com.paypal.sandbox.apim.models.INVALIDSECURITYCODELENGTHERRORRESPONSE;
import com.paypal.sandbox.apim.models.MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE;
import com.paypal.sandbox.apim.models.MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP;
import com.paypal.sandbox.apim.models.MERCHANTINITIATEDSECURITYCODEERRORRESPONSE;
import com.paypal.sandbox.apim.models.MISSINGCRYPTOGRAMERRORRESPONSE;
import com.paypal.sandbox.apim.models.MISSINGPARAMCIPERRORRESP;
import com.paypal.sandbox.apim.models.MISSINGPREVIOUSREFERENCEERRORRESPONSE;
import com.paypal.sandbox.apim.models.NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE;
import com.paypal.sandbox.apim.models.NOTENABLEDFORBANKPROCESSING;
import com.paypal.sandbox.apim.models.NOTENABLEDFORCARDPROCESSING;
import com.paypal.sandbox.apim.models.ONLYONEBANKSOURCEALLOWEDERROR;
import com.paypal.sandbox.apim.models.ORDERALREADYCAPTUREDERROR;
import com.paypal.sandbox.apim.models.ORDERCOMPLETIONINPROGRESS;
import com.paypal.sandbox.apim.models.ORDERNOTAPPROVEDERROR;
import com.paypal.sandbox.apim.models.PAYEEBLOCKEDTRANSACTIONERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYEEFXRATEIDEXPIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYEENOTENABLEDFORBANKPROCESSING;
import com.paypal.sandbox.apim.models.PAYEENOTENABLEDFORCARDPROCESSING;
import com.paypal.sandbox.apim.models.PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYERACCOUNTRESTRICTEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYERACTIONREQUIREDERROR;
import com.paypal.sandbox.apim.models.PAYERCANNOTPAYERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYMENTSOURCEMISMATCHERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYMENTSOURCENOTSUPPORTED;
import com.paypal.sandbox.apim.models.PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE;
import com.paypal.sandbox.apim.models.PAYPALTRANSACTIONIDEXPIREDERROR;
import com.paypal.sandbox.apim.models.PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE;
import com.paypal.sandbox.apim.models.PLATFORMFEEPAYEECANNOTBESAMEASPAYER;
import com.paypal.sandbox.apim.models.PNREFEXPIREDERROR;
import com.paypal.sandbox.apim.models.PNREFNOTFOUNDERRORRESPONSE;
import com.paypal.sandbox.apim.models.PREFERREDPAYMENTSOURCEMISMATCHERROR;
import com.paypal.sandbox.apim.models.REDIRECTPAYERFORALTERNATEFUNDING;
import com.paypal.sandbox.apim.models.REFERENCEDCARDEXPIREDERROR;
import com.paypal.sandbox.apim.models.RETURNURLREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.SETUPERRORFORBANKERROR;
import com.paypal.sandbox.apim.models.SHIPPINGADDRESSINVALIDERRORRESPONSE;
import com.paypal.sandbox.apim.models.TOKENIDNOTFOUNDERROR;
import com.paypal.sandbox.apim.models.TRANSACTIONBLOCKEDBYPAYEEERROR;
import com.paypal.sandbox.apim.models.TRANSACTIONLIMITEXCEEDEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.TRANSACTIONREFUSEDERRORRESPONSE;
import com.paypal.sandbox.apim.models.VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE;
import com.paypal.sandbox.apim.models.VAULTINSTRUCTIONREQUIREDERRORRESPONSE;
import com.paypal.sandbox.apim.models.VOIDEDPREVTRANSREFERRORRESPONSE;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersCapture422IssuesItems.OrdersCapture422IssuesItemsDeserializer.class)
public abstract class OrdersCapture422IssuesItems {
    
    /**
     * This is AGREEMENT_ALREADY_CANCELLED_RESULT case.
     * @param aGREEMENTALREADYCANCELLEDRESULT AGREEMENTALREADYCANCELLEDRESULT value for aGREEMENTALREADYCANCELLEDRESULT.
     * @return The AGREEMENTALREADYCANCELLEDRESULTCase object.
     */
    public static OrdersCapture422IssuesItems fromAGREEMENTALREADYCANCELLEDRESULT(
            AGREEMENTALREADYCANCELLEDRESULT aGREEMENTALREADYCANCELLEDRESULT) {
        return aGREEMENTALREADYCANCELLEDRESULT == null ? null : new AGREEMENTALREADYCANCELLEDRESULTCase(aGREEMENTALREADYCANCELLEDRESULT);
    }

    /**
     * This is BILLING_AGREEMENT_NOT_FOUND_RESULT case.
     * @param bILLINGAGREEMENTNOTFOUNDRESULT BILLINGAGREEMENTNOTFOUNDRESULT value for bILLINGAGREEMENTNOTFOUNDRESULT.
     * @return The BILLINGAGREEMENTNOTFOUNDRESULTCase object.
     */
    public static OrdersCapture422IssuesItems fromBILLINGAGREEMENTNOTFOUNDRESULT(
            BILLINGAGREEMENTNOTFOUNDRESULT bILLINGAGREEMENTNOTFOUNDRESULT) {
        return bILLINGAGREEMENTNOTFOUNDRESULT == null ? null : new BILLINGAGREEMENTNOTFOUNDRESULTCase(bILLINGAGREEMENTNOTFOUNDRESULT);
    }

    /**
     * This is DECLINED_DUE_TO_RELATED_TXN_ERROR case.
     * @param dECLINEDDUETORELATEDTXNERROR DECLINEDDUETORELATEDTXNERROR value for dECLINEDDUETORELATEDTXNERROR.
     * @return The DECLINEDDUETORELATEDTXNERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromDECLINEDDUETORELATEDTXNERROR(
            DECLINEDDUETORELATEDTXNERROR dECLINEDDUETORELATEDTXNERROR) {
        return dECLINEDDUETORELATEDTXNERROR == null ? null : new DECLINEDDUETORELATEDTXNERRORCase(dECLINEDDUETORELATEDTXNERROR);
    }

    /**
     * This is MISSING_PREVIOUS_REFERENCE_ERROR_RESPONSE case.
     * @param mISSINGPREVIOUSREFERENCEERRORRESPONSE MISSINGPREVIOUSREFERENCEERRORRESPONSE value for mISSINGPREVIOUSREFERENCEERRORRESPONSE.
     * @return The MISSINGPREVIOUSREFERENCEERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromMISSINGPREVIOUSREFERENCEERRORRESPONSE(
            MISSINGPREVIOUSREFERENCEERRORRESPONSE mISSINGPREVIOUSREFERENCEERRORRESPONSE) {
        return mISSINGPREVIOUSREFERENCEERRORRESPONSE == null ? null : new MISSINGPREVIOUSREFERENCEERRORRESPONSECase(mISSINGPREVIOUSREFERENCEERRORRESPONSE);
    }

    /**
     * This is MISSING_CRYPTOGRAM_ERROR_RESPONSE case.
     * @param mISSINGCRYPTOGRAMERRORRESPONSE MISSINGCRYPTOGRAMERRORRESPONSE value for mISSINGCRYPTOGRAMERRORRESPONSE.
     * @return The MISSINGCRYPTOGRAMERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromMISSINGCRYPTOGRAMERRORRESPONSE(
            MISSINGCRYPTOGRAMERRORRESPONSE mISSINGCRYPTOGRAMERRORRESPONSE) {
        return mISSINGCRYPTOGRAMERRORRESPONSE == null ? null : new MISSINGCRYPTOGRAMERRORRESPONSECase(mISSINGCRYPTOGRAMERRORRESPONSE);
    }

    /**
     * This is CARD_BRAND_NOT_SUPPORTED_ERROR case.
     * @param cARDBRANDNOTSUPPORTEDERROR CARDBRANDNOTSUPPORTEDERROR value for cARDBRANDNOTSUPPORTEDERROR.
     * @return The CARDBRANDNOTSUPPORTEDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromCARDBRANDNOTSUPPORTEDERROR(
            CARDBRANDNOTSUPPORTEDERROR cARDBRANDNOTSUPPORTEDERROR) {
        return cARDBRANDNOTSUPPORTEDERROR == null ? null : new CARDBRANDNOTSUPPORTEDERRORCase(cARDBRANDNOTSUPPORTEDERROR);
    }

    /**
     * This is COMPLIANCE_VIOLATION_ERROR case.
     * @param cOMPLIANCEVIOLATIONERROR COMPLIANCEVIOLATIONERROR value for cOMPLIANCEVIOLATIONERROR.
     * @return The COMPLIANCEVIOLATIONERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromCOMPLIANCEVIOLATIONERROR(
            COMPLIANCEVIOLATIONERROR cOMPLIANCEVIOLATIONERROR) {
        return cOMPLIANCEVIOLATIONERROR == null ? null : new COMPLIANCEVIOLATIONERRORCase(cOMPLIANCEVIOLATIONERROR);
    }

    /**
     * This is DOMESTIC_TRANSACTION_REQUIRED_ERROR_RESPONSE case.
     * @param dOMESTICTRANSACTIONREQUIREDERRORRESPONSE DOMESTICTRANSACTIONREQUIREDERRORRESPONSE value for dOMESTICTRANSACTIONREQUIREDERRORRESPONSE.
     * @return The DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromDOMESTICTRANSACTIONREQUIREDERRORRESPONSE(
            DOMESTICTRANSACTIONREQUIREDERRORRESPONSE dOMESTICTRANSACTIONREQUIREDERRORRESPONSE) {
        return dOMESTICTRANSACTIONREQUIREDERRORRESPONSE == null ? null : new DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase(dOMESTICTRANSACTIONREQUIREDERRORRESPONSE);
    }

    /**
     * This is DUPLICATE_INVOICE_ID_ERROR_RESPONSE case.
     * @param dUPLICATEINVOICEIDERRORRESPONSE DUPLICATEINVOICEIDERRORRESPONSE value for dUPLICATEINVOICEIDERRORRESPONSE.
     * @return The DUPLICATEINVOICEIDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromDUPLICATEINVOICEIDERRORRESPONSE(
            DUPLICATEINVOICEIDERRORRESPONSE dUPLICATEINVOICEIDERRORRESPONSE) {
        return dUPLICATEINVOICEIDERRORRESPONSE == null ? null : new DUPLICATEINVOICEIDERRORRESPONSECase(dUPLICATEINVOICEIDERRORRESPONSE);
    }

    /**
     * This is INSTRUMENT_DECLINED_ERROR case.
     * @param iNSTRUMENTDECLINEDERROR INSTRUMENTDECLINEDERROR value for iNSTRUMENTDECLINEDERROR.
     * @return The INSTRUMENTDECLINEDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromINSTRUMENTDECLINEDERROR(
            INSTRUMENTDECLINEDERROR iNSTRUMENTDECLINEDERROR) {
        return iNSTRUMENTDECLINEDERROR == null ? null : new INSTRUMENTDECLINEDERRORCase(iNSTRUMENTDECLINEDERROR);
    }

    /**
     * This is ORDER_NOT_APPROVED_ERROR case.
     * @param oRDERNOTAPPROVEDERROR ORDERNOTAPPROVEDERROR value for oRDERNOTAPPROVEDERROR.
     * @return The ORDERNOTAPPROVEDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromORDERNOTAPPROVEDERROR(
            ORDERNOTAPPROVEDERROR oRDERNOTAPPROVEDERROR) {
        return oRDERNOTAPPROVEDERROR == null ? null : new ORDERNOTAPPROVEDERRORCase(oRDERNOTAPPROVEDERROR);
    }

    /**
     * This is MAX_PAYMENT_ATTEMPTS_EXCEEDED_ERROR_RESPONSE case.
     * @param mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE value for mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE.
     * @return The MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromMAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE(
            MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE) {
        return mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE == null ? null : new MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase(mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE);
    }

    /**
     * This is PAYEE_BLOCKED_TRANSACTION_ERROR_RESPONSE case.
     * @param pAYEEBLOCKEDTRANSACTIONERRORRESPONSE PAYEEBLOCKEDTRANSACTIONERRORRESPONSE value for pAYEEBLOCKEDTRANSACTIONERRORRESPONSE.
     * @return The PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYEEBLOCKEDTRANSACTIONERRORRESPONSE(
            PAYEEBLOCKEDTRANSACTIONERRORRESPONSE pAYEEBLOCKEDTRANSACTIONERRORRESPONSE) {
        return pAYEEBLOCKEDTRANSACTIONERRORRESPONSE == null ? null : new PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase(pAYEEBLOCKEDTRANSACTIONERRORRESPONSE);
    }

    /**
     * This is PAYEE_FX_RATE_ID_EXPIRED_ERROR_RESPONSE case.
     * @param pAYEEFXRATEIDEXPIREDERRORRESPONSE PAYEEFXRATEIDEXPIREDERRORRESPONSE value for pAYEEFXRATEIDEXPIREDERRORRESPONSE.
     * @return The PAYEEFXRATEIDEXPIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYEEFXRATEIDEXPIREDERRORRESPONSE(
            PAYEEFXRATEIDEXPIREDERRORRESPONSE pAYEEFXRATEIDEXPIREDERRORRESPONSE) {
        return pAYEEFXRATEIDEXPIREDERRORRESPONSE == null ? null : new PAYEEFXRATEIDEXPIREDERRORRESPONSECase(pAYEEFXRATEIDEXPIREDERRORRESPONSE);
    }

    /**
     * This is PAYER_ACCOUNT_LOCKED_OR_CLOSED_ERROR_RESPONSE case.
     * @param pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE value for pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE.
     * @return The PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE(
            PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE) {
        return pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE == null ? null : new PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase(pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE);
    }

    /**
     * This is PAYER_ACCOUNT_RESTRICTED_ERROR_RESPONSE case.
     * @param pAYERACCOUNTRESTRICTEDERRORRESPONSE PAYERACCOUNTRESTRICTEDERRORRESPONSE value for pAYERACCOUNTRESTRICTEDERRORRESPONSE.
     * @return The PAYERACCOUNTRESTRICTEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYERACCOUNTRESTRICTEDERRORRESPONSE(
            PAYERACCOUNTRESTRICTEDERRORRESPONSE pAYERACCOUNTRESTRICTEDERRORRESPONSE) {
        return pAYERACCOUNTRESTRICTEDERRORRESPONSE == null ? null : new PAYERACCOUNTRESTRICTEDERRORRESPONSECase(pAYERACCOUNTRESTRICTEDERRORRESPONSE);
    }

    /**
     * This is PAYER_CANNOT_PAY_ERROR_RESPONSE case.
     * @param pAYERCANNOTPAYERRORRESPONSE PAYERCANNOTPAYERRORRESPONSE value for pAYERCANNOTPAYERRORRESPONSE.
     * @return The PAYERCANNOTPAYERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYERCANNOTPAYERRORRESPONSE(
            PAYERCANNOTPAYERRORRESPONSE pAYERCANNOTPAYERRORRESPONSE) {
        return pAYERCANNOTPAYERRORRESPONSE == null ? null : new PAYERCANNOTPAYERRORRESPONSECase(pAYERCANNOTPAYERRORRESPONSE);
    }

    /**
     * This is PAYPAL_TRANSACTION_ID_EXPIRED_ERROR case.
     * @param pAYPALTRANSACTIONIDEXPIREDERROR PAYPALTRANSACTIONIDEXPIREDERROR value for pAYPALTRANSACTIONIDEXPIREDERROR.
     * @return The PAYPALTRANSACTIONIDEXPIREDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromPAYPALTRANSACTIONIDEXPIREDERROR(
            PAYPALTRANSACTIONIDEXPIREDERROR pAYPALTRANSACTIONIDEXPIREDERROR) {
        return pAYPALTRANSACTIONIDEXPIREDERROR == null ? null : new PAYPALTRANSACTIONIDEXPIREDERRORCase(pAYPALTRANSACTIONIDEXPIREDERROR);
    }

    /**
     * This is PNREF_EXPIRED_ERROR case.
     * @param pNREFEXPIREDERROR PNREFEXPIREDERROR value for pNREFEXPIREDERROR.
     * @return The PNREFEXPIREDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromPNREFEXPIREDERROR(
            PNREFEXPIREDERROR pNREFEXPIREDERROR) {
        return pNREFEXPIREDERROR == null ? null : new PNREFEXPIREDERRORCase(pNREFEXPIREDERROR);
    }

    /**
     * This is REFERENCED_CARD_EXPIRED_ERROR case.
     * @param rEFERENCEDCARDEXPIREDERROR REFERENCEDCARDEXPIREDERROR value for rEFERENCEDCARDEXPIREDERROR.
     * @return The REFERENCEDCARDEXPIREDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromREFERENCEDCARDEXPIREDERROR(
            REFERENCEDCARDEXPIREDERROR rEFERENCEDCARDEXPIREDERROR) {
        return rEFERENCEDCARDEXPIREDERROR == null ? null : new REFERENCEDCARDEXPIREDERRORCase(rEFERENCEDCARDEXPIREDERROR);
    }

    /**
     * This is TOKEN_ID_NOT_FOUND_ERROR case.
     * @param tOKENIDNOTFOUNDERROR TOKENIDNOTFOUNDERROR value for tOKENIDNOTFOUNDERROR.
     * @return The TOKENIDNOTFOUNDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromTOKENIDNOTFOUNDERROR(
            TOKENIDNOTFOUNDERROR tOKENIDNOTFOUNDERROR) {
        return tOKENIDNOTFOUNDERROR == null ? null : new TOKENIDNOTFOUNDERRORCase(tOKENIDNOTFOUNDERROR);
    }

    /**
     * This is TRANSACTION_LIMIT_EXCEEDED_ERROR_RESPONSE case.
     * @param tRANSACTIONLIMITEXCEEDEDERRORRESPONSE TRANSACTIONLIMITEXCEEDEDERRORRESPONSE value for tRANSACTIONLIMITEXCEEDEDERRORRESPONSE.
     * @return The TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromTRANSACTIONLIMITEXCEEDEDERRORRESPONSE(
            TRANSACTIONLIMITEXCEEDEDERRORRESPONSE tRANSACTIONLIMITEXCEEDEDERRORRESPONSE) {
        return tRANSACTIONLIMITEXCEEDEDERRORRESPONSE == null ? null : new TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase(tRANSACTIONLIMITEXCEEDEDERRORRESPONSE);
    }

    /**
     * This is TRANSACTION_RECEIVE_LIMIT_EXCEEDED_ERROR_RESPONSE case.
     * @param tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE value for tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE.
     * @return The TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromTRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE(
            TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE) {
        return tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE == null ? null : new TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase(tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE);
    }

    /**
     * This is TRANSACTION_REFUSED_ERROR_RESPONSE case.
     * @param tRANSACTIONREFUSEDERRORRESPONSE TRANSACTIONREFUSEDERRORRESPONSE value for tRANSACTIONREFUSEDERRORRESPONSE.
     * @return The TRANSACTIONREFUSEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromTRANSACTIONREFUSEDERRORRESPONSE(
            TRANSACTIONREFUSEDERRORRESPONSE tRANSACTIONREFUSEDERRORRESPONSE) {
        return tRANSACTIONREFUSEDERRORRESPONSE == null ? null : new TRANSACTIONREFUSEDERRORRESPONSECase(tRANSACTIONREFUSEDERRORRESPONSE);
    }

    /**
     * This is REDIRECT_PAYER_FOR_ALTERNATE_FUNDING case.
     * @param rEDIRECTPAYERFORALTERNATEFUNDING REDIRECTPAYERFORALTERNATEFUNDING value for rEDIRECTPAYERFORALTERNATEFUNDING.
     * @return The REDIRECTPAYERFORALTERNATEFUNDINGCase object.
     */
    public static OrdersCapture422IssuesItems fromREDIRECTPAYERFORALTERNATEFUNDING(
            REDIRECTPAYERFORALTERNATEFUNDING rEDIRECTPAYERFORALTERNATEFUNDING) {
        return rEDIRECTPAYERFORALTERNATEFUNDING == null ? null : new REDIRECTPAYERFORALTERNATEFUNDINGCase(rEDIRECTPAYERFORALTERNATEFUNDING);
    }

    /**
     * This is ORDER_ALREADY_CAPTURED_ERROR case.
     * @param oRDERALREADYCAPTUREDERROR ORDERALREADYCAPTUREDERROR value for oRDERALREADYCAPTUREDERROR.
     * @return The ORDERALREADYCAPTUREDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromORDERALREADYCAPTUREDERROR(
            ORDERALREADYCAPTUREDERROR oRDERALREADYCAPTUREDERROR) {
        return oRDERALREADYCAPTUREDERROR == null ? null : new ORDERALREADYCAPTUREDERRORCase(oRDERALREADYCAPTUREDERROR);
    }

    /**
     * This is TRANSACTION_BLOCKED_BY_PAYEE_ERROR case.
     * @param tRANSACTIONBLOCKEDBYPAYEEERROR TRANSACTIONBLOCKEDBYPAYEEERROR value for tRANSACTIONBLOCKEDBYPAYEEERROR.
     * @return The TRANSACTIONBLOCKEDBYPAYEEERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromTRANSACTIONBLOCKEDBYPAYEEERROR(
            TRANSACTIONBLOCKEDBYPAYEEERROR tRANSACTIONBLOCKEDBYPAYEEERROR) {
        return tRANSACTIONBLOCKEDBYPAYEEERROR == null ? null : new TRANSACTIONBLOCKEDBYPAYEEERRORCase(tRANSACTIONBLOCKEDBYPAYEEERROR);
    }

    /**
     * This is AUTH_CAPTURE_NOT_ENABLED_ERROR_RESPONSE case.
     * @param aUTHCAPTURENOTENABLEDERRORRESPONSE AUTHCAPTURENOTENABLEDERRORRESPONSE value for aUTHCAPTURENOTENABLEDERRORRESPONSE.
     * @return The AUTHCAPTURENOTENABLEDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromAUTHCAPTURENOTENABLEDERRORRESPONSE(
            AUTHCAPTURENOTENABLEDERRORRESPONSE aUTHCAPTURENOTENABLEDERRORRESPONSE) {
        return aUTHCAPTURENOTENABLEDERRORRESPONSE == null ? null : new AUTHCAPTURENOTENABLEDERRORRESPONSECase(aUTHCAPTURENOTENABLEDERRORRESPONSE);
    }

    /**
     * This is NOT_ENABLED_FOR_BANK_PROCESSING case.
     * @param nOTENABLEDFORBANKPROCESSING NOTENABLEDFORBANKPROCESSING value for nOTENABLEDFORBANKPROCESSING.
     * @return The NOTENABLEDFORBANKPROCESSINGCase object.
     */
    public static OrdersCapture422IssuesItems fromNOTENABLEDFORBANKPROCESSING(
            NOTENABLEDFORBANKPROCESSING nOTENABLEDFORBANKPROCESSING) {
        return nOTENABLEDFORBANKPROCESSING == null ? null : new NOTENABLEDFORBANKPROCESSINGCase(nOTENABLEDFORBANKPROCESSING);
    }

    /**
     * This is NOT_ENABLED_FOR_CARD_PROCESSING case.
     * @param nOTENABLEDFORCARDPROCESSING NOTENABLEDFORCARDPROCESSING value for nOTENABLEDFORCARDPROCESSING.
     * @return The NOTENABLEDFORCARDPROCESSINGCase object.
     */
    public static OrdersCapture422IssuesItems fromNOTENABLEDFORCARDPROCESSING(
            NOTENABLEDFORCARDPROCESSING nOTENABLEDFORCARDPROCESSING) {
        return nOTENABLEDFORCARDPROCESSING == null ? null : new NOTENABLEDFORCARDPROCESSINGCase(nOTENABLEDFORCARDPROCESSING);
    }

    /**
     * This is PAYEE_NOT_ENABLED_FOR_BANK_PROCESSING case.
     * @param pAYEENOTENABLEDFORBANKPROCESSING PAYEENOTENABLEDFORBANKPROCESSING value for pAYEENOTENABLEDFORBANKPROCESSING.
     * @return The PAYEENOTENABLEDFORBANKPROCESSINGCase object.
     */
    public static OrdersCapture422IssuesItems fromPAYEENOTENABLEDFORBANKPROCESSING(
            PAYEENOTENABLEDFORBANKPROCESSING pAYEENOTENABLEDFORBANKPROCESSING) {
        return pAYEENOTENABLEDFORBANKPROCESSING == null ? null : new PAYEENOTENABLEDFORBANKPROCESSINGCase(pAYEENOTENABLEDFORBANKPROCESSING);
    }

    /**
     * This is PAYEE_NOT_ENABLED_FOR_CARD_PROCESSING case.
     * @param pAYEENOTENABLEDFORCARDPROCESSING PAYEENOTENABLEDFORCARDPROCESSING value for pAYEENOTENABLEDFORCARDPROCESSING.
     * @return The PAYEENOTENABLEDFORCARDPROCESSINGCase object.
     */
    public static OrdersCapture422IssuesItems fromPAYEENOTENABLEDFORCARDPROCESSING(
            PAYEENOTENABLEDFORCARDPROCESSING pAYEENOTENABLEDFORCARDPROCESSING) {
        return pAYEENOTENABLEDFORCARDPROCESSING == null ? null : new PAYEENOTENABLEDFORCARDPROCESSINGCase(pAYEENOTENABLEDFORCARDPROCESSING);
    }

    /**
     * This is INVALID_PICKUP_ADDRESS_ERROR case.
     * @param iNVALIDPICKUPADDRESSERROR INVALIDPICKUPADDRESSERROR value for iNVALIDPICKUPADDRESSERROR.
     * @return The INVALIDPICKUPADDRESSERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromINVALIDPICKUPADDRESSERROR(
            INVALIDPICKUPADDRESSERROR iNVALIDPICKUPADDRESSERROR) {
        return iNVALIDPICKUPADDRESSERROR == null ? null : new INVALIDPICKUPADDRESSERRORCase(iNVALIDPICKUPADDRESSERROR);
    }

    /**
     * This is SHIPPING_ADDRESS_INVALID_ERROR_RESPONSE case.
     * @param sHIPPINGADDRESSINVALIDERRORRESPONSE SHIPPINGADDRESSINVALIDERRORRESPONSE value for sHIPPINGADDRESSINVALIDERRORRESPONSE.
     * @return The SHIPPINGADDRESSINVALIDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromSHIPPINGADDRESSINVALIDERRORRESPONSE(
            SHIPPINGADDRESSINVALIDERRORRESPONSE sHIPPINGADDRESSINVALIDERRORRESPONSE) {
        return sHIPPINGADDRESSINVALIDERRORRESPONSE == null ? null : new SHIPPINGADDRESSINVALIDERRORRESPONSECase(sHIPPINGADDRESSINVALIDERRORRESPONSE);
    }

    /**
     * This is PAYMENT_SOURCE_NOT_SUPPORTED case.
     * @param pAYMENTSOURCENOTSUPPORTED PAYMENTSOURCENOTSUPPORTED value for pAYMENTSOURCENOTSUPPORTED.
     * @return The PAYMENTSOURCENOTSUPPORTEDCase object.
     */
    public static OrdersCapture422IssuesItems fromPAYMENTSOURCENOTSUPPORTED(
            PAYMENTSOURCENOTSUPPORTED pAYMENTSOURCENOTSUPPORTED) {
        return pAYMENTSOURCENOTSUPPORTED == null ? null : new PAYMENTSOURCENOTSUPPORTEDCase(pAYMENTSOURCENOTSUPPORTED);
    }

    /**
     * This is ORDER_COMPLETION_IN_PROGRESS case.
     * @param oRDERCOMPLETIONINPROGRESS ORDERCOMPLETIONINPROGRESS value for oRDERCOMPLETIONINPROGRESS.
     * @return The ORDERCOMPLETIONINPROGRESSCase object.
     */
    public static OrdersCapture422IssuesItems fromORDERCOMPLETIONINPROGRESS(
            ORDERCOMPLETIONINPROGRESS oRDERCOMPLETIONINPROGRESS) {
        return oRDERCOMPLETIONINPROGRESS == null ? null : new ORDERCOMPLETIONINPROGRESSCase(oRDERCOMPLETIONINPROGRESS);
    }

    /**
     * This is BILLING_AGREEMENT_ID_MISMATCH_ERROR case.
     * @param bILLINGAGREEMENTIDMISMATCHERROR BILLINGAGREEMENTIDMISMATCHERROR value for bILLINGAGREEMENTIDMISMATCHERROR.
     * @return The BILLINGAGREEMENTIDMISMATCHERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromBILLINGAGREEMENTIDMISMATCHERROR(
            BILLINGAGREEMENTIDMISMATCHERROR bILLINGAGREEMENTIDMISMATCHERROR) {
        return bILLINGAGREEMENTIDMISMATCHERROR == null ? null : new BILLINGAGREEMENTIDMISMATCHERRORCase(bILLINGAGREEMENTIDMISMATCHERROR);
    }

    /**
     * This is PREFERRED_PAYMENT_SOURCE_MISMATCH_ERROR case.
     * @param pREFERREDPAYMENTSOURCEMISMATCHERROR PREFERREDPAYMENTSOURCEMISMATCHERROR value for pREFERREDPAYMENTSOURCEMISMATCHERROR.
     * @return The PREFERREDPAYMENTSOURCEMISMATCHERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromPREFERREDPAYMENTSOURCEMISMATCHERROR(
            PREFERREDPAYMENTSOURCEMISMATCHERROR pREFERREDPAYMENTSOURCEMISMATCHERROR) {
        return pREFERREDPAYMENTSOURCEMISMATCHERROR == null ? null : new PREFERREDPAYMENTSOURCEMISMATCHERRORCase(pREFERREDPAYMENTSOURCEMISMATCHERROR);
    }

    /**
     * This is INCOMPATIBLE_PARAMETER_VALUE_ERROR_RESPONSE case.
     * @param iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE INCOMPATIBLEPARAMETERVALUEERRORRESPONSE value for iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE.
     * @return The INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromINCOMPATIBLEPARAMETERVALUEERRORRESPONSE(
            INCOMPATIBLEPARAMETERVALUEERRORRESPONSE iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE) {
        return iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE == null ? null : new INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase(iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE);
    }

    /**
     * This is INVALID_PREV_TRANS_REF_ERROR_RESPONSE case.
     * @param iNVALIDPREVTRANSREFERRORRESPONSE INVALIDPREVTRANSREFERRORRESPONSE value for iNVALIDPREVTRANSREFERRORRESPONSE.
     * @return The INVALIDPREVTRANSREFERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromINVALIDPREVTRANSREFERRORRESPONSE(
            INVALIDPREVTRANSREFERRORRESPONSE iNVALIDPREVTRANSREFERRORRESPONSE) {
        return iNVALIDPREVTRANSREFERRORRESPONSE == null ? null : new INVALIDPREVTRANSREFERRORRESPONSECase(iNVALIDPREVTRANSREFERRORRESPONSE);
    }

    /**
     * This is CHARGEBACK_ON_PREVIOUS_TRANS_REF_ERROR_RESPONSE case.
     * @param cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE value for cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE.
     * @return The CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromCHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE(
            CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE) {
        return cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE == null ? null : new CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase(cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE);
    }

    /**
     * This is VOIDED_PREV_TRANS_REF_ERROR_RESPONSE case.
     * @param vOIDEDPREVTRANSREFERRORRESPONSE VOIDEDPREVTRANSREFERRORRESPONSE value for vOIDEDPREVTRANSREFERRORRESPONSE.
     * @return The VOIDEDPREVTRANSREFERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromVOIDEDPREVTRANSREFERRORRESPONSE(
            VOIDEDPREVTRANSREFERRORRESPONSE vOIDEDPREVTRANSREFERRORRESPONSE) {
        return vOIDEDPREVTRANSREFERRORRESPONSE == null ? null : new VOIDEDPREVTRANSREFERRORRESPONSECase(vOIDEDPREVTRANSREFERRORRESPONSE);
    }

    /**
     * This is PAYMENT_SOURCE_MISMATCH_ERROR_RESPONSE case.
     * @param pAYMENTSOURCEMISMATCHERRORRESPONSE PAYMENTSOURCEMISMATCHERRORRESPONSE value for pAYMENTSOURCEMISMATCHERRORRESPONSE.
     * @return The PAYMENTSOURCEMISMATCHERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYMENTSOURCEMISMATCHERRORRESPONSE(
            PAYMENTSOURCEMISMATCHERRORRESPONSE pAYMENTSOURCEMISMATCHERRORRESPONSE) {
        return pAYMENTSOURCEMISMATCHERRORRESPONSE == null ? null : new PAYMENTSOURCEMISMATCHERRORRESPONSECase(pAYMENTSOURCEMISMATCHERRORRESPONSE);
    }

    /**
     * This is MERCHANT_INITIATED_SECURITY_CODE_ERROR_RESPONSE case.
     * @param mERCHANTINITIATEDSECURITYCODEERRORRESPONSE MERCHANTINITIATEDSECURITYCODEERRORRESPONSE value for mERCHANTINITIATEDSECURITYCODEERRORRESPONSE.
     * @return The MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromMERCHANTINITIATEDSECURITYCODEERRORRESPONSE(
            MERCHANTINITIATEDSECURITYCODEERRORRESPONSE mERCHANTINITIATEDSECURITYCODEERRORRESPONSE) {
        return mERCHANTINITIATEDSECURITYCODEERRORRESPONSE == null ? null : new MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase(mERCHANTINITIATEDSECURITYCODEERRORRESPONSE);
    }

    /**
     * This is MERCHANT_INITIATED_AUTH_RESULTS_ERROR_RESPONSE case.
     * @param mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE value for mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE.
     * @return The MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromMERCHANTINITIATEDAUTHRESULTSERRORRESPONSE(
            MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE) {
        return mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE == null ? null : new MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase(mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE);
    }

    /**
     * This is MERCHANT_INITIATED_MULTI_PURCHASE_UNITS_ERROR_RESP case.
     * @param mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP value for mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP.
     * @return The MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase object.
     */
    public static OrdersCapture422IssuesItems fromMERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP(
            MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP) {
        return mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP == null ? null : new MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase(mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP);
    }

    /**
     * This is RETURN_URL_REQUIRED_ERROR_RESPONSE case.
     * @param rETURNURLREQUIREDERRORRESPONSE RETURNURLREQUIREDERRORRESPONSE value for rETURNURLREQUIREDERRORRESPONSE.
     * @return The RETURNURLREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromRETURNURLREQUIREDERRORRESPONSE(
            RETURNURLREQUIREDERRORRESPONSE rETURNURLREQUIREDERRORRESPONSE) {
        return rETURNURLREQUIREDERRORRESPONSE == null ? null : new RETURNURLREQUIREDERRORRESPONSECase(rETURNURLREQUIREDERRORRESPONSE);
    }

    /**
     * This is CANCEL_URL_REQUIRED_ERROR_RESPONSE case.
     * @param cANCELURLREQUIREDERRORRESPONSE CANCELURLREQUIREDERRORRESPONSE value for cANCELURLREQUIREDERRORRESPONSE.
     * @return The CANCELURLREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromCANCELURLREQUIREDERRORRESPONSE(
            CANCELURLREQUIREDERRORRESPONSE cANCELURLREQUIREDERRORRESPONSE) {
        return cANCELURLREQUIREDERRORRESPONSE == null ? null : new CANCELURLREQUIREDERRORRESPONSECase(cANCELURLREQUIREDERRORRESPONSE);
    }

    /**
     * This is SETUP_ERROR_FOR_BANK_ERROR case.
     * @param sETUPERRORFORBANKERROR SETUPERRORFORBANKERROR value for sETUPERRORFORBANKERROR.
     * @return The SETUPERRORFORBANKERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromSETUPERRORFORBANKERROR(
            SETUPERRORFORBANKERROR sETUPERRORFORBANKERROR) {
        return sETUPERRORFORBANKERROR == null ? null : new SETUPERRORFORBANKERRORCase(sETUPERRORFORBANKERROR);
    }

    /**
     * This is BANK_NOT_SUPPORTED_FOR_VERIFICATION_ERROR case.
     * @param bANKNOTSUPPORTEDFORVERIFICATIONERROR BANKNOTSUPPORTEDFORVERIFICATIONERROR value for bANKNOTSUPPORTEDFORVERIFICATIONERROR.
     * @return The BANKNOTSUPPORTEDFORVERIFICATIONERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromBANKNOTSUPPORTEDFORVERIFICATIONERROR(
            BANKNOTSUPPORTEDFORVERIFICATIONERROR bANKNOTSUPPORTEDFORVERIFICATIONERROR) {
        return bANKNOTSUPPORTEDFORVERIFICATIONERROR == null ? null : new BANKNOTSUPPORTEDFORVERIFICATIONERRORCase(bANKNOTSUPPORTEDFORVERIFICATIONERROR);
    }

    /**
     * This is PAYER_ACTION_REQUIRED_ERROR case.
     * @param pAYERACTIONREQUIREDERROR PAYERACTIONREQUIREDERROR value for pAYERACTIONREQUIREDERROR.
     * @return The PAYERACTIONREQUIREDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromPAYERACTIONREQUIREDERROR(
            PAYERACTIONREQUIREDERROR pAYERACTIONREQUIREDERROR) {
        return pAYERACTIONREQUIREDERROR == null ? null : new PAYERACTIONREQUIREDERRORCase(pAYERACTIONREQUIREDERROR);
    }

    /**
     * This is APPLE_PAY_AMOUNT_MISMATCH_ERROR_RESPONSE case.
     * @param aPPLEPAYAMOUNTMISMATCHERRORRESPONSE APPLEPAYAMOUNTMISMATCHERRORRESPONSE value for aPPLEPAYAMOUNTMISMATCHERRORRESPONSE.
     * @return The APPLEPAYAMOUNTMISMATCHERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromAPPLEPAYAMOUNTMISMATCHERRORRESPONSE(
            APPLEPAYAMOUNTMISMATCHERRORRESPONSE aPPLEPAYAMOUNTMISMATCHERRORRESPONSE) {
        return aPPLEPAYAMOUNTMISMATCHERRORRESPONSE == null ? null : new APPLEPAYAMOUNTMISMATCHERRORRESPONSECase(aPPLEPAYAMOUNTMISMATCHERRORRESPONSE);
    }

    /**
     * This is CURRENCY_NOT_SUPPORTED_FOR_BANK_ERROR case.
     * @param cURRENCYNOTSUPPORTEDFORBANKERROR CURRENCYNOTSUPPORTEDFORBANKERROR value for cURRENCYNOTSUPPORTEDFORBANKERROR.
     * @return The CURRENCYNOTSUPPORTEDFORBANKERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromCURRENCYNOTSUPPORTEDFORBANKERROR(
            CURRENCYNOTSUPPORTEDFORBANKERROR cURRENCYNOTSUPPORTEDFORBANKERROR) {
        return cURRENCYNOTSUPPORTEDFORBANKERROR == null ? null : new CURRENCYNOTSUPPORTEDFORBANKERRORCase(cURRENCYNOTSUPPORTEDFORBANKERROR);
    }

    /**
     * This is ONLY_ONE_BANK_SOURCE_ALLOWED_ERROR case.
     * @param oNLYONEBANKSOURCEALLOWEDERROR ONLYONEBANKSOURCEALLOWEDERROR value for oNLYONEBANKSOURCEALLOWEDERROR.
     * @return The ONLYONEBANKSOURCEALLOWEDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromONLYONEBANKSOURCEALLOWEDERROR(
            ONLYONEBANKSOURCEALLOWEDERROR oNLYONEBANKSOURCEALLOWEDERROR) {
        return oNLYONEBANKSOURCEALLOWEDERROR == null ? null : new ONLYONEBANKSOURCEALLOWEDERRORCase(oNLYONEBANKSOURCEALLOWEDERROR);
    }

    /**
     * This is INVALID_IBAN_ERROR case.
     * @param iNVALIDIBANERROR INVALIDIBANERROR value for iNVALIDIBANERROR.
     * @return The INVALIDIBANERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromINVALIDIBANERROR(
            INVALIDIBANERROR iNVALIDIBANERROR) {
        return iNVALIDIBANERROR == null ? null : new INVALIDIBANERRORCase(iNVALIDIBANERROR);
    }

    /**
     * This is IBAN_COUNTRY_NOT_SUPPORTED_ERROR case.
     * @param iBANCOUNTRYNOTSUPPORTEDERROR IBANCOUNTRYNOTSUPPORTEDERROR value for iBANCOUNTRYNOTSUPPORTEDERROR.
     * @return The IBANCOUNTRYNOTSUPPORTEDERRORCase object.
     */
    public static OrdersCapture422IssuesItems fromIBANCOUNTRYNOTSUPPORTEDERROR(
            IBANCOUNTRYNOTSUPPORTEDERROR iBANCOUNTRYNOTSUPPORTEDERROR) {
        return iBANCOUNTRYNOTSUPPORTEDERROR == null ? null : new IBANCOUNTRYNOTSUPPORTEDERRORCase(iBANCOUNTRYNOTSUPPORTEDERROR);
    }

    /**
     * This is CARD_NUMBER_REQUIRED_ERROR_RESPONSE case.
     * @param cARDNUMBERREQUIREDERRORRESPONSE CARDNUMBERREQUIREDERRORRESPONSE value for cARDNUMBERREQUIREDERRORRESPONSE.
     * @return The CARDNUMBERREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromCARDNUMBERREQUIREDERRORRESPONSE(
            CARDNUMBERREQUIREDERRORRESPONSE cARDNUMBERREQUIREDERRORRESPONSE) {
        return cARDNUMBERREQUIREDERRORRESPONSE == null ? null : new CARDNUMBERREQUIREDERRORRESPONSECase(cARDNUMBERREQUIREDERRORRESPONSE);
    }

    /**
     * This is CARD_EXPIRY_REQUIRED_ERROR_RESPONSE case.
     * @param cARDEXPIRYREQUIREDERRORRESPONSE CARDEXPIRYREQUIREDERRORRESPONSE value for cARDEXPIRYREQUIREDERRORRESPONSE.
     * @return The CARDEXPIRYREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromCARDEXPIRYREQUIREDERRORRESPONSE(
            CARDEXPIRYREQUIREDERRORRESPONSE cARDEXPIRYREQUIREDERRORRESPONSE) {
        return cARDEXPIRYREQUIREDERRORRESPONSE == null ? null : new CARDEXPIRYREQUIREDERRORRESPONSECase(cARDEXPIRYREQUIREDERRORRESPONSE);
    }

    /**
     * This is VAULT_INSTRUCTION_REQUIRED_ERROR_RESPONSE case.
     * @param vAULTINSTRUCTIONREQUIREDERRORRESPONSE VAULTINSTRUCTIONREQUIREDERRORRESPONSE value for vAULTINSTRUCTIONREQUIREDERRORRESPONSE.
     * @return The VAULTINSTRUCTIONREQUIREDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromVAULTINSTRUCTIONREQUIREDERRORRESPONSE(
            VAULTINSTRUCTIONREQUIREDERRORRESPONSE vAULTINSTRUCTIONREQUIREDERRORRESPONSE) {
        return vAULTINSTRUCTIONREQUIREDERRORRESPONSE == null ? null : new VAULTINSTRUCTIONREQUIREDERRORRESPONSECase(vAULTINSTRUCTIONREQUIREDERRORRESPONSE);
    }

    /**
     * This is VAULT_ID_PAYMENT_SOURCE_MISMATCH_ERROR_RESPONSE case.
     * @param vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE value for vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE.
     * @return The VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromVAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE(
            VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE) {
        return vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE == null ? null : new VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase(vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE);
    }

    /**
     * This is NOT_ELIGIBLE_FOR_PNREF_PROCESSING_ERROR_RESPONSE case.
     * @param nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE value for nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE.
     * @return The NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromNOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE(
            NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE) {
        return nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE == null ? null : new NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase(nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE);
    }

    /**
     * This is PAYPAL_ID_PROCESSING_INELIGIBILITY_ERROR_RESPONSE case.
     * @param pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE value for pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE.
     * @return The PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE(
            PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE) {
        return pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE == null ? null : new PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase(pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE);
    }

    /**
     * This is PAYPAL_TRANSACTION_ID_NOT_FOUND_ERROR_RESPONSE case.
     * @param pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE value for pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE.
     * @return The PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE(
            PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE) {
        return pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE == null ? null : new PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase(pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE);
    }

    /**
     * This is PNREF_NOT_FOUND_ERROR_RESPONSE case.
     * @param pNREFNOTFOUNDERRORRESPONSE PNREFNOTFOUNDERRORRESPONSE value for pNREFNOTFOUNDERRORRESPONSE.
     * @return The PNREFNOTFOUNDERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromPNREFNOTFOUNDERRORRESPONSE(
            PNREFNOTFOUNDERRORRESPONSE pNREFNOTFOUNDERRORRESPONSE) {
        return pNREFNOTFOUNDERRORRESPONSE == null ? null : new PNREFNOTFOUNDERRORRESPONSECase(pNREFNOTFOUNDERRORRESPONSE);
    }

    /**
     * This is INVALID_SECURITY_CODE_LENGTH_ERROR_RESPONSE case.
     * @param iNVALIDSECURITYCODELENGTHERRORRESPONSE INVALIDSECURITYCODELENGTHERRORRESPONSE value for iNVALIDSECURITYCODELENGTHERRORRESPONSE.
     * @return The INVALIDSECURITYCODELENGTHERRORRESPONSECase object.
     */
    public static OrdersCapture422IssuesItems fromINVALIDSECURITYCODELENGTHERRORRESPONSE(
            INVALIDSECURITYCODELENGTHERRORRESPONSE iNVALIDSECURITYCODELENGTHERRORRESPONSE) {
        return iNVALIDSECURITYCODELENGTHERRORRESPONSE == null ? null : new INVALIDSECURITYCODELENGTHERRORRESPONSECase(iNVALIDSECURITYCODELENGTHERRORRESPONSE);
    }

    /**
     * This is PLATFORM_FEE_PAYEE_CANNOT_BE_SAME_AS_PAYER case.
     * @param pLATFORMFEEPAYEECANNOTBESAMEASPAYER PLATFORMFEEPAYEECANNOTBESAMEASPAYER value for pLATFORMFEEPAYEECANNOTBESAMEASPAYER.
     * @return The PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase object.
     */
    public static OrdersCapture422IssuesItems fromPLATFORMFEEPAYEECANNOTBESAMEASPAYER(
            PLATFORMFEEPAYEECANNOTBESAMEASPAYER pLATFORMFEEPAYEECANNOTBESAMEASPAYER) {
        return pLATFORMFEEPAYEECANNOTBESAMEASPAYER == null ? null : new PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase(pLATFORMFEEPAYEECANNOTBESAMEASPAYER);
    }

    /**
     * This is MISSING_PARAM_CIP_ERROR_RESP case.
     * @param mISSINGPARAMCIPERRORRESP MISSINGPARAMCIPERRORRESP value for mISSINGPARAMCIPERRORRESP.
     * @return The MISSINGPARAMCIPERRORRESPCase object.
     */
    public static OrdersCapture422IssuesItems fromMISSINGPARAMCIPERRORRESP(
            MISSINGPARAMCIPERRORRESP mISSINGPARAMCIPERRORRESP) {
        return mISSINGPARAMCIPERRORRESP == null ? null : new MISSINGPARAMCIPERRORRESPCase(mISSINGPARAMCIPERRORRESP);
    }

    /**
     * This is IDENTIFIER_NOT_FOUND case.
     * @param iDENTIFIERNOTFOUND IDENTIFIERNOTFOUND value for iDENTIFIERNOTFOUND.
     * @return The IDENTIFIERNOTFOUNDCase object.
     */
    public static OrdersCapture422IssuesItems fromIDENTIFIERNOTFOUND(
            IDENTIFIERNOTFOUND iDENTIFIERNOTFOUND) {
        return iDENTIFIERNOTFOUND == null ? null : new IDENTIFIERNOTFOUNDCase(iDENTIFIERNOTFOUND);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R aGREEMENTALREADYCANCELLEDRESULT(AGREEMENTALREADYCANCELLEDRESULT aGREEMENTALREADYCANCELLEDRESULT);

        R bILLINGAGREEMENTNOTFOUNDRESULT(BILLINGAGREEMENTNOTFOUNDRESULT bILLINGAGREEMENTNOTFOUNDRESULT);

        R dECLINEDDUETORELATEDTXNERROR(DECLINEDDUETORELATEDTXNERROR dECLINEDDUETORELATEDTXNERROR);

        R mISSINGPREVIOUSREFERENCEERRORRESPONSE(MISSINGPREVIOUSREFERENCEERRORRESPONSE mISSINGPREVIOUSREFERENCEERRORRESPONSE);

        R mISSINGCRYPTOGRAMERRORRESPONSE(MISSINGCRYPTOGRAMERRORRESPONSE mISSINGCRYPTOGRAMERRORRESPONSE);

        R cARDBRANDNOTSUPPORTEDERROR(CARDBRANDNOTSUPPORTEDERROR cARDBRANDNOTSUPPORTEDERROR);

        R cOMPLIANCEVIOLATIONERROR(COMPLIANCEVIOLATIONERROR cOMPLIANCEVIOLATIONERROR);

        R dOMESTICTRANSACTIONREQUIREDERRORRESPONSE(DOMESTICTRANSACTIONREQUIREDERRORRESPONSE dOMESTICTRANSACTIONREQUIREDERRORRESPONSE);

        R dUPLICATEINVOICEIDERRORRESPONSE(DUPLICATEINVOICEIDERRORRESPONSE dUPLICATEINVOICEIDERRORRESPONSE);

        R iNSTRUMENTDECLINEDERROR(INSTRUMENTDECLINEDERROR iNSTRUMENTDECLINEDERROR);

        R oRDERNOTAPPROVEDERROR(ORDERNOTAPPROVEDERROR oRDERNOTAPPROVEDERROR);

        R mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE(MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE);

        R pAYEEBLOCKEDTRANSACTIONERRORRESPONSE(PAYEEBLOCKEDTRANSACTIONERRORRESPONSE pAYEEBLOCKEDTRANSACTIONERRORRESPONSE);

        R pAYEEFXRATEIDEXPIREDERRORRESPONSE(PAYEEFXRATEIDEXPIREDERRORRESPONSE pAYEEFXRATEIDEXPIREDERRORRESPONSE);

        R pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE(PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE);

        R pAYERACCOUNTRESTRICTEDERRORRESPONSE(PAYERACCOUNTRESTRICTEDERRORRESPONSE pAYERACCOUNTRESTRICTEDERRORRESPONSE);

        R pAYERCANNOTPAYERRORRESPONSE(PAYERCANNOTPAYERRORRESPONSE pAYERCANNOTPAYERRORRESPONSE);

        R pAYPALTRANSACTIONIDEXPIREDERROR(PAYPALTRANSACTIONIDEXPIREDERROR pAYPALTRANSACTIONIDEXPIREDERROR);

        R pNREFEXPIREDERROR(PNREFEXPIREDERROR pNREFEXPIREDERROR);

        R rEFERENCEDCARDEXPIREDERROR(REFERENCEDCARDEXPIREDERROR rEFERENCEDCARDEXPIREDERROR);

        R tOKENIDNOTFOUNDERROR(TOKENIDNOTFOUNDERROR tOKENIDNOTFOUNDERROR);

        R tRANSACTIONLIMITEXCEEDEDERRORRESPONSE(TRANSACTIONLIMITEXCEEDEDERRORRESPONSE tRANSACTIONLIMITEXCEEDEDERRORRESPONSE);

        R tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE(TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE);

        R tRANSACTIONREFUSEDERRORRESPONSE(TRANSACTIONREFUSEDERRORRESPONSE tRANSACTIONREFUSEDERRORRESPONSE);

        R rEDIRECTPAYERFORALTERNATEFUNDING(REDIRECTPAYERFORALTERNATEFUNDING rEDIRECTPAYERFORALTERNATEFUNDING);

        R oRDERALREADYCAPTUREDERROR(ORDERALREADYCAPTUREDERROR oRDERALREADYCAPTUREDERROR);

        R tRANSACTIONBLOCKEDBYPAYEEERROR(TRANSACTIONBLOCKEDBYPAYEEERROR tRANSACTIONBLOCKEDBYPAYEEERROR);

        R aUTHCAPTURENOTENABLEDERRORRESPONSE(AUTHCAPTURENOTENABLEDERRORRESPONSE aUTHCAPTURENOTENABLEDERRORRESPONSE);

        R nOTENABLEDFORBANKPROCESSING(NOTENABLEDFORBANKPROCESSING nOTENABLEDFORBANKPROCESSING);

        R nOTENABLEDFORCARDPROCESSING(NOTENABLEDFORCARDPROCESSING nOTENABLEDFORCARDPROCESSING);

        R pAYEENOTENABLEDFORBANKPROCESSING(PAYEENOTENABLEDFORBANKPROCESSING pAYEENOTENABLEDFORBANKPROCESSING);

        R pAYEENOTENABLEDFORCARDPROCESSING(PAYEENOTENABLEDFORCARDPROCESSING pAYEENOTENABLEDFORCARDPROCESSING);

        R iNVALIDPICKUPADDRESSERROR(INVALIDPICKUPADDRESSERROR iNVALIDPICKUPADDRESSERROR);

        R sHIPPINGADDRESSINVALIDERRORRESPONSE(SHIPPINGADDRESSINVALIDERRORRESPONSE sHIPPINGADDRESSINVALIDERRORRESPONSE);

        R pAYMENTSOURCENOTSUPPORTED(PAYMENTSOURCENOTSUPPORTED pAYMENTSOURCENOTSUPPORTED);

        R oRDERCOMPLETIONINPROGRESS(ORDERCOMPLETIONINPROGRESS oRDERCOMPLETIONINPROGRESS);

        R bILLINGAGREEMENTIDMISMATCHERROR(BILLINGAGREEMENTIDMISMATCHERROR bILLINGAGREEMENTIDMISMATCHERROR);

        R pREFERREDPAYMENTSOURCEMISMATCHERROR(PREFERREDPAYMENTSOURCEMISMATCHERROR pREFERREDPAYMENTSOURCEMISMATCHERROR);

        R iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE(INCOMPATIBLEPARAMETERVALUEERRORRESPONSE iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE);

        R iNVALIDPREVTRANSREFERRORRESPONSE(INVALIDPREVTRANSREFERRORRESPONSE iNVALIDPREVTRANSREFERRORRESPONSE);

        R cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE(CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE);

        R vOIDEDPREVTRANSREFERRORRESPONSE(VOIDEDPREVTRANSREFERRORRESPONSE vOIDEDPREVTRANSREFERRORRESPONSE);

        R pAYMENTSOURCEMISMATCHERRORRESPONSE(PAYMENTSOURCEMISMATCHERRORRESPONSE pAYMENTSOURCEMISMATCHERRORRESPONSE);

        R mERCHANTINITIATEDSECURITYCODEERRORRESPONSE(MERCHANTINITIATEDSECURITYCODEERRORRESPONSE mERCHANTINITIATEDSECURITYCODEERRORRESPONSE);

        R mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE(MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE);

        R mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP(MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP);

        R rETURNURLREQUIREDERRORRESPONSE(RETURNURLREQUIREDERRORRESPONSE rETURNURLREQUIREDERRORRESPONSE);

        R cANCELURLREQUIREDERRORRESPONSE(CANCELURLREQUIREDERRORRESPONSE cANCELURLREQUIREDERRORRESPONSE);

        R sETUPERRORFORBANKERROR(SETUPERRORFORBANKERROR sETUPERRORFORBANKERROR);

        R bANKNOTSUPPORTEDFORVERIFICATIONERROR(BANKNOTSUPPORTEDFORVERIFICATIONERROR bANKNOTSUPPORTEDFORVERIFICATIONERROR);

        R pAYERACTIONREQUIREDERROR(PAYERACTIONREQUIREDERROR pAYERACTIONREQUIREDERROR);

        R aPPLEPAYAMOUNTMISMATCHERRORRESPONSE(APPLEPAYAMOUNTMISMATCHERRORRESPONSE aPPLEPAYAMOUNTMISMATCHERRORRESPONSE);

        R cURRENCYNOTSUPPORTEDFORBANKERROR(CURRENCYNOTSUPPORTEDFORBANKERROR cURRENCYNOTSUPPORTEDFORBANKERROR);

        R oNLYONEBANKSOURCEALLOWEDERROR(ONLYONEBANKSOURCEALLOWEDERROR oNLYONEBANKSOURCEALLOWEDERROR);

        R iNVALIDIBANERROR(INVALIDIBANERROR iNVALIDIBANERROR);

        R iBANCOUNTRYNOTSUPPORTEDERROR(IBANCOUNTRYNOTSUPPORTEDERROR iBANCOUNTRYNOTSUPPORTEDERROR);

        R cARDNUMBERREQUIREDERRORRESPONSE(CARDNUMBERREQUIREDERRORRESPONSE cARDNUMBERREQUIREDERRORRESPONSE);

        R cARDEXPIRYREQUIREDERRORRESPONSE(CARDEXPIRYREQUIREDERRORRESPONSE cARDEXPIRYREQUIREDERRORRESPONSE);

        R vAULTINSTRUCTIONREQUIREDERRORRESPONSE(VAULTINSTRUCTIONREQUIREDERRORRESPONSE vAULTINSTRUCTIONREQUIREDERRORRESPONSE);

        R vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE(VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE);

        R nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE(NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE);

        R pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE(PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE);

        R pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE(PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE);

        R pNREFNOTFOUNDERRORRESPONSE(PNREFNOTFOUNDERRORRESPONSE pNREFNOTFOUNDERRORRESPONSE);

        R iNVALIDSECURITYCODELENGTHERRORRESPONSE(INVALIDSECURITYCODELENGTHERRORRESPONSE iNVALIDSECURITYCODELENGTHERRORRESPONSE);

        R pLATFORMFEEPAYEECANNOTBESAMEASPAYER(PLATFORMFEEPAYEECANNOTBESAMEASPAYER pLATFORMFEEPAYEECANNOTBESAMEASPAYER);

        R mISSINGPARAMCIPERRORRESP(MISSINGPARAMCIPERRORRESP mISSINGPARAMCIPERRORRESP);

        R iDENTIFIERNOTFOUND(IDENTIFIERNOTFOUND iDENTIFIERNOTFOUND);
    }

    /**
     * This is a implementation class for AGREEMENTALREADYCANCELLEDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AGREEMENTALREADYCANCELLEDRESULT")
    private static class AGREEMENTALREADYCANCELLEDRESULTCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private AGREEMENTALREADYCANCELLEDRESULT aGREEMENTALREADYCANCELLEDRESULT;

        AGREEMENTALREADYCANCELLEDRESULTCase(AGREEMENTALREADYCANCELLEDRESULT aGREEMENTALREADYCANCELLEDRESULT) {
            this.aGREEMENTALREADYCANCELLEDRESULT = aGREEMENTALREADYCANCELLEDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aGREEMENTALREADYCANCELLEDRESULT(this.aGREEMENTALREADYCANCELLEDRESULT);
        }

        @JsonCreator
        private AGREEMENTALREADYCANCELLEDRESULTCase(JsonNode jsonNode) throws IOException {
            this.aGREEMENTALREADYCANCELLEDRESULT = ApiHelper.deserialize(jsonNode,
                AGREEMENTALREADYCANCELLEDRESULT.class);
        }

        @Override
        public String toString() {
            return aGREEMENTALREADYCANCELLEDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for BILLINGAGREEMENTNOTFOUNDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BILLINGAGREEMENTNOTFOUNDRESULT")
    private static class BILLINGAGREEMENTNOTFOUNDRESULTCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private BILLINGAGREEMENTNOTFOUNDRESULT bILLINGAGREEMENTNOTFOUNDRESULT;

        BILLINGAGREEMENTNOTFOUNDRESULTCase(BILLINGAGREEMENTNOTFOUNDRESULT bILLINGAGREEMENTNOTFOUNDRESULT) {
            this.bILLINGAGREEMENTNOTFOUNDRESULT = bILLINGAGREEMENTNOTFOUNDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bILLINGAGREEMENTNOTFOUNDRESULT(this.bILLINGAGREEMENTNOTFOUNDRESULT);
        }

        @JsonCreator
        private BILLINGAGREEMENTNOTFOUNDRESULTCase(JsonNode jsonNode) throws IOException {
            this.bILLINGAGREEMENTNOTFOUNDRESULT = ApiHelper.deserialize(jsonNode,
                BILLINGAGREEMENTNOTFOUNDRESULT.class);
        }

        @Override
        public String toString() {
            return bILLINGAGREEMENTNOTFOUNDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for DECLINEDDUETORELATEDTXNERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DECLINEDDUETORELATEDTXNERROR")
    private static class DECLINEDDUETORELATEDTXNERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private DECLINEDDUETORELATEDTXNERROR dECLINEDDUETORELATEDTXNERROR;

        DECLINEDDUETORELATEDTXNERRORCase(DECLINEDDUETORELATEDTXNERROR dECLINEDDUETORELATEDTXNERROR) {
            this.dECLINEDDUETORELATEDTXNERROR = dECLINEDDUETORELATEDTXNERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dECLINEDDUETORELATEDTXNERROR(this.dECLINEDDUETORELATEDTXNERROR);
        }

        @JsonCreator
        private DECLINEDDUETORELATEDTXNERRORCase(JsonNode jsonNode) throws IOException {
            this.dECLINEDDUETORELATEDTXNERROR = ApiHelper.deserialize(jsonNode,
                DECLINEDDUETORELATEDTXNERROR.class);
        }

        @Override
        public String toString() {
            return dECLINEDDUETORELATEDTXNERROR.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPREVIOUSREFERENCEERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPREVIOUSREFERENCEERRORRESPONSE")
    private static class MISSINGPREVIOUSREFERENCEERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MISSINGPREVIOUSREFERENCEERRORRESPONSE mISSINGPREVIOUSREFERENCEERRORRESPONSE;

        MISSINGPREVIOUSREFERENCEERRORRESPONSECase(MISSINGPREVIOUSREFERENCEERRORRESPONSE mISSINGPREVIOUSREFERENCEERRORRESPONSE) {
            this.mISSINGPREVIOUSREFERENCEERRORRESPONSE = mISSINGPREVIOUSREFERENCEERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPREVIOUSREFERENCEERRORRESPONSE(this.mISSINGPREVIOUSREFERENCEERRORRESPONSE);
        }

        @JsonCreator
        private MISSINGPREVIOUSREFERENCEERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.mISSINGPREVIOUSREFERENCEERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                MISSINGPREVIOUSREFERENCEERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return mISSINGPREVIOUSREFERENCEERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGCRYPTOGRAMERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGCRYPTOGRAMERRORRESPONSE")
    private static class MISSINGCRYPTOGRAMERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MISSINGCRYPTOGRAMERRORRESPONSE mISSINGCRYPTOGRAMERRORRESPONSE;

        MISSINGCRYPTOGRAMERRORRESPONSECase(MISSINGCRYPTOGRAMERRORRESPONSE mISSINGCRYPTOGRAMERRORRESPONSE) {
            this.mISSINGCRYPTOGRAMERRORRESPONSE = mISSINGCRYPTOGRAMERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGCRYPTOGRAMERRORRESPONSE(this.mISSINGCRYPTOGRAMERRORRESPONSE);
        }

        @JsonCreator
        private MISSINGCRYPTOGRAMERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.mISSINGCRYPTOGRAMERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                MISSINGCRYPTOGRAMERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return mISSINGCRYPTOGRAMERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for CARDBRANDNOTSUPPORTEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDBRANDNOTSUPPORTEDERROR")
    private static class CARDBRANDNOTSUPPORTEDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CARDBRANDNOTSUPPORTEDERROR cARDBRANDNOTSUPPORTEDERROR;

        CARDBRANDNOTSUPPORTEDERRORCase(CARDBRANDNOTSUPPORTEDERROR cARDBRANDNOTSUPPORTEDERROR) {
            this.cARDBRANDNOTSUPPORTEDERROR = cARDBRANDNOTSUPPORTEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDBRANDNOTSUPPORTEDERROR(this.cARDBRANDNOTSUPPORTEDERROR);
        }

        @JsonCreator
        private CARDBRANDNOTSUPPORTEDERRORCase(JsonNode jsonNode) throws IOException {
            this.cARDBRANDNOTSUPPORTEDERROR = ApiHelper.deserialize(jsonNode,
                CARDBRANDNOTSUPPORTEDERROR.class);
        }

        @Override
        public String toString() {
            return cARDBRANDNOTSUPPORTEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for COMPLIANCEVIOLATIONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "COMPLIANCEVIOLATIONERROR")
    private static class COMPLIANCEVIOLATIONERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private COMPLIANCEVIOLATIONERROR cOMPLIANCEVIOLATIONERROR;

        COMPLIANCEVIOLATIONERRORCase(COMPLIANCEVIOLATIONERROR cOMPLIANCEVIOLATIONERROR) {
            this.cOMPLIANCEVIOLATIONERROR = cOMPLIANCEVIOLATIONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cOMPLIANCEVIOLATIONERROR(this.cOMPLIANCEVIOLATIONERROR);
        }

        @JsonCreator
        private COMPLIANCEVIOLATIONERRORCase(JsonNode jsonNode) throws IOException {
            this.cOMPLIANCEVIOLATIONERROR = ApiHelper.deserialize(jsonNode,
                COMPLIANCEVIOLATIONERROR.class);
        }

        @Override
        public String toString() {
            return cOMPLIANCEVIOLATIONERROR.toString();
        }
    }

    /**
     * This is a implementation class for DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DOMESTICTRANSACTIONREQUIREDERRORRESPONSE")
    private static class DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private DOMESTICTRANSACTIONREQUIREDERRORRESPONSE dOMESTICTRANSACTIONREQUIREDERRORRESPONSE;

        DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase(DOMESTICTRANSACTIONREQUIREDERRORRESPONSE dOMESTICTRANSACTIONREQUIREDERRORRESPONSE) {
            this.dOMESTICTRANSACTIONREQUIREDERRORRESPONSE = dOMESTICTRANSACTIONREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dOMESTICTRANSACTIONREQUIREDERRORRESPONSE(this.dOMESTICTRANSACTIONREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.dOMESTICTRANSACTIONREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                DOMESTICTRANSACTIONREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return dOMESTICTRANSACTIONREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for DUPLICATEINVOICEIDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DUPLICATEINVOICEIDERRORRESPONSE")
    private static class DUPLICATEINVOICEIDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private DUPLICATEINVOICEIDERRORRESPONSE dUPLICATEINVOICEIDERRORRESPONSE;

        DUPLICATEINVOICEIDERRORRESPONSECase(DUPLICATEINVOICEIDERRORRESPONSE dUPLICATEINVOICEIDERRORRESPONSE) {
            this.dUPLICATEINVOICEIDERRORRESPONSE = dUPLICATEINVOICEIDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dUPLICATEINVOICEIDERRORRESPONSE(this.dUPLICATEINVOICEIDERRORRESPONSE);
        }

        @JsonCreator
        private DUPLICATEINVOICEIDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.dUPLICATEINVOICEIDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                DUPLICATEINVOICEIDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return dUPLICATEINVOICEIDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for INSTRUMENTDECLINEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INSTRUMENTDECLINEDERROR")
    private static class INSTRUMENTDECLINEDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INSTRUMENTDECLINEDERROR iNSTRUMENTDECLINEDERROR;

        INSTRUMENTDECLINEDERRORCase(INSTRUMENTDECLINEDERROR iNSTRUMENTDECLINEDERROR) {
            this.iNSTRUMENTDECLINEDERROR = iNSTRUMENTDECLINEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNSTRUMENTDECLINEDERROR(this.iNSTRUMENTDECLINEDERROR);
        }

        @JsonCreator
        private INSTRUMENTDECLINEDERRORCase(JsonNode jsonNode) throws IOException {
            this.iNSTRUMENTDECLINEDERROR = ApiHelper.deserialize(jsonNode,
                INSTRUMENTDECLINEDERROR.class);
        }

        @Override
        public String toString() {
            return iNSTRUMENTDECLINEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ORDERNOTAPPROVEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERNOTAPPROVEDERROR")
    private static class ORDERNOTAPPROVEDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private ORDERNOTAPPROVEDERROR oRDERNOTAPPROVEDERROR;

        ORDERNOTAPPROVEDERRORCase(ORDERNOTAPPROVEDERROR oRDERNOTAPPROVEDERROR) {
            this.oRDERNOTAPPROVEDERROR = oRDERNOTAPPROVEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERNOTAPPROVEDERROR(this.oRDERNOTAPPROVEDERROR);
        }

        @JsonCreator
        private ORDERNOTAPPROVEDERRORCase(JsonNode jsonNode) throws IOException {
            this.oRDERNOTAPPROVEDERROR = ApiHelper.deserialize(jsonNode,
                ORDERNOTAPPROVEDERROR.class);
        }

        @Override
        public String toString() {
            return oRDERNOTAPPROVEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE")
    private static class MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE;

        MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase(MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE) {
            this.mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE = mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE(this.mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE);
        }

        @JsonCreator
        private MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return mAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEBLOCKEDTRANSACTIONERRORRESPONSE")
    private static class PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYEEBLOCKEDTRANSACTIONERRORRESPONSE pAYEEBLOCKEDTRANSACTIONERRORRESPONSE;

        PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase(PAYEEBLOCKEDTRANSACTIONERRORRESPONSE pAYEEBLOCKEDTRANSACTIONERRORRESPONSE) {
            this.pAYEEBLOCKEDTRANSACTIONERRORRESPONSE = pAYEEBLOCKEDTRANSACTIONERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEBLOCKEDTRANSACTIONERRORRESPONSE(this.pAYEEBLOCKEDTRANSACTIONERRORRESPONSE);
        }

        @JsonCreator
        private PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYEEBLOCKEDTRANSACTIONERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYEEBLOCKEDTRANSACTIONERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYEEBLOCKEDTRANSACTIONERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEFXRATEIDEXPIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEFXRATEIDEXPIREDERRORRESPONSE")
    private static class PAYEEFXRATEIDEXPIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYEEFXRATEIDEXPIREDERRORRESPONSE pAYEEFXRATEIDEXPIREDERRORRESPONSE;

        PAYEEFXRATEIDEXPIREDERRORRESPONSECase(PAYEEFXRATEIDEXPIREDERRORRESPONSE pAYEEFXRATEIDEXPIREDERRORRESPONSE) {
            this.pAYEEFXRATEIDEXPIREDERRORRESPONSE = pAYEEFXRATEIDEXPIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEFXRATEIDEXPIREDERRORRESPONSE(this.pAYEEFXRATEIDEXPIREDERRORRESPONSE);
        }

        @JsonCreator
        private PAYEEFXRATEIDEXPIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYEEFXRATEIDEXPIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYEEFXRATEIDEXPIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYEEFXRATEIDEXPIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE")
    private static class PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE;

        PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase(PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE) {
            this.pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE = pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE(this.pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE);
        }

        @JsonCreator
        private PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACCOUNTRESTRICTEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACCOUNTRESTRICTEDERRORRESPONSE")
    private static class PAYERACCOUNTRESTRICTEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYERACCOUNTRESTRICTEDERRORRESPONSE pAYERACCOUNTRESTRICTEDERRORRESPONSE;

        PAYERACCOUNTRESTRICTEDERRORRESPONSECase(PAYERACCOUNTRESTRICTEDERRORRESPONSE pAYERACCOUNTRESTRICTEDERRORRESPONSE) {
            this.pAYERACCOUNTRESTRICTEDERRORRESPONSE = pAYERACCOUNTRESTRICTEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACCOUNTRESTRICTEDERRORRESPONSE(this.pAYERACCOUNTRESTRICTEDERRORRESPONSE);
        }

        @JsonCreator
        private PAYERACCOUNTRESTRICTEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYERACCOUNTRESTRICTEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYERACCOUNTRESTRICTEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYERACCOUNTRESTRICTEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYERCANNOTPAYERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERCANNOTPAYERRORRESPONSE")
    private static class PAYERCANNOTPAYERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYERCANNOTPAYERRORRESPONSE pAYERCANNOTPAYERRORRESPONSE;

        PAYERCANNOTPAYERRORRESPONSECase(PAYERCANNOTPAYERRORRESPONSE pAYERCANNOTPAYERRORRESPONSE) {
            this.pAYERCANNOTPAYERRORRESPONSE = pAYERCANNOTPAYERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERCANNOTPAYERRORRESPONSE(this.pAYERCANNOTPAYERRORRESPONSE);
        }

        @JsonCreator
        private PAYERCANNOTPAYERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYERCANNOTPAYERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYERCANNOTPAYERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYERCANNOTPAYERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALTRANSACTIONIDEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALTRANSACTIONIDEXPIREDERROR")
    private static class PAYPALTRANSACTIONIDEXPIREDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYPALTRANSACTIONIDEXPIREDERROR pAYPALTRANSACTIONIDEXPIREDERROR;

        PAYPALTRANSACTIONIDEXPIREDERRORCase(PAYPALTRANSACTIONIDEXPIREDERROR pAYPALTRANSACTIONIDEXPIREDERROR) {
            this.pAYPALTRANSACTIONIDEXPIREDERROR = pAYPALTRANSACTIONIDEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALTRANSACTIONIDEXPIREDERROR(this.pAYPALTRANSACTIONIDEXPIREDERROR);
        }

        @JsonCreator
        private PAYPALTRANSACTIONIDEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYPALTRANSACTIONIDEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                PAYPALTRANSACTIONIDEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return pAYPALTRANSACTIONIDEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PNREFEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PNREFEXPIREDERROR")
    private static class PNREFEXPIREDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PNREFEXPIREDERROR pNREFEXPIREDERROR;

        PNREFEXPIREDERRORCase(PNREFEXPIREDERROR pNREFEXPIREDERROR) {
            this.pNREFEXPIREDERROR = pNREFEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pNREFEXPIREDERROR(this.pNREFEXPIREDERROR);
        }

        @JsonCreator
        private PNREFEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.pNREFEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                PNREFEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return pNREFEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for REFERENCEDCARDEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFERENCEDCARDEXPIREDERROR")
    private static class REFERENCEDCARDEXPIREDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private REFERENCEDCARDEXPIREDERROR rEFERENCEDCARDEXPIREDERROR;

        REFERENCEDCARDEXPIREDERRORCase(REFERENCEDCARDEXPIREDERROR rEFERENCEDCARDEXPIREDERROR) {
            this.rEFERENCEDCARDEXPIREDERROR = rEFERENCEDCARDEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFERENCEDCARDEXPIREDERROR(this.rEFERENCEDCARDEXPIREDERROR);
        }

        @JsonCreator
        private REFERENCEDCARDEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.rEFERENCEDCARDEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                REFERENCEDCARDEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return rEFERENCEDCARDEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for TOKENIDNOTFOUNDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TOKENIDNOTFOUNDERROR")
    private static class TOKENIDNOTFOUNDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private TOKENIDNOTFOUNDERROR tOKENIDNOTFOUNDERROR;

        TOKENIDNOTFOUNDERRORCase(TOKENIDNOTFOUNDERROR tOKENIDNOTFOUNDERROR) {
            this.tOKENIDNOTFOUNDERROR = tOKENIDNOTFOUNDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tOKENIDNOTFOUNDERROR(this.tOKENIDNOTFOUNDERROR);
        }

        @JsonCreator
        private TOKENIDNOTFOUNDERRORCase(JsonNode jsonNode) throws IOException {
            this.tOKENIDNOTFOUNDERROR = ApiHelper.deserialize(jsonNode,
                TOKENIDNOTFOUNDERROR.class);
        }

        @Override
        public String toString() {
            return tOKENIDNOTFOUNDERROR.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONLIMITEXCEEDEDERRORRESPONSE")
    private static class TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private TRANSACTIONLIMITEXCEEDEDERRORRESPONSE tRANSACTIONLIMITEXCEEDEDERRORRESPONSE;

        TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase(TRANSACTIONLIMITEXCEEDEDERRORRESPONSE tRANSACTIONLIMITEXCEEDEDERRORRESPONSE) {
            this.tRANSACTIONLIMITEXCEEDEDERRORRESPONSE = tRANSACTIONLIMITEXCEEDEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONLIMITEXCEEDEDERRORRESPONSE(this.tRANSACTIONLIMITEXCEEDEDERRORRESPONSE);
        }

        @JsonCreator
        private TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONLIMITEXCEEDEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                TRANSACTIONLIMITEXCEEDEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONLIMITEXCEEDEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE")
    private static class TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE;

        TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase(TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE) {
            this.tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE = tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE(this.tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE);
        }

        @JsonCreator
        private TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONREFUSEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONREFUSEDERRORRESPONSE")
    private static class TRANSACTIONREFUSEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private TRANSACTIONREFUSEDERRORRESPONSE tRANSACTIONREFUSEDERRORRESPONSE;

        TRANSACTIONREFUSEDERRORRESPONSECase(TRANSACTIONREFUSEDERRORRESPONSE tRANSACTIONREFUSEDERRORRESPONSE) {
            this.tRANSACTIONREFUSEDERRORRESPONSE = tRANSACTIONREFUSEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONREFUSEDERRORRESPONSE(this.tRANSACTIONREFUSEDERRORRESPONSE);
        }

        @JsonCreator
        private TRANSACTIONREFUSEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONREFUSEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                TRANSACTIONREFUSEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONREFUSEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for REDIRECTPAYERFORALTERNATEFUNDINGCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REDIRECTPAYERFORALTERNATEFUNDING")
    private static class REDIRECTPAYERFORALTERNATEFUNDINGCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private REDIRECTPAYERFORALTERNATEFUNDING rEDIRECTPAYERFORALTERNATEFUNDING;

        REDIRECTPAYERFORALTERNATEFUNDINGCase(REDIRECTPAYERFORALTERNATEFUNDING rEDIRECTPAYERFORALTERNATEFUNDING) {
            this.rEDIRECTPAYERFORALTERNATEFUNDING = rEDIRECTPAYERFORALTERNATEFUNDING;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEDIRECTPAYERFORALTERNATEFUNDING(this.rEDIRECTPAYERFORALTERNATEFUNDING);
        }

        @JsonCreator
        private REDIRECTPAYERFORALTERNATEFUNDINGCase(JsonNode jsonNode) throws IOException {
            this.rEDIRECTPAYERFORALTERNATEFUNDING = ApiHelper.deserialize(jsonNode,
                REDIRECTPAYERFORALTERNATEFUNDING.class);
        }

        @Override
        public String toString() {
            return rEDIRECTPAYERFORALTERNATEFUNDING.toString();
        }
    }

    /**
     * This is a implementation class for ORDERALREADYCAPTUREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERALREADYCAPTUREDERROR")
    private static class ORDERALREADYCAPTUREDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private ORDERALREADYCAPTUREDERROR oRDERALREADYCAPTUREDERROR;

        ORDERALREADYCAPTUREDERRORCase(ORDERALREADYCAPTUREDERROR oRDERALREADYCAPTUREDERROR) {
            this.oRDERALREADYCAPTUREDERROR = oRDERALREADYCAPTUREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERALREADYCAPTUREDERROR(this.oRDERALREADYCAPTUREDERROR);
        }

        @JsonCreator
        private ORDERALREADYCAPTUREDERRORCase(JsonNode jsonNode) throws IOException {
            this.oRDERALREADYCAPTUREDERROR = ApiHelper.deserialize(jsonNode,
                ORDERALREADYCAPTUREDERROR.class);
        }

        @Override
        public String toString() {
            return oRDERALREADYCAPTUREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONBLOCKEDBYPAYEEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONBLOCKEDBYPAYEEERROR")
    private static class TRANSACTIONBLOCKEDBYPAYEEERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private TRANSACTIONBLOCKEDBYPAYEEERROR tRANSACTIONBLOCKEDBYPAYEEERROR;

        TRANSACTIONBLOCKEDBYPAYEEERRORCase(TRANSACTIONBLOCKEDBYPAYEEERROR tRANSACTIONBLOCKEDBYPAYEEERROR) {
            this.tRANSACTIONBLOCKEDBYPAYEEERROR = tRANSACTIONBLOCKEDBYPAYEEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONBLOCKEDBYPAYEEERROR(this.tRANSACTIONBLOCKEDBYPAYEEERROR);
        }

        @JsonCreator
        private TRANSACTIONBLOCKEDBYPAYEEERRORCase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONBLOCKEDBYPAYEEERROR = ApiHelper.deserialize(jsonNode,
                TRANSACTIONBLOCKEDBYPAYEEERROR.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONBLOCKEDBYPAYEEERROR.toString();
        }
    }

    /**
     * This is a implementation class for AUTHCAPTURENOTENABLEDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AUTHCAPTURENOTENABLEDERRORRESPONSE")
    private static class AUTHCAPTURENOTENABLEDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private AUTHCAPTURENOTENABLEDERRORRESPONSE aUTHCAPTURENOTENABLEDERRORRESPONSE;

        AUTHCAPTURENOTENABLEDERRORRESPONSECase(AUTHCAPTURENOTENABLEDERRORRESPONSE aUTHCAPTURENOTENABLEDERRORRESPONSE) {
            this.aUTHCAPTURENOTENABLEDERRORRESPONSE = aUTHCAPTURENOTENABLEDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aUTHCAPTURENOTENABLEDERRORRESPONSE(this.aUTHCAPTURENOTENABLEDERRORRESPONSE);
        }

        @JsonCreator
        private AUTHCAPTURENOTENABLEDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.aUTHCAPTURENOTENABLEDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                AUTHCAPTURENOTENABLEDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return aUTHCAPTURENOTENABLEDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for NOTENABLEDFORBANKPROCESSINGCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTENABLEDFORBANKPROCESSING")
    private static class NOTENABLEDFORBANKPROCESSINGCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private NOTENABLEDFORBANKPROCESSING nOTENABLEDFORBANKPROCESSING;

        NOTENABLEDFORBANKPROCESSINGCase(NOTENABLEDFORBANKPROCESSING nOTENABLEDFORBANKPROCESSING) {
            this.nOTENABLEDFORBANKPROCESSING = nOTENABLEDFORBANKPROCESSING;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTENABLEDFORBANKPROCESSING(this.nOTENABLEDFORBANKPROCESSING);
        }

        @JsonCreator
        private NOTENABLEDFORBANKPROCESSINGCase(JsonNode jsonNode) throws IOException {
            this.nOTENABLEDFORBANKPROCESSING = ApiHelper.deserialize(jsonNode,
                NOTENABLEDFORBANKPROCESSING.class);
        }

        @Override
        public String toString() {
            return nOTENABLEDFORBANKPROCESSING.toString();
        }
    }

    /**
     * This is a implementation class for NOTENABLEDFORCARDPROCESSINGCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTENABLEDFORCARDPROCESSING")
    private static class NOTENABLEDFORCARDPROCESSINGCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private NOTENABLEDFORCARDPROCESSING nOTENABLEDFORCARDPROCESSING;

        NOTENABLEDFORCARDPROCESSINGCase(NOTENABLEDFORCARDPROCESSING nOTENABLEDFORCARDPROCESSING) {
            this.nOTENABLEDFORCARDPROCESSING = nOTENABLEDFORCARDPROCESSING;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTENABLEDFORCARDPROCESSING(this.nOTENABLEDFORCARDPROCESSING);
        }

        @JsonCreator
        private NOTENABLEDFORCARDPROCESSINGCase(JsonNode jsonNode) throws IOException {
            this.nOTENABLEDFORCARDPROCESSING = ApiHelper.deserialize(jsonNode,
                NOTENABLEDFORCARDPROCESSING.class);
        }

        @Override
        public String toString() {
            return nOTENABLEDFORCARDPROCESSING.toString();
        }
    }

    /**
     * This is a implementation class for PAYEENOTENABLEDFORBANKPROCESSINGCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEENOTENABLEDFORBANKPROCESSING")
    private static class PAYEENOTENABLEDFORBANKPROCESSINGCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYEENOTENABLEDFORBANKPROCESSING pAYEENOTENABLEDFORBANKPROCESSING;

        PAYEENOTENABLEDFORBANKPROCESSINGCase(PAYEENOTENABLEDFORBANKPROCESSING pAYEENOTENABLEDFORBANKPROCESSING) {
            this.pAYEENOTENABLEDFORBANKPROCESSING = pAYEENOTENABLEDFORBANKPROCESSING;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEENOTENABLEDFORBANKPROCESSING(this.pAYEENOTENABLEDFORBANKPROCESSING);
        }

        @JsonCreator
        private PAYEENOTENABLEDFORBANKPROCESSINGCase(JsonNode jsonNode) throws IOException {
            this.pAYEENOTENABLEDFORBANKPROCESSING = ApiHelper.deserialize(jsonNode,
                PAYEENOTENABLEDFORBANKPROCESSING.class);
        }

        @Override
        public String toString() {
            return pAYEENOTENABLEDFORBANKPROCESSING.toString();
        }
    }

    /**
     * This is a implementation class for PAYEENOTENABLEDFORCARDPROCESSINGCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEENOTENABLEDFORCARDPROCESSING")
    private static class PAYEENOTENABLEDFORCARDPROCESSINGCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYEENOTENABLEDFORCARDPROCESSING pAYEENOTENABLEDFORCARDPROCESSING;

        PAYEENOTENABLEDFORCARDPROCESSINGCase(PAYEENOTENABLEDFORCARDPROCESSING pAYEENOTENABLEDFORCARDPROCESSING) {
            this.pAYEENOTENABLEDFORCARDPROCESSING = pAYEENOTENABLEDFORCARDPROCESSING;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEENOTENABLEDFORCARDPROCESSING(this.pAYEENOTENABLEDFORCARDPROCESSING);
        }

        @JsonCreator
        private PAYEENOTENABLEDFORCARDPROCESSINGCase(JsonNode jsonNode) throws IOException {
            this.pAYEENOTENABLEDFORCARDPROCESSING = ApiHelper.deserialize(jsonNode,
                PAYEENOTENABLEDFORCARDPROCESSING.class);
        }

        @Override
        public String toString() {
            return pAYEENOTENABLEDFORCARDPROCESSING.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPICKUPADDRESSERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPICKUPADDRESSERROR")
    private static class INVALIDPICKUPADDRESSERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INVALIDPICKUPADDRESSERROR iNVALIDPICKUPADDRESSERROR;

        INVALIDPICKUPADDRESSERRORCase(INVALIDPICKUPADDRESSERROR iNVALIDPICKUPADDRESSERROR) {
            this.iNVALIDPICKUPADDRESSERROR = iNVALIDPICKUPADDRESSERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPICKUPADDRESSERROR(this.iNVALIDPICKUPADDRESSERROR);
        }

        @JsonCreator
        private INVALIDPICKUPADDRESSERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPICKUPADDRESSERROR = ApiHelper.deserialize(jsonNode,
                INVALIDPICKUPADDRESSERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDPICKUPADDRESSERROR.toString();
        }
    }

    /**
     * This is a implementation class for SHIPPINGADDRESSINVALIDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SHIPPINGADDRESSINVALIDERRORRESPONSE")
    private static class SHIPPINGADDRESSINVALIDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private SHIPPINGADDRESSINVALIDERRORRESPONSE sHIPPINGADDRESSINVALIDERRORRESPONSE;

        SHIPPINGADDRESSINVALIDERRORRESPONSECase(SHIPPINGADDRESSINVALIDERRORRESPONSE sHIPPINGADDRESSINVALIDERRORRESPONSE) {
            this.sHIPPINGADDRESSINVALIDERRORRESPONSE = sHIPPINGADDRESSINVALIDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sHIPPINGADDRESSINVALIDERRORRESPONSE(this.sHIPPINGADDRESSINVALIDERRORRESPONSE);
        }

        @JsonCreator
        private SHIPPINGADDRESSINVALIDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.sHIPPINGADDRESSINVALIDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                SHIPPINGADDRESSINVALIDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return sHIPPINGADDRESSINVALIDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCENOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCENOTSUPPORTED")
    private static class PAYMENTSOURCENOTSUPPORTEDCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYMENTSOURCENOTSUPPORTED pAYMENTSOURCENOTSUPPORTED;

        PAYMENTSOURCENOTSUPPORTEDCase(PAYMENTSOURCENOTSUPPORTED pAYMENTSOURCENOTSUPPORTED) {
            this.pAYMENTSOURCENOTSUPPORTED = pAYMENTSOURCENOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCENOTSUPPORTED(this.pAYMENTSOURCENOTSUPPORTED);
        }

        @JsonCreator
        private PAYMENTSOURCENOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCENOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCENOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCENOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for ORDERCOMPLETIONINPROGRESSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERCOMPLETIONINPROGRESS")
    private static class ORDERCOMPLETIONINPROGRESSCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private ORDERCOMPLETIONINPROGRESS oRDERCOMPLETIONINPROGRESS;

        ORDERCOMPLETIONINPROGRESSCase(ORDERCOMPLETIONINPROGRESS oRDERCOMPLETIONINPROGRESS) {
            this.oRDERCOMPLETIONINPROGRESS = oRDERCOMPLETIONINPROGRESS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERCOMPLETIONINPROGRESS(this.oRDERCOMPLETIONINPROGRESS);
        }

        @JsonCreator
        private ORDERCOMPLETIONINPROGRESSCase(JsonNode jsonNode) throws IOException {
            this.oRDERCOMPLETIONINPROGRESS = ApiHelper.deserialize(jsonNode,
                ORDERCOMPLETIONINPROGRESS.class);
        }

        @Override
        public String toString() {
            return oRDERCOMPLETIONINPROGRESS.toString();
        }
    }

    /**
     * This is a implementation class for BILLINGAGREEMENTIDMISMATCHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BILLINGAGREEMENTIDMISMATCHERROR")
    private static class BILLINGAGREEMENTIDMISMATCHERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private BILLINGAGREEMENTIDMISMATCHERROR bILLINGAGREEMENTIDMISMATCHERROR;

        BILLINGAGREEMENTIDMISMATCHERRORCase(BILLINGAGREEMENTIDMISMATCHERROR bILLINGAGREEMENTIDMISMATCHERROR) {
            this.bILLINGAGREEMENTIDMISMATCHERROR = bILLINGAGREEMENTIDMISMATCHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bILLINGAGREEMENTIDMISMATCHERROR(this.bILLINGAGREEMENTIDMISMATCHERROR);
        }

        @JsonCreator
        private BILLINGAGREEMENTIDMISMATCHERRORCase(JsonNode jsonNode) throws IOException {
            this.bILLINGAGREEMENTIDMISMATCHERROR = ApiHelper.deserialize(jsonNode,
                BILLINGAGREEMENTIDMISMATCHERROR.class);
        }

        @Override
        public String toString() {
            return bILLINGAGREEMENTIDMISMATCHERROR.toString();
        }
    }

    /**
     * This is a implementation class for PREFERREDPAYMENTSOURCEMISMATCHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PREFERREDPAYMENTSOURCEMISMATCHERROR")
    private static class PREFERREDPAYMENTSOURCEMISMATCHERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PREFERREDPAYMENTSOURCEMISMATCHERROR pREFERREDPAYMENTSOURCEMISMATCHERROR;

        PREFERREDPAYMENTSOURCEMISMATCHERRORCase(PREFERREDPAYMENTSOURCEMISMATCHERROR pREFERREDPAYMENTSOURCEMISMATCHERROR) {
            this.pREFERREDPAYMENTSOURCEMISMATCHERROR = pREFERREDPAYMENTSOURCEMISMATCHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pREFERREDPAYMENTSOURCEMISMATCHERROR(this.pREFERREDPAYMENTSOURCEMISMATCHERROR);
        }

        @JsonCreator
        private PREFERREDPAYMENTSOURCEMISMATCHERRORCase(JsonNode jsonNode) throws IOException {
            this.pREFERREDPAYMENTSOURCEMISMATCHERROR = ApiHelper.deserialize(jsonNode,
                PREFERREDPAYMENTSOURCEMISMATCHERROR.class);
        }

        @Override
        public String toString() {
            return pREFERREDPAYMENTSOURCEMISMATCHERROR.toString();
        }
    }

    /**
     * This is a implementation class for INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INCOMPATIBLEPARAMETERVALUEERRORRESPONSE")
    private static class INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INCOMPATIBLEPARAMETERVALUEERRORRESPONSE iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE;

        INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase(INCOMPATIBLEPARAMETERVALUEERRORRESPONSE iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE) {
            this.iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE = iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE(this.iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE);
        }

        @JsonCreator
        private INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                INCOMPATIBLEPARAMETERVALUEERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return iNCOMPATIBLEPARAMETERVALUEERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPREVTRANSREFERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPREVTRANSREFERRORRESPONSE")
    private static class INVALIDPREVTRANSREFERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INVALIDPREVTRANSREFERRORRESPONSE iNVALIDPREVTRANSREFERRORRESPONSE;

        INVALIDPREVTRANSREFERRORRESPONSECase(INVALIDPREVTRANSREFERRORRESPONSE iNVALIDPREVTRANSREFERRORRESPONSE) {
            this.iNVALIDPREVTRANSREFERRORRESPONSE = iNVALIDPREVTRANSREFERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPREVTRANSREFERRORRESPONSE(this.iNVALIDPREVTRANSREFERRORRESPONSE);
        }

        @JsonCreator
        private INVALIDPREVTRANSREFERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPREVTRANSREFERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                INVALIDPREVTRANSREFERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return iNVALIDPREVTRANSREFERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE")
    private static class CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE;

        CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase(CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE) {
            this.cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE = cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE(this.cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE);
        }

        @JsonCreator
        private CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return cHARGEBACKONPREVIOUSTRANSREFERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for VOIDEDPREVTRANSREFERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VOIDEDPREVTRANSREFERRORRESPONSE")
    private static class VOIDEDPREVTRANSREFERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private VOIDEDPREVTRANSREFERRORRESPONSE vOIDEDPREVTRANSREFERRORRESPONSE;

        VOIDEDPREVTRANSREFERRORRESPONSECase(VOIDEDPREVTRANSREFERRORRESPONSE vOIDEDPREVTRANSREFERRORRESPONSE) {
            this.vOIDEDPREVTRANSREFERRORRESPONSE = vOIDEDPREVTRANSREFERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vOIDEDPREVTRANSREFERRORRESPONSE(this.vOIDEDPREVTRANSREFERRORRESPONSE);
        }

        @JsonCreator
        private VOIDEDPREVTRANSREFERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.vOIDEDPREVTRANSREFERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                VOIDEDPREVTRANSREFERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return vOIDEDPREVTRANSREFERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCEMISMATCHERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCEMISMATCHERRORRESPONSE")
    private static class PAYMENTSOURCEMISMATCHERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYMENTSOURCEMISMATCHERRORRESPONSE pAYMENTSOURCEMISMATCHERRORRESPONSE;

        PAYMENTSOURCEMISMATCHERRORRESPONSECase(PAYMENTSOURCEMISMATCHERRORRESPONSE pAYMENTSOURCEMISMATCHERRORRESPONSE) {
            this.pAYMENTSOURCEMISMATCHERRORRESPONSE = pAYMENTSOURCEMISMATCHERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCEMISMATCHERRORRESPONSE(this.pAYMENTSOURCEMISMATCHERRORRESPONSE);
        }

        @JsonCreator
        private PAYMENTSOURCEMISMATCHERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCEMISMATCHERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCEMISMATCHERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCEMISMATCHERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MERCHANTINITIATEDSECURITYCODEERRORRESPONSE")
    private static class MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MERCHANTINITIATEDSECURITYCODEERRORRESPONSE mERCHANTINITIATEDSECURITYCODEERRORRESPONSE;

        MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase(MERCHANTINITIATEDSECURITYCODEERRORRESPONSE mERCHANTINITIATEDSECURITYCODEERRORRESPONSE) {
            this.mERCHANTINITIATEDSECURITYCODEERRORRESPONSE = mERCHANTINITIATEDSECURITYCODEERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mERCHANTINITIATEDSECURITYCODEERRORRESPONSE(this.mERCHANTINITIATEDSECURITYCODEERRORRESPONSE);
        }

        @JsonCreator
        private MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.mERCHANTINITIATEDSECURITYCODEERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                MERCHANTINITIATEDSECURITYCODEERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return mERCHANTINITIATEDSECURITYCODEERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE")
    private static class MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE;

        MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase(MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE) {
            this.mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE = mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE(this.mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE);
        }

        @JsonCreator
        private MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                MERCHANTINITIATEDAUTHRESULTSERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return mERCHANTINITIATEDAUTHRESULTSERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP")
    private static class MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP;

        MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase(MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP) {
            this.mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP = mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP(this.mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP);
        }

        @JsonCreator
        private MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase(JsonNode jsonNode) throws IOException {
            this.mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP = ApiHelper.deserialize(jsonNode,
                MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP.class);
        }

        @Override
        public String toString() {
            return mERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESP.toString();
        }
    }

    /**
     * This is a implementation class for RETURNURLREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "RETURNURLREQUIREDERRORRESPONSE")
    private static class RETURNURLREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private RETURNURLREQUIREDERRORRESPONSE rETURNURLREQUIREDERRORRESPONSE;

        RETURNURLREQUIREDERRORRESPONSECase(RETURNURLREQUIREDERRORRESPONSE rETURNURLREQUIREDERRORRESPONSE) {
            this.rETURNURLREQUIREDERRORRESPONSE = rETURNURLREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rETURNURLREQUIREDERRORRESPONSE(this.rETURNURLREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private RETURNURLREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.rETURNURLREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                RETURNURLREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return rETURNURLREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for CANCELURLREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CANCELURLREQUIREDERRORRESPONSE")
    private static class CANCELURLREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CANCELURLREQUIREDERRORRESPONSE cANCELURLREQUIREDERRORRESPONSE;

        CANCELURLREQUIREDERRORRESPONSECase(CANCELURLREQUIREDERRORRESPONSE cANCELURLREQUIREDERRORRESPONSE) {
            this.cANCELURLREQUIREDERRORRESPONSE = cANCELURLREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cANCELURLREQUIREDERRORRESPONSE(this.cANCELURLREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private CANCELURLREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.cANCELURLREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                CANCELURLREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return cANCELURLREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for SETUPERRORFORBANKERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SETUPERRORFORBANKERROR")
    private static class SETUPERRORFORBANKERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private SETUPERRORFORBANKERROR sETUPERRORFORBANKERROR;

        SETUPERRORFORBANKERRORCase(SETUPERRORFORBANKERROR sETUPERRORFORBANKERROR) {
            this.sETUPERRORFORBANKERROR = sETUPERRORFORBANKERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sETUPERRORFORBANKERROR(this.sETUPERRORFORBANKERROR);
        }

        @JsonCreator
        private SETUPERRORFORBANKERRORCase(JsonNode jsonNode) throws IOException {
            this.sETUPERRORFORBANKERROR = ApiHelper.deserialize(jsonNode,
                SETUPERRORFORBANKERROR.class);
        }

        @Override
        public String toString() {
            return sETUPERRORFORBANKERROR.toString();
        }
    }

    /**
     * This is a implementation class for BANKNOTSUPPORTEDFORVERIFICATIONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BANKNOTSUPPORTEDFORVERIFICATIONERROR")
    private static class BANKNOTSUPPORTEDFORVERIFICATIONERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private BANKNOTSUPPORTEDFORVERIFICATIONERROR bANKNOTSUPPORTEDFORVERIFICATIONERROR;

        BANKNOTSUPPORTEDFORVERIFICATIONERRORCase(BANKNOTSUPPORTEDFORVERIFICATIONERROR bANKNOTSUPPORTEDFORVERIFICATIONERROR) {
            this.bANKNOTSUPPORTEDFORVERIFICATIONERROR = bANKNOTSUPPORTEDFORVERIFICATIONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bANKNOTSUPPORTEDFORVERIFICATIONERROR(this.bANKNOTSUPPORTEDFORVERIFICATIONERROR);
        }

        @JsonCreator
        private BANKNOTSUPPORTEDFORVERIFICATIONERRORCase(JsonNode jsonNode) throws IOException {
            this.bANKNOTSUPPORTEDFORVERIFICATIONERROR = ApiHelper.deserialize(jsonNode,
                BANKNOTSUPPORTEDFORVERIFICATIONERROR.class);
        }

        @Override
        public String toString() {
            return bANKNOTSUPPORTEDFORVERIFICATIONERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACTIONREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACTIONREQUIREDERROR")
    private static class PAYERACTIONREQUIREDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYERACTIONREQUIREDERROR pAYERACTIONREQUIREDERROR;

        PAYERACTIONREQUIREDERRORCase(PAYERACTIONREQUIREDERROR pAYERACTIONREQUIREDERROR) {
            this.pAYERACTIONREQUIREDERROR = pAYERACTIONREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACTIONREQUIREDERROR(this.pAYERACTIONREQUIREDERROR);
        }

        @JsonCreator
        private PAYERACTIONREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYERACTIONREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                PAYERACTIONREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return pAYERACTIONREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for APPLEPAYAMOUNTMISMATCHERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "APPLEPAYAMOUNTMISMATCHERRORRESPONSE")
    private static class APPLEPAYAMOUNTMISMATCHERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private APPLEPAYAMOUNTMISMATCHERRORRESPONSE aPPLEPAYAMOUNTMISMATCHERRORRESPONSE;

        APPLEPAYAMOUNTMISMATCHERRORRESPONSECase(APPLEPAYAMOUNTMISMATCHERRORRESPONSE aPPLEPAYAMOUNTMISMATCHERRORRESPONSE) {
            this.aPPLEPAYAMOUNTMISMATCHERRORRESPONSE = aPPLEPAYAMOUNTMISMATCHERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aPPLEPAYAMOUNTMISMATCHERRORRESPONSE(this.aPPLEPAYAMOUNTMISMATCHERRORRESPONSE);
        }

        @JsonCreator
        private APPLEPAYAMOUNTMISMATCHERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.aPPLEPAYAMOUNTMISMATCHERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                APPLEPAYAMOUNTMISMATCHERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return aPPLEPAYAMOUNTMISMATCHERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for CURRENCYNOTSUPPORTEDFORBANKERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CURRENCYNOTSUPPORTEDFORBANKERROR")
    private static class CURRENCYNOTSUPPORTEDFORBANKERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CURRENCYNOTSUPPORTEDFORBANKERROR cURRENCYNOTSUPPORTEDFORBANKERROR;

        CURRENCYNOTSUPPORTEDFORBANKERRORCase(CURRENCYNOTSUPPORTEDFORBANKERROR cURRENCYNOTSUPPORTEDFORBANKERROR) {
            this.cURRENCYNOTSUPPORTEDFORBANKERROR = cURRENCYNOTSUPPORTEDFORBANKERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cURRENCYNOTSUPPORTEDFORBANKERROR(this.cURRENCYNOTSUPPORTEDFORBANKERROR);
        }

        @JsonCreator
        private CURRENCYNOTSUPPORTEDFORBANKERRORCase(JsonNode jsonNode) throws IOException {
            this.cURRENCYNOTSUPPORTEDFORBANKERROR = ApiHelper.deserialize(jsonNode,
                CURRENCYNOTSUPPORTEDFORBANKERROR.class);
        }

        @Override
        public String toString() {
            return cURRENCYNOTSUPPORTEDFORBANKERROR.toString();
        }
    }

    /**
     * This is a implementation class for ONLYONEBANKSOURCEALLOWEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ONLYONEBANKSOURCEALLOWEDERROR")
    private static class ONLYONEBANKSOURCEALLOWEDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private ONLYONEBANKSOURCEALLOWEDERROR oNLYONEBANKSOURCEALLOWEDERROR;

        ONLYONEBANKSOURCEALLOWEDERRORCase(ONLYONEBANKSOURCEALLOWEDERROR oNLYONEBANKSOURCEALLOWEDERROR) {
            this.oNLYONEBANKSOURCEALLOWEDERROR = oNLYONEBANKSOURCEALLOWEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oNLYONEBANKSOURCEALLOWEDERROR(this.oNLYONEBANKSOURCEALLOWEDERROR);
        }

        @JsonCreator
        private ONLYONEBANKSOURCEALLOWEDERRORCase(JsonNode jsonNode) throws IOException {
            this.oNLYONEBANKSOURCEALLOWEDERROR = ApiHelper.deserialize(jsonNode,
                ONLYONEBANKSOURCEALLOWEDERROR.class);
        }

        @Override
        public String toString() {
            return oNLYONEBANKSOURCEALLOWEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDIBANERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDIBANERROR")
    private static class INVALIDIBANERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INVALIDIBANERROR iNVALIDIBANERROR;

        INVALIDIBANERRORCase(INVALIDIBANERROR iNVALIDIBANERROR) {
            this.iNVALIDIBANERROR = iNVALIDIBANERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDIBANERROR(this.iNVALIDIBANERROR);
        }

        @JsonCreator
        private INVALIDIBANERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDIBANERROR = ApiHelper.deserialize(jsonNode,
                INVALIDIBANERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDIBANERROR.toString();
        }
    }

    /**
     * This is a implementation class for IBANCOUNTRYNOTSUPPORTEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "IBANCOUNTRYNOTSUPPORTEDERROR")
    private static class IBANCOUNTRYNOTSUPPORTEDERRORCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private IBANCOUNTRYNOTSUPPORTEDERROR iBANCOUNTRYNOTSUPPORTEDERROR;

        IBANCOUNTRYNOTSUPPORTEDERRORCase(IBANCOUNTRYNOTSUPPORTEDERROR iBANCOUNTRYNOTSUPPORTEDERROR) {
            this.iBANCOUNTRYNOTSUPPORTEDERROR = iBANCOUNTRYNOTSUPPORTEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iBANCOUNTRYNOTSUPPORTEDERROR(this.iBANCOUNTRYNOTSUPPORTEDERROR);
        }

        @JsonCreator
        private IBANCOUNTRYNOTSUPPORTEDERRORCase(JsonNode jsonNode) throws IOException {
            this.iBANCOUNTRYNOTSUPPORTEDERROR = ApiHelper.deserialize(jsonNode,
                IBANCOUNTRYNOTSUPPORTEDERROR.class);
        }

        @Override
        public String toString() {
            return iBANCOUNTRYNOTSUPPORTEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for CARDNUMBERREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDNUMBERREQUIREDERRORRESPONSE")
    private static class CARDNUMBERREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CARDNUMBERREQUIREDERRORRESPONSE cARDNUMBERREQUIREDERRORRESPONSE;

        CARDNUMBERREQUIREDERRORRESPONSECase(CARDNUMBERREQUIREDERRORRESPONSE cARDNUMBERREQUIREDERRORRESPONSE) {
            this.cARDNUMBERREQUIREDERRORRESPONSE = cARDNUMBERREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDNUMBERREQUIREDERRORRESPONSE(this.cARDNUMBERREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private CARDNUMBERREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.cARDNUMBERREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                CARDNUMBERREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return cARDNUMBERREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for CARDEXPIRYREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDEXPIRYREQUIREDERRORRESPONSE")
    private static class CARDEXPIRYREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private CARDEXPIRYREQUIREDERRORRESPONSE cARDEXPIRYREQUIREDERRORRESPONSE;

        CARDEXPIRYREQUIREDERRORRESPONSECase(CARDEXPIRYREQUIREDERRORRESPONSE cARDEXPIRYREQUIREDERRORRESPONSE) {
            this.cARDEXPIRYREQUIREDERRORRESPONSE = cARDEXPIRYREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDEXPIRYREQUIREDERRORRESPONSE(this.cARDEXPIRYREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private CARDEXPIRYREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.cARDEXPIRYREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                CARDEXPIRYREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return cARDEXPIRYREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for VAULTINSTRUCTIONREQUIREDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VAULTINSTRUCTIONREQUIREDERRORRESPONSE")
    private static class VAULTINSTRUCTIONREQUIREDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private VAULTINSTRUCTIONREQUIREDERRORRESPONSE vAULTINSTRUCTIONREQUIREDERRORRESPONSE;

        VAULTINSTRUCTIONREQUIREDERRORRESPONSECase(VAULTINSTRUCTIONREQUIREDERRORRESPONSE vAULTINSTRUCTIONREQUIREDERRORRESPONSE) {
            this.vAULTINSTRUCTIONREQUIREDERRORRESPONSE = vAULTINSTRUCTIONREQUIREDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vAULTINSTRUCTIONREQUIREDERRORRESPONSE(this.vAULTINSTRUCTIONREQUIREDERRORRESPONSE);
        }

        @JsonCreator
        private VAULTINSTRUCTIONREQUIREDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.vAULTINSTRUCTIONREQUIREDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                VAULTINSTRUCTIONREQUIREDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return vAULTINSTRUCTIONREQUIREDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE")
    private static class VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE;

        VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase(VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE) {
            this.vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE = vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE(this.vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE);
        }

        @JsonCreator
        private VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return vAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE")
    private static class NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE;

        NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase(NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE) {
            this.nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE = nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE(this.nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE);
        }

        @JsonCreator
        private NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return nOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE")
    private static class PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE;

        PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase(PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE) {
            this.pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE = pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE(this.pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE);
        }

        @JsonCreator
        private PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE")
    private static class PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE;

        PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase(PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE) {
            this.pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE = pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE(this.pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE);
        }

        @JsonCreator
        private PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PNREFNOTFOUNDERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PNREFNOTFOUNDERRORRESPONSE")
    private static class PNREFNOTFOUNDERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PNREFNOTFOUNDERRORRESPONSE pNREFNOTFOUNDERRORRESPONSE;

        PNREFNOTFOUNDERRORRESPONSECase(PNREFNOTFOUNDERRORRESPONSE pNREFNOTFOUNDERRORRESPONSE) {
            this.pNREFNOTFOUNDERRORRESPONSE = pNREFNOTFOUNDERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pNREFNOTFOUNDERRORRESPONSE(this.pNREFNOTFOUNDERRORRESPONSE);
        }

        @JsonCreator
        private PNREFNOTFOUNDERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.pNREFNOTFOUNDERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                PNREFNOTFOUNDERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return pNREFNOTFOUNDERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSECURITYCODELENGTHERRORRESPONSECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSECURITYCODELENGTHERRORRESPONSE")
    private static class INVALIDSECURITYCODELENGTHERRORRESPONSECase extends OrdersCapture422IssuesItems {

        @JsonValue
        private INVALIDSECURITYCODELENGTHERRORRESPONSE iNVALIDSECURITYCODELENGTHERRORRESPONSE;

        INVALIDSECURITYCODELENGTHERRORRESPONSECase(INVALIDSECURITYCODELENGTHERRORRESPONSE iNVALIDSECURITYCODELENGTHERRORRESPONSE) {
            this.iNVALIDSECURITYCODELENGTHERRORRESPONSE = iNVALIDSECURITYCODELENGTHERRORRESPONSE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSECURITYCODELENGTHERRORRESPONSE(this.iNVALIDSECURITYCODELENGTHERRORRESPONSE);
        }

        @JsonCreator
        private INVALIDSECURITYCODELENGTHERRORRESPONSECase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSECURITYCODELENGTHERRORRESPONSE = ApiHelper.deserialize(jsonNode,
                INVALIDSECURITYCODELENGTHERRORRESPONSE.class);
        }

        @Override
        public String toString() {
            return iNVALIDSECURITYCODELENGTHERRORRESPONSE.toString();
        }
    }

    /**
     * This is a implementation class for PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PLATFORMFEEPAYEECANNOTBESAMEASPAYER")
    private static class PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private PLATFORMFEEPAYEECANNOTBESAMEASPAYER pLATFORMFEEPAYEECANNOTBESAMEASPAYER;

        PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase(PLATFORMFEEPAYEECANNOTBESAMEASPAYER pLATFORMFEEPAYEECANNOTBESAMEASPAYER) {
            this.pLATFORMFEEPAYEECANNOTBESAMEASPAYER = pLATFORMFEEPAYEECANNOTBESAMEASPAYER;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pLATFORMFEEPAYEECANNOTBESAMEASPAYER(this.pLATFORMFEEPAYEECANNOTBESAMEASPAYER);
        }

        @JsonCreator
        private PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase(JsonNode jsonNode) throws IOException {
            this.pLATFORMFEEPAYEECANNOTBESAMEASPAYER = ApiHelper.deserialize(jsonNode,
                PLATFORMFEEPAYEECANNOTBESAMEASPAYER.class);
        }

        @Override
        public String toString() {
            return pLATFORMFEEPAYEECANNOTBESAMEASPAYER.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPARAMCIPERRORRESPCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPARAMCIPERRORRESP")
    private static class MISSINGPARAMCIPERRORRESPCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private MISSINGPARAMCIPERRORRESP mISSINGPARAMCIPERRORRESP;

        MISSINGPARAMCIPERRORRESPCase(MISSINGPARAMCIPERRORRESP mISSINGPARAMCIPERRORRESP) {
            this.mISSINGPARAMCIPERRORRESP = mISSINGPARAMCIPERRORRESP;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPARAMCIPERRORRESP(this.mISSINGPARAMCIPERRORRESP);
        }

        @JsonCreator
        private MISSINGPARAMCIPERRORRESPCase(JsonNode jsonNode) throws IOException {
            this.mISSINGPARAMCIPERRORRESP = ApiHelper.deserialize(jsonNode,
                MISSINGPARAMCIPERRORRESP.class);
        }

        @Override
        public String toString() {
            return mISSINGPARAMCIPERRORRESP.toString();
        }
    }

    /**
     * This is a implementation class for IDENTIFIERNOTFOUNDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "IDENTIFIERNOTFOUND")
    private static class IDENTIFIERNOTFOUNDCase extends OrdersCapture422IssuesItems {

        @JsonValue
        private IDENTIFIERNOTFOUND iDENTIFIERNOTFOUND;

        IDENTIFIERNOTFOUNDCase(IDENTIFIERNOTFOUND iDENTIFIERNOTFOUND) {
            this.iDENTIFIERNOTFOUND = iDENTIFIERNOTFOUND;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iDENTIFIERNOTFOUND(this.iDENTIFIERNOTFOUND);
        }

        @JsonCreator
        private IDENTIFIERNOTFOUNDCase(JsonNode jsonNode) throws IOException {
            this.iDENTIFIERNOTFOUND = ApiHelper.deserialize(jsonNode,
                IDENTIFIERNOTFOUND.class);
        }

        @Override
        public String toString() {
            return iDENTIFIERNOTFOUND.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersCapture422IssuesItems.
     */
    protected static class OrdersCapture422IssuesItemsDeserializer
            extends JsonDeserializer<OrdersCapture422IssuesItems> {

        @Override
        public OrdersCapture422IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    AGREEMENTALREADYCANCELLEDRESULTCase.class,
                    BILLINGAGREEMENTNOTFOUNDRESULTCase.class,
                    DECLINEDDUETORELATEDTXNERRORCase.class,
                    MISSINGPREVIOUSREFERENCEERRORRESPONSECase.class,
                    MISSINGCRYPTOGRAMERRORRESPONSECase.class, CARDBRANDNOTSUPPORTEDERRORCase.class,
                    COMPLIANCEVIOLATIONERRORCase.class,
                    DOMESTICTRANSACTIONREQUIREDERRORRESPONSECase.class,
                    DUPLICATEINVOICEIDERRORRESPONSECase.class, INSTRUMENTDECLINEDERRORCase.class,
                    ORDERNOTAPPROVEDERRORCase.class,
                    MAXPAYMENTATTEMPTSEXCEEDEDERRORRESPONSECase.class,
                    PAYEEBLOCKEDTRANSACTIONERRORRESPONSECase.class,
                    PAYEEFXRATEIDEXPIREDERRORRESPONSECase.class,
                    PAYERACCOUNTLOCKEDORCLOSEDERRORRESPONSECase.class,
                    PAYERACCOUNTRESTRICTEDERRORRESPONSECase.class,
                    PAYERCANNOTPAYERRORRESPONSECase.class,
                    PAYPALTRANSACTIONIDEXPIREDERRORCase.class, PNREFEXPIREDERRORCase.class,
                    REFERENCEDCARDEXPIREDERRORCase.class, TOKENIDNOTFOUNDERRORCase.class,
                    TRANSACTIONLIMITEXCEEDEDERRORRESPONSECase.class,
                    TRANSACTIONRECEIVELIMITEXCEEDEDERRORRESPONSECase.class,
                    TRANSACTIONREFUSEDERRORRESPONSECase.class,
                    REDIRECTPAYERFORALTERNATEFUNDINGCase.class, ORDERALREADYCAPTUREDERRORCase.class,
                    TRANSACTIONBLOCKEDBYPAYEEERRORCase.class,
                    AUTHCAPTURENOTENABLEDERRORRESPONSECase.class,
                    NOTENABLEDFORBANKPROCESSINGCase.class, NOTENABLEDFORCARDPROCESSINGCase.class,
                    PAYEENOTENABLEDFORBANKPROCESSINGCase.class,
                    PAYEENOTENABLEDFORCARDPROCESSINGCase.class, INVALIDPICKUPADDRESSERRORCase.class,
                    SHIPPINGADDRESSINVALIDERRORRESPONSECase.class,
                    PAYMENTSOURCENOTSUPPORTEDCase.class, ORDERCOMPLETIONINPROGRESSCase.class,
                    BILLINGAGREEMENTIDMISMATCHERRORCase.class,
                    PREFERREDPAYMENTSOURCEMISMATCHERRORCase.class,
                    INCOMPATIBLEPARAMETERVALUEERRORRESPONSECase.class,
                    INVALIDPREVTRANSREFERRORRESPONSECase.class,
                    CHARGEBACKONPREVIOUSTRANSREFERRORRESPONSECase.class,
                    VOIDEDPREVTRANSREFERRORRESPONSECase.class,
                    PAYMENTSOURCEMISMATCHERRORRESPONSECase.class,
                    MERCHANTINITIATEDSECURITYCODEERRORRESPONSECase.class,
                    MERCHANTINITIATEDAUTHRESULTSERRORRESPONSECase.class,
                    MERCHANTINITIATEDMULTIPURCHASEUNITSERRORRESPCase.class,
                    RETURNURLREQUIREDERRORRESPONSECase.class,
                    CANCELURLREQUIREDERRORRESPONSECase.class, SETUPERRORFORBANKERRORCase.class,
                    BANKNOTSUPPORTEDFORVERIFICATIONERRORCase.class,
                    PAYERACTIONREQUIREDERRORCase.class,
                    APPLEPAYAMOUNTMISMATCHERRORRESPONSECase.class,
                    CURRENCYNOTSUPPORTEDFORBANKERRORCase.class,
                    ONLYONEBANKSOURCEALLOWEDERRORCase.class, INVALIDIBANERRORCase.class,
                    IBANCOUNTRYNOTSUPPORTEDERRORCase.class,
                    CARDNUMBERREQUIREDERRORRESPONSECase.class,
                    CARDEXPIRYREQUIREDERRORRESPONSECase.class,
                    VAULTINSTRUCTIONREQUIREDERRORRESPONSECase.class,
                    VAULTIDPAYMENTSOURCEMISMATCHERRORRESPONSECase.class,
                    NOTELIGIBLEFORPNREFPROCESSINGERRORRESPONSECase.class,
                    PAYPALIDPROCESSINGINELIGIBILITYERRORRESPONSECase.class,
                    PAYPALTRANSACTIONIDNOTFOUNDERRORRESPONSECase.class,
                    PNREFNOTFOUNDERRORRESPONSECase.class,
                    INVALIDSECURITYCODELENGTHERRORRESPONSECase.class,
                    PLATFORMFEEPAYEECANNOTBESAMEASPAYERCase.class,
                    MISSINGPARAMCIPERRORRESPCase.class, IDENTIFIERNOTFOUNDCase.class), false);
        }
    }

}
