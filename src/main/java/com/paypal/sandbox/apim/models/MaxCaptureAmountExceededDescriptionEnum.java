/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * MaxCaptureAmountExceededDescriptionEnum to be used.
 */
public enum MaxCaptureAmountExceededDescriptionEnum {
    ENUM_CAPTURE_AMOUNT_EXCEEDS_ALLOWABLE_LIMIT_PLEASE_CONTACT_CUSTOMER_SERVICE_OR_YOUR_ACCOUNT_MANAGER_TO_REQUEST_THE_CHANGE_TO_YOUR_OVERAGE_LIMIT_THE_DEFAULT_OVERAGE_LIMIT_IS_115_WHICH_ALLOWS_THE_SUM_OF_ALL_CAPTURES_TO_BE_UP_TO_115_OF_THE_ORDER_AMOUNT_THE_ABILITY_TO_OVER_CAPTURE_IS_SUBJECTED_TO_REGULATORY_APPROVALS;


    private static TreeMap<String, MaxCaptureAmountExceededDescriptionEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        ENUM_CAPTURE_AMOUNT_EXCEEDS_ALLOWABLE_LIMIT_PLEASE_CONTACT_CUSTOMER_SERVICE_OR_YOUR_ACCOUNT_MANAGER_TO_REQUEST_THE_CHANGE_TO_YOUR_OVERAGE_LIMIT_THE_DEFAULT_OVERAGE_LIMIT_IS_115_WHICH_ALLOWS_THE_SUM_OF_ALL_CAPTURES_TO_BE_UP_TO_115_OF_THE_ORDER_AMOUNT_THE_ABILITY_TO_OVER_CAPTURE_IS_SUBJECTED_TO_REGULATORY_APPROVALS.value = "Capture amount exceeds allowable limit. Please contact customer service or your account manager to request the change to your overage limit. The default overage limit is 115%, which allows the sum of all captures to be up to 115% of the order amount. The ability to over capture is subjected to regulatory approvals.";

        valueMap.put("Capture amount exceeds allowable limit. Please contact customer service or your account manager to request the change to your overage limit. The default overage limit is 115%, which allows the sum of all captures to be up to 115% of the order amount. The ability to over capture is subjected to regulatory approvals.", ENUM_CAPTURE_AMOUNT_EXCEEDS_ALLOWABLE_LIMIT_PLEASE_CONTACT_CUSTOMER_SERVICE_OR_YOUR_ACCOUNT_MANAGER_TO_REQUEST_THE_CHANGE_TO_YOUR_OVERAGE_LIMIT_THE_DEFAULT_OVERAGE_LIMIT_IS_115_WHICH_ALLOWS_THE_SUM_OF_ALL_CAPTURES_TO_BE_UP_TO_115_OF_THE_ORDER_AMOUNT_THE_ABILITY_TO_OVER_CAPTURE_IS_SUBJECTED_TO_REGULATORY_APPROVALS);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static MaxCaptureAmountExceededDescriptionEnum constructFromString(String toConvert) throws IOException {
        MaxCaptureAmountExceededDescriptionEnum enumValue = fromString(toConvert);
        if (enumValue == null)
        {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static MaxCaptureAmountExceededDescriptionEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of MaxCaptureAmountExceededDescriptionEnum values to list of string values.
     * @param toConvert The list of MaxCaptureAmountExceededDescriptionEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<MaxCaptureAmountExceededDescriptionEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (MaxCaptureAmountExceededDescriptionEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 