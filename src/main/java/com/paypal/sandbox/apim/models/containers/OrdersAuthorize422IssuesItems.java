/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.ACTIONDOESNOTMATCHINTENT;
import com.paypal.sandbox.apim.models.AGREEMENTALREADYCANCELLEDERROR;
import com.paypal.sandbox.apim.models.AMOUNTCANNOTBESPECIFIED;
import com.paypal.sandbox.apim.models.APPLEPAYAMOUNTMISMATCHRESULT;
import com.paypal.sandbox.apim.models.AUTHCAPTURENOTENABLEDERROR;
import com.paypal.sandbox.apim.models.AUTHORIZATIONAMOUNTEXCEEDED;
import com.paypal.sandbox.apim.models.AUTHORIZATIONCURRENCYMISMATCH;
import com.paypal.sandbox.apim.models.BILLINGAGREEMENTIDMISMATCH;
import com.paypal.sandbox.apim.models.BILLINGAGREEMENTNOTFOUNDERROR;
import com.paypal.sandbox.apim.models.CANCELURLREQUIREDERROR;
import com.paypal.sandbox.apim.models.CARDBRANDNOTSUPPORTED;
import com.paypal.sandbox.apim.models.CARDEXPIRYREQUIREDERROR;
import com.paypal.sandbox.apim.models.CARDNUMBERREQUIREDERROR;
import com.paypal.sandbox.apim.models.CHARGEBACKONPREVIOUSTRANSACTIONERROR;
import com.paypal.sandbox.apim.models.DECLINEDDUETORELATEDTXN;
import com.paypal.sandbox.apim.models.DOMESTICTRANSACTIONREQUIREDERROR;
import com.paypal.sandbox.apim.models.DUPLICATEINVOICEIDERROR;
import com.paypal.sandbox.apim.models.INCOMPATIBLEPARAMETERVALUERESULT;
import com.paypal.sandbox.apim.models.INVALIDPICKUPADDRESS;
import com.paypal.sandbox.apim.models.INVALIDPREVIOUSTRANSACTIONREFERENCEERROR;
import com.paypal.sandbox.apim.models.INVALIDSECURITYCODELENGTHRESULT;
import com.paypal.sandbox.apim.models.MAXAUTHORIZATIONCOUNTEXCEEDED;
import com.paypal.sandbox.apim.models.MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR;
import com.paypal.sandbox.apim.models.MERCHANTAUTHRESULTSERROR;
import com.paypal.sandbox.apim.models.MERCHANTINITIATEDWITHSECURITYCODEERROR;
import com.paypal.sandbox.apim.models.MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT;
import com.paypal.sandbox.apim.models.MISSINGCRYPTOGRAMRESULT;
import com.paypal.sandbox.apim.models.MISSINGPAYMENTPARAMETER;
import com.paypal.sandbox.apim.models.MISSINGPREVIOUSREFERENCERESULT;
import com.paypal.sandbox.apim.models.MULTIPURCHASEUNITSERROR;
import com.paypal.sandbox.apim.models.NOTELIGIBLEFORPNREFPROCESSINGRESULT;
import com.paypal.sandbox.apim.models.ORDERALREADYAUTHORIZEDERROR;
import com.paypal.sandbox.apim.models.ORDERCANNOTBESAVED;
import com.paypal.sandbox.apim.models.ORDERCOMPLETEDORVOIDED;
import com.paypal.sandbox.apim.models.ORDEREXPIRED;
import com.paypal.sandbox.apim.models.ORDERNOTAPPROVED;
import com.paypal.sandbox.apim.models.PAYEEBLOCKEDTRANSACTIONERROR;
import com.paypal.sandbox.apim.models.PAYEEFXRATEIDEXPIREDERROR;
import com.paypal.sandbox.apim.models.PAYERACCOUNTLOCKEDORCLOSEDERROR;
import com.paypal.sandbox.apim.models.PAYERACCOUNTRESTRICTEDERROR;
import com.paypal.sandbox.apim.models.PAYERACTIONREQUIRED;
import com.paypal.sandbox.apim.models.PAYERCANNOTPAYERROR;
import com.paypal.sandbox.apim.models.PAYMENTSOURCEMISMATCHERROR;
import com.paypal.sandbox.apim.models.PAYMENTTYPENOTSUPPORTEDFORINTENT;
import com.paypal.sandbox.apim.models.PAYPALIDERROR;
import com.paypal.sandbox.apim.models.PAYPALTRANSACTIONIDEXPIRED;
import com.paypal.sandbox.apim.models.PAYPALTRANSACTIONIDNOTFOUNDRESULT;
import com.paypal.sandbox.apim.models.PNREFEXPIRED;
import com.paypal.sandbox.apim.models.PNREFNOTFOUNDRESULT;
import com.paypal.sandbox.apim.models.PREFERREDPAYMENTSOURCEMISMATCH;
import com.paypal.sandbox.apim.models.PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR;
import com.paypal.sandbox.apim.models.REFERENCEDCARDEXPIRED;
import com.paypal.sandbox.apim.models.RETURNURLREQUIREDERROR;
import com.paypal.sandbox.apim.models.SAVEORDERNOTSUPPORTED;
import com.paypal.sandbox.apim.models.SHIPPINGADDRESSINVALIDRESULT;
import com.paypal.sandbox.apim.models.TOKENEXPIREDRESULT;
import com.paypal.sandbox.apim.models.TOKENIDNOTFOUND;
import com.paypal.sandbox.apim.models.TRANSACTIONLIMITEXCEEDEDERROR;
import com.paypal.sandbox.apim.models.TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR;
import com.paypal.sandbox.apim.models.TRANSACTIONREFUSEDERROR;
import com.paypal.sandbox.apim.models.UNSUPPORTEDINTENTFORPAYMENTSOURCE;
import com.paypal.sandbox.apim.models.VAULTINSTRUCTIONREQUIREDRESULT;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersAuthorize422IssuesItems.OrdersAuthorize422IssuesItemsDeserializer.class)
public abstract class OrdersAuthorize422IssuesItems {
    
    /**
     * This is ACTION_DOES_NOT_MATCH_INTENT case.
     * @param aCTIONDOESNOTMATCHINTENT ACTIONDOESNOTMATCHINTENT value for aCTIONDOESNOTMATCHINTENT.
     * @return The ACTIONDOESNOTMATCHINTENTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromACTIONDOESNOTMATCHINTENT(
            ACTIONDOESNOTMATCHINTENT aCTIONDOESNOTMATCHINTENT) {
        return aCTIONDOESNOTMATCHINTENT == null ? null : new ACTIONDOESNOTMATCHINTENTCase(aCTIONDOESNOTMATCHINTENT);
    }

    /**
     * This is AGREEMENT_ALREADY_CANCELLED_ERROR case.
     * @param aGREEMENTALREADYCANCELLEDERROR AGREEMENTALREADYCANCELLEDERROR value for aGREEMENTALREADYCANCELLEDERROR.
     * @return The AGREEMENTALREADYCANCELLEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAGREEMENTALREADYCANCELLEDERROR(
            AGREEMENTALREADYCANCELLEDERROR aGREEMENTALREADYCANCELLEDERROR) {
        return aGREEMENTALREADYCANCELLEDERROR == null ? null : new AGREEMENTALREADYCANCELLEDERRORCase(aGREEMENTALREADYCANCELLEDERROR);
    }

    /**
     * This is BILLING_AGREEMENT_NOT_FOUND_ERROR case.
     * @param bILLINGAGREEMENTNOTFOUNDERROR BILLINGAGREEMENTNOTFOUNDERROR value for bILLINGAGREEMENTNOTFOUNDERROR.
     * @return The BILLINGAGREEMENTNOTFOUNDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromBILLINGAGREEMENTNOTFOUNDERROR(
            BILLINGAGREEMENTNOTFOUNDERROR bILLINGAGREEMENTNOTFOUNDERROR) {
        return bILLINGAGREEMENTNOTFOUNDERROR == null ? null : new BILLINGAGREEMENTNOTFOUNDERRORCase(bILLINGAGREEMENTNOTFOUNDERROR);
    }

    /**
     * This is MISSING_PREVIOUS_REFERENCE_RESULT case.
     * @param mISSINGPREVIOUSREFERENCERESULT MISSINGPREVIOUSREFERENCERESULT value for mISSINGPREVIOUSREFERENCERESULT.
     * @return The MISSINGPREVIOUSREFERENCERESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMISSINGPREVIOUSREFERENCERESULT(
            MISSINGPREVIOUSREFERENCERESULT mISSINGPREVIOUSREFERENCERESULT) {
        return mISSINGPREVIOUSREFERENCERESULT == null ? null : new MISSINGPREVIOUSREFERENCERESULTCase(mISSINGPREVIOUSREFERENCERESULT);
    }

    /**
     * This is MISSING_CRYPTOGRAM_RESULT case.
     * @param mISSINGCRYPTOGRAMRESULT MISSINGCRYPTOGRAMRESULT value for mISSINGCRYPTOGRAMRESULT.
     * @return The MISSINGCRYPTOGRAMRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMISSINGCRYPTOGRAMRESULT(
            MISSINGCRYPTOGRAMRESULT mISSINGCRYPTOGRAMRESULT) {
        return mISSINGCRYPTOGRAMRESULT == null ? null : new MISSINGCRYPTOGRAMRESULTCase(mISSINGCRYPTOGRAMRESULT);
    }

    /**
     * This is CARD_BRAND_NOT_SUPPORTED case.
     * @param cARDBRANDNOTSUPPORTED CARDBRANDNOTSUPPORTED value for cARDBRANDNOTSUPPORTED.
     * @return The CARDBRANDNOTSUPPORTEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromCARDBRANDNOTSUPPORTED(
            CARDBRANDNOTSUPPORTED cARDBRANDNOTSUPPORTED) {
        return cARDBRANDNOTSUPPORTED == null ? null : new CARDBRANDNOTSUPPORTEDCase(cARDBRANDNOTSUPPORTED);
    }

    /**
     * This is DECLINED_DUE_TO_RELATED_TXN case.
     * @param dECLINEDDUETORELATEDTXN DECLINEDDUETORELATEDTXN value for dECLINEDDUETORELATEDTXN.
     * @return The DECLINEDDUETORELATEDTXNCase object.
     */
    public static OrdersAuthorize422IssuesItems fromDECLINEDDUETORELATEDTXN(
            DECLINEDDUETORELATEDTXN dECLINEDDUETORELATEDTXN) {
        return dECLINEDDUETORELATEDTXN == null ? null : new DECLINEDDUETORELATEDTXNCase(dECLINEDDUETORELATEDTXN);
    }

    /**
     * This is DOMESTIC_TRANSACTION_REQUIRED_ERROR case.
     * @param dOMESTICTRANSACTIONREQUIREDERROR DOMESTICTRANSACTIONREQUIREDERROR value for dOMESTICTRANSACTIONREQUIREDERROR.
     * @return The DOMESTICTRANSACTIONREQUIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromDOMESTICTRANSACTIONREQUIREDERROR(
            DOMESTICTRANSACTIONREQUIREDERROR dOMESTICTRANSACTIONREQUIREDERROR) {
        return dOMESTICTRANSACTIONREQUIREDERROR == null ? null : new DOMESTICTRANSACTIONREQUIREDERRORCase(dOMESTICTRANSACTIONREQUIREDERROR);
    }

    /**
     * This is DUPLICATE_INVOICE_ID_ERROR case.
     * @param dUPLICATEINVOICEIDERROR DUPLICATEINVOICEIDERROR value for dUPLICATEINVOICEIDERROR.
     * @return The DUPLICATEINVOICEIDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromDUPLICATEINVOICEIDERROR(
            DUPLICATEINVOICEIDERROR dUPLICATEINVOICEIDERROR) {
        return dUPLICATEINVOICEIDERROR == null ? null : new DUPLICATEINVOICEIDERRORCase(dUPLICATEINVOICEIDERROR);
    }

    /**
     * This is ORDER_NOT_APPROVED case.
     * @param oRDERNOTAPPROVED ORDERNOTAPPROVED value for oRDERNOTAPPROVED.
     * @return The ORDERNOTAPPROVEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromORDERNOTAPPROVED(
            ORDERNOTAPPROVED oRDERNOTAPPROVED) {
        return oRDERNOTAPPROVED == null ? null : new ORDERNOTAPPROVEDCase(oRDERNOTAPPROVED);
    }

    /**
     * This is MAX_NUMBER_OF_PAYMENT_ATTEMPTS_EXCEEDED_ERROR case.
     * @param mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR value for mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR.
     * @return The MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR(
            MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR) {
        return mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR == null ? null : new MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase(mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR);
    }

    /**
     * This is PAYEE_BLOCKED_TRANSACTION_ERROR case.
     * @param pAYEEBLOCKEDTRANSACTIONERROR PAYEEBLOCKEDTRANSACTIONERROR value for pAYEEBLOCKEDTRANSACTIONERROR.
     * @return The PAYEEBLOCKEDTRANSACTIONERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYEEBLOCKEDTRANSACTIONERROR(
            PAYEEBLOCKEDTRANSACTIONERROR pAYEEBLOCKEDTRANSACTIONERROR) {
        return pAYEEBLOCKEDTRANSACTIONERROR == null ? null : new PAYEEBLOCKEDTRANSACTIONERRORCase(pAYEEBLOCKEDTRANSACTIONERROR);
    }

    /**
     * This is PAYEE_FX_RATE_ID_EXPIRED_ERROR case.
     * @param pAYEEFXRATEIDEXPIREDERROR PAYEEFXRATEIDEXPIREDERROR value for pAYEEFXRATEIDEXPIREDERROR.
     * @return The PAYEEFXRATEIDEXPIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYEEFXRATEIDEXPIREDERROR(
            PAYEEFXRATEIDEXPIREDERROR pAYEEFXRATEIDEXPIREDERROR) {
        return pAYEEFXRATEIDEXPIREDERROR == null ? null : new PAYEEFXRATEIDEXPIREDERRORCase(pAYEEFXRATEIDEXPIREDERROR);
    }

    /**
     * This is UNSUPPORTED_INTENT_FOR_PAYMENT_SOURCE case.
     * @param uNSUPPORTEDINTENTFORPAYMENTSOURCE UNSUPPORTEDINTENTFORPAYMENTSOURCE value for uNSUPPORTEDINTENTFORPAYMENTSOURCE.
     * @return The UNSUPPORTEDINTENTFORPAYMENTSOURCECase object.
     */
    public static OrdersAuthorize422IssuesItems fromUNSUPPORTEDINTENTFORPAYMENTSOURCE(
            UNSUPPORTEDINTENTFORPAYMENTSOURCE uNSUPPORTEDINTENTFORPAYMENTSOURCE) {
        return uNSUPPORTEDINTENTFORPAYMENTSOURCE == null ? null : new UNSUPPORTEDINTENTFORPAYMENTSOURCECase(uNSUPPORTEDINTENTFORPAYMENTSOURCE);
    }

    /**
     * This is PAYER_ACCOUNT_LOCKED_OR_CLOSED_ERROR case.
     * @param pAYERACCOUNTLOCKEDORCLOSEDERROR PAYERACCOUNTLOCKEDORCLOSEDERROR value for pAYERACCOUNTLOCKEDORCLOSEDERROR.
     * @return The PAYERACCOUNTLOCKEDORCLOSEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYERACCOUNTLOCKEDORCLOSEDERROR(
            PAYERACCOUNTLOCKEDORCLOSEDERROR pAYERACCOUNTLOCKEDORCLOSEDERROR) {
        return pAYERACCOUNTLOCKEDORCLOSEDERROR == null ? null : new PAYERACCOUNTLOCKEDORCLOSEDERRORCase(pAYERACCOUNTLOCKEDORCLOSEDERROR);
    }

    /**
     * This is PAYER_ACCOUNT_RESTRICTED_ERROR case.
     * @param pAYERACCOUNTRESTRICTEDERROR PAYERACCOUNTRESTRICTEDERROR value for pAYERACCOUNTRESTRICTEDERROR.
     * @return The PAYERACCOUNTRESTRICTEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYERACCOUNTRESTRICTEDERROR(
            PAYERACCOUNTRESTRICTEDERROR pAYERACCOUNTRESTRICTEDERROR) {
        return pAYERACCOUNTRESTRICTEDERROR == null ? null : new PAYERACCOUNTRESTRICTEDERRORCase(pAYERACCOUNTRESTRICTEDERROR);
    }

    /**
     * This is PAYER_CANNOT_PAY_ERROR case.
     * @param pAYERCANNOTPAYERROR PAYERCANNOTPAYERROR value for pAYERCANNOTPAYERROR.
     * @return The PAYERCANNOTPAYERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYERCANNOTPAYERROR(
            PAYERCANNOTPAYERROR pAYERCANNOTPAYERROR) {
        return pAYERCANNOTPAYERROR == null ? null : new PAYERCANNOTPAYERRORCase(pAYERCANNOTPAYERROR);
    }

    /**
     * This is PAYPAL_TRANSACTION_ID_EXPIRED case.
     * @param pAYPALTRANSACTIONIDEXPIRED PAYPALTRANSACTIONIDEXPIRED value for pAYPALTRANSACTIONIDEXPIRED.
     * @return The PAYPALTRANSACTIONIDEXPIREDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYPALTRANSACTIONIDEXPIRED(
            PAYPALTRANSACTIONIDEXPIRED pAYPALTRANSACTIONIDEXPIRED) {
        return pAYPALTRANSACTIONIDEXPIRED == null ? null : new PAYPALTRANSACTIONIDEXPIREDCase(pAYPALTRANSACTIONIDEXPIRED);
    }

    /**
     * This is PNREF_EXPIRED case.
     * @param pNREFEXPIRED PNREFEXPIRED value for pNREFEXPIRED.
     * @return The PNREFEXPIREDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPNREFEXPIRED(PNREFEXPIRED pNREFEXPIRED) {
        return pNREFEXPIRED == null ? null : new PNREFEXPIREDCase(pNREFEXPIRED);
    }

    /**
     * This is REFERENCED_CARD_EXPIRED case.
     * @param rEFERENCEDCARDEXPIRED REFERENCEDCARDEXPIRED value for rEFERENCEDCARDEXPIRED.
     * @return The REFERENCEDCARDEXPIREDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromREFERENCEDCARDEXPIRED(
            REFERENCEDCARDEXPIRED rEFERENCEDCARDEXPIRED) {
        return rEFERENCEDCARDEXPIRED == null ? null : new REFERENCEDCARDEXPIREDCase(rEFERENCEDCARDEXPIRED);
    }

    /**
     * This is TOKEN_EXPIRED_RESULT case.
     * @param tOKENEXPIREDRESULT TOKENEXPIREDRESULT value for tOKENEXPIREDRESULT.
     * @return The TOKENEXPIREDRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromTOKENEXPIREDRESULT(
            TOKENEXPIREDRESULT tOKENEXPIREDRESULT) {
        return tOKENEXPIREDRESULT == null ? null : new TOKENEXPIREDRESULTCase(tOKENEXPIREDRESULT);
    }

    /**
     * This is TOKEN_ID_NOT_FOUND case.
     * @param tOKENIDNOTFOUND TOKENIDNOTFOUND value for tOKENIDNOTFOUND.
     * @return The TOKENIDNOTFOUNDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromTOKENIDNOTFOUND(
            TOKENIDNOTFOUND tOKENIDNOTFOUND) {
        return tOKENIDNOTFOUND == null ? null : new TOKENIDNOTFOUNDCase(tOKENIDNOTFOUND);
    }

    /**
     * This is TRANSACTION_LIMIT_EXCEEDED_ERROR case.
     * @param tRANSACTIONLIMITEXCEEDEDERROR TRANSACTIONLIMITEXCEEDEDERROR value for tRANSACTIONLIMITEXCEEDEDERROR.
     * @return The TRANSACTIONLIMITEXCEEDEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromTRANSACTIONLIMITEXCEEDEDERROR(
            TRANSACTIONLIMITEXCEEDEDERROR tRANSACTIONLIMITEXCEEDEDERROR) {
        return tRANSACTIONLIMITEXCEEDEDERROR == null ? null : new TRANSACTIONLIMITEXCEEDEDERRORCase(tRANSACTIONLIMITEXCEEDEDERROR);
    }

    /**
     * This is TRANSACTION_RECEIVING_LIMIT_EXCEEDED_ERROR case.
     * @param tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR value for tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR.
     * @return The TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromTRANSACTIONRECEIVINGLIMITEXCEEDEDERROR(
            TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR) {
        return tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR == null ? null : new TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase(tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR);
    }

    /**
     * This is TRANSACTION_REFUSED_ERROR case.
     * @param tRANSACTIONREFUSEDERROR TRANSACTIONREFUSEDERROR value for tRANSACTIONREFUSEDERROR.
     * @return The TRANSACTIONREFUSEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromTRANSACTIONREFUSEDERROR(
            TRANSACTIONREFUSEDERROR tRANSACTIONREFUSEDERROR) {
        return tRANSACTIONREFUSEDERROR == null ? null : new TRANSACTIONREFUSEDERRORCase(tRANSACTIONREFUSEDERROR);
    }

    /**
     * This is ORDER_ALREADY_AUTHORIZED_ERROR case.
     * @param oRDERALREADYAUTHORIZEDERROR ORDERALREADYAUTHORIZEDERROR value for oRDERALREADYAUTHORIZEDERROR.
     * @return The ORDERALREADYAUTHORIZEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromORDERALREADYAUTHORIZEDERROR(
            ORDERALREADYAUTHORIZEDERROR oRDERALREADYAUTHORIZEDERROR) {
        return oRDERALREADYAUTHORIZEDERROR == null ? null : new ORDERALREADYAUTHORIZEDERRORCase(oRDERALREADYAUTHORIZEDERROR);
    }

    /**
     * This is AUTH_CAPTURE_NOT_ENABLED_ERROR case.
     * @param aUTHCAPTURENOTENABLEDERROR AUTHCAPTURENOTENABLEDERROR value for aUTHCAPTURENOTENABLEDERROR.
     * @return The AUTHCAPTURENOTENABLEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAUTHCAPTURENOTENABLEDERROR(
            AUTHCAPTURENOTENABLEDERROR aUTHCAPTURENOTENABLEDERROR) {
        return aUTHCAPTURENOTENABLEDERROR == null ? null : new AUTHCAPTURENOTENABLEDERRORCase(aUTHCAPTURENOTENABLEDERROR);
    }

    /**
     * This is AMOUNT_CANNOT_BE_SPECIFIED case.
     * @param aMOUNTCANNOTBESPECIFIED AMOUNTCANNOTBESPECIFIED value for aMOUNTCANNOTBESPECIFIED.
     * @return The AMOUNTCANNOTBESPECIFIEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAMOUNTCANNOTBESPECIFIED(
            AMOUNTCANNOTBESPECIFIED aMOUNTCANNOTBESPECIFIED) {
        return aMOUNTCANNOTBESPECIFIED == null ? null : new AMOUNTCANNOTBESPECIFIEDCase(aMOUNTCANNOTBESPECIFIED);
    }

    /**
     * This is AUTHORIZATION_AMOUNT_EXCEEDED case.
     * @param aUTHORIZATIONAMOUNTEXCEEDED AUTHORIZATIONAMOUNTEXCEEDED value for aUTHORIZATIONAMOUNTEXCEEDED.
     * @return The AUTHORIZATIONAMOUNTEXCEEDEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAUTHORIZATIONAMOUNTEXCEEDED(
            AUTHORIZATIONAMOUNTEXCEEDED aUTHORIZATIONAMOUNTEXCEEDED) {
        return aUTHORIZATIONAMOUNTEXCEEDED == null ? null : new AUTHORIZATIONAMOUNTEXCEEDEDCase(aUTHORIZATIONAMOUNTEXCEEDED);
    }

    /**
     * This is AUTHORIZATION_CURRENCY_MISMATCH case.
     * @param aUTHORIZATIONCURRENCYMISMATCH AUTHORIZATIONCURRENCYMISMATCH value for aUTHORIZATIONCURRENCYMISMATCH.
     * @return The AUTHORIZATIONCURRENCYMISMATCHCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAUTHORIZATIONCURRENCYMISMATCH(
            AUTHORIZATIONCURRENCYMISMATCH aUTHORIZATIONCURRENCYMISMATCH) {
        return aUTHORIZATIONCURRENCYMISMATCH == null ? null : new AUTHORIZATIONCURRENCYMISMATCHCase(aUTHORIZATIONCURRENCYMISMATCH);
    }

    /**
     * This is MAX_AUTHORIZATION_COUNT_EXCEEDED case.
     * @param mAXAUTHORIZATIONCOUNTEXCEEDED MAXAUTHORIZATIONCOUNTEXCEEDED value for mAXAUTHORIZATIONCOUNTEXCEEDED.
     * @return The MAXAUTHORIZATIONCOUNTEXCEEDEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMAXAUTHORIZATIONCOUNTEXCEEDED(
            MAXAUTHORIZATIONCOUNTEXCEEDED mAXAUTHORIZATIONCOUNTEXCEEDED) {
        return mAXAUTHORIZATIONCOUNTEXCEEDED == null ? null : new MAXAUTHORIZATIONCOUNTEXCEEDEDCase(mAXAUTHORIZATIONCOUNTEXCEEDED);
    }

    /**
     * This is ORDER_COMPLETED_OR_VOIDED case.
     * @param oRDERCOMPLETEDORVOIDED ORDERCOMPLETEDORVOIDED value for oRDERCOMPLETEDORVOIDED.
     * @return The ORDERCOMPLETEDORVOIDEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromORDERCOMPLETEDORVOIDED(
            ORDERCOMPLETEDORVOIDED oRDERCOMPLETEDORVOIDED) {
        return oRDERCOMPLETEDORVOIDED == null ? null : new ORDERCOMPLETEDORVOIDEDCase(oRDERCOMPLETEDORVOIDED);
    }

    /**
     * This is ORDER_EXPIRED case.
     * @param oRDEREXPIRED ORDEREXPIRED value for oRDEREXPIRED.
     * @return The ORDEREXPIREDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromORDEREXPIRED(ORDEREXPIRED oRDEREXPIRED) {
        return oRDEREXPIRED == null ? null : new ORDEREXPIREDCase(oRDEREXPIRED);
    }

    /**
     * This is INVALID_PICKUP_ADDRESS case.
     * @param iNVALIDPICKUPADDRESS INVALIDPICKUPADDRESS value for iNVALIDPICKUPADDRESS.
     * @return The INVALIDPICKUPADDRESSCase object.
     */
    public static OrdersAuthorize422IssuesItems fromINVALIDPICKUPADDRESS(
            INVALIDPICKUPADDRESS iNVALIDPICKUPADDRESS) {
        return iNVALIDPICKUPADDRESS == null ? null : new INVALIDPICKUPADDRESSCase(iNVALIDPICKUPADDRESS);
    }

    /**
     * This is SHIPPING_ADDRESS_INVALID_RESULT case.
     * @param sHIPPINGADDRESSINVALIDRESULT SHIPPINGADDRESSINVALIDRESULT value for sHIPPINGADDRESSINVALIDRESULT.
     * @return The SHIPPINGADDRESSINVALIDRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromSHIPPINGADDRESSINVALIDRESULT(
            SHIPPINGADDRESSINVALIDRESULT sHIPPINGADDRESSINVALIDRESULT) {
        return sHIPPINGADDRESSINVALIDRESULT == null ? null : new SHIPPINGADDRESSINVALIDRESULTCase(sHIPPINGADDRESSINVALIDRESULT);
    }

    /**
     * This is PAYMENT_TYPE_NOT_SUPPORTED_FOR_INTENT case.
     * @param pAYMENTTYPENOTSUPPORTEDFORINTENT PAYMENTTYPENOTSUPPORTEDFORINTENT value for pAYMENTTYPENOTSUPPORTEDFORINTENT.
     * @return The PAYMENTTYPENOTSUPPORTEDFORINTENTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYMENTTYPENOTSUPPORTEDFORINTENT(
            PAYMENTTYPENOTSUPPORTEDFORINTENT pAYMENTTYPENOTSUPPORTEDFORINTENT) {
        return pAYMENTTYPENOTSUPPORTEDFORINTENT == null ? null : new PAYMENTTYPENOTSUPPORTEDFORINTENTCase(pAYMENTTYPENOTSUPPORTEDFORINTENT);
    }

    /**
     * This is BILLING_AGREEMENT_ID_MISMATCH case.
     * @param bILLINGAGREEMENTIDMISMATCH BILLINGAGREEMENTIDMISMATCH value for bILLINGAGREEMENTIDMISMATCH.
     * @return The BILLINGAGREEMENTIDMISMATCHCase object.
     */
    public static OrdersAuthorize422IssuesItems fromBILLINGAGREEMENTIDMISMATCH(
            BILLINGAGREEMENTIDMISMATCH bILLINGAGREEMENTIDMISMATCH) {
        return bILLINGAGREEMENTIDMISMATCH == null ? null : new BILLINGAGREEMENTIDMISMATCHCase(bILLINGAGREEMENTIDMISMATCH);
    }

    /**
     * This is PREFERRED_PAYMENT_SOURCE_MISMATCH case.
     * @param pREFERREDPAYMENTSOURCEMISMATCH PREFERREDPAYMENTSOURCEMISMATCH value for pREFERREDPAYMENTSOURCEMISMATCH.
     * @return The PREFERREDPAYMENTSOURCEMISMATCHCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPREFERREDPAYMENTSOURCEMISMATCH(
            PREFERREDPAYMENTSOURCEMISMATCH pREFERREDPAYMENTSOURCEMISMATCH) {
        return pREFERREDPAYMENTSOURCEMISMATCH == null ? null : new PREFERREDPAYMENTSOURCEMISMATCHCase(pREFERREDPAYMENTSOURCEMISMATCH);
    }

    /**
     * This is INCOMPATIBLE_PARAMETER_VALUE_RESULT case.
     * @param iNCOMPATIBLEPARAMETERVALUERESULT INCOMPATIBLEPARAMETERVALUERESULT value for iNCOMPATIBLEPARAMETERVALUERESULT.
     * @return The INCOMPATIBLEPARAMETERVALUERESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromINCOMPATIBLEPARAMETERVALUERESULT(
            INCOMPATIBLEPARAMETERVALUERESULT iNCOMPATIBLEPARAMETERVALUERESULT) {
        return iNCOMPATIBLEPARAMETERVALUERESULT == null ? null : new INCOMPATIBLEPARAMETERVALUERESULTCase(iNCOMPATIBLEPARAMETERVALUERESULT);
    }

    /**
     * This is INVALID_PREVIOUS_TRANSACTION_REFERENCE_ERROR case.
     * @param iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR INVALIDPREVIOUSTRANSACTIONREFERENCEERROR value for iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR.
     * @return The INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromINVALIDPREVIOUSTRANSACTIONREFERENCEERROR(
            INVALIDPREVIOUSTRANSACTIONREFERENCEERROR iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR) {
        return iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR == null ? null : new INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase(iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR);
    }

    /**
     * This is CHARGEBACK_ON_PREVIOUS_TRANSACTION_ERROR case.
     * @param cHARGEBACKONPREVIOUSTRANSACTIONERROR CHARGEBACKONPREVIOUSTRANSACTIONERROR value for cHARGEBACKONPREVIOUSTRANSACTIONERROR.
     * @return The CHARGEBACKONPREVIOUSTRANSACTIONERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromCHARGEBACKONPREVIOUSTRANSACTIONERROR(
            CHARGEBACKONPREVIOUSTRANSACTIONERROR cHARGEBACKONPREVIOUSTRANSACTIONERROR) {
        return cHARGEBACKONPREVIOUSTRANSACTIONERROR == null ? null : new CHARGEBACKONPREVIOUSTRANSACTIONERRORCase(cHARGEBACKONPREVIOUSTRANSACTIONERROR);
    }

    /**
     * This is PREVIOUS_TRANSACTION_REFERENCE_VOIDED_ERROR case.
     * @param pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR value for pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR.
     * @return The PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPREVIOUSTRANSACTIONREFERENCEVOIDEDERROR(
            PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR) {
        return pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR == null ? null : new PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase(pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR);
    }

    /**
     * This is PAYMENT_SOURCE_MISMATCH_ERROR case.
     * @param pAYMENTSOURCEMISMATCHERROR PAYMENTSOURCEMISMATCHERROR value for pAYMENTSOURCEMISMATCHERROR.
     * @return The PAYMENTSOURCEMISMATCHERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYMENTSOURCEMISMATCHERROR(
            PAYMENTSOURCEMISMATCHERROR pAYMENTSOURCEMISMATCHERROR) {
        return pAYMENTSOURCEMISMATCHERROR == null ? null : new PAYMENTSOURCEMISMATCHERRORCase(pAYMENTSOURCEMISMATCHERROR);
    }

    /**
     * This is MERCHANT_INITIATED_WITH_SECURITY_CODE_ERROR case.
     * @param mERCHANTINITIATEDWITHSECURITYCODEERROR MERCHANTINITIATEDWITHSECURITYCODEERROR value for mERCHANTINITIATEDWITHSECURITYCODEERROR.
     * @return The MERCHANTINITIATEDWITHSECURITYCODEERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMERCHANTINITIATEDWITHSECURITYCODEERROR(
            MERCHANTINITIATEDWITHSECURITYCODEERROR mERCHANTINITIATEDWITHSECURITYCODEERROR) {
        return mERCHANTINITIATEDWITHSECURITYCODEERROR == null ? null : new MERCHANTINITIATEDWITHSECURITYCODEERRORCase(mERCHANTINITIATEDWITHSECURITYCODEERROR);
    }

    /**
     * This is MERCHANT_AUTH_RESULTS_ERROR case.
     * @param mERCHANTAUTHRESULTSERROR MERCHANTAUTHRESULTSERROR value for mERCHANTAUTHRESULTSERROR.
     * @return The MERCHANTAUTHRESULTSERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMERCHANTAUTHRESULTSERROR(
            MERCHANTAUTHRESULTSERROR mERCHANTAUTHRESULTSERROR) {
        return mERCHANTAUTHRESULTSERROR == null ? null : new MERCHANTAUTHRESULTSERRORCase(mERCHANTAUTHRESULTSERROR);
    }

    /**
     * This is MULTI_PURCHASE_UNITS_ERROR case.
     * @param mULTIPURCHASEUNITSERROR MULTIPURCHASEUNITSERROR value for mULTIPURCHASEUNITSERROR.
     * @return The MULTIPURCHASEUNITSERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMULTIPURCHASEUNITSERROR(
            MULTIPURCHASEUNITSERROR mULTIPURCHASEUNITSERROR) {
        return mULTIPURCHASEUNITSERROR == null ? null : new MULTIPURCHASEUNITSERRORCase(mULTIPURCHASEUNITSERROR);
    }

    /**
     * This is RETURN_URL_REQUIRED_ERROR case.
     * @param rETURNURLREQUIREDERROR RETURNURLREQUIREDERROR value for rETURNURLREQUIREDERROR.
     * @return The RETURNURLREQUIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromRETURNURLREQUIREDERROR(
            RETURNURLREQUIREDERROR rETURNURLREQUIREDERROR) {
        return rETURNURLREQUIREDERROR == null ? null : new RETURNURLREQUIREDERRORCase(rETURNURLREQUIREDERROR);
    }

    /**
     * This is CANCEL_URL_REQUIRED_ERROR case.
     * @param cANCELURLREQUIREDERROR CANCELURLREQUIREDERROR value for cANCELURLREQUIREDERROR.
     * @return The CANCELURLREQUIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromCANCELURLREQUIREDERROR(
            CANCELURLREQUIREDERROR cANCELURLREQUIREDERROR) {
        return cANCELURLREQUIREDERROR == null ? null : new CANCELURLREQUIREDERRORCase(cANCELURLREQUIREDERROR);
    }

    /**
     * This is PAYER_ACTION_REQUIRED case.
     * @param pAYERACTIONREQUIRED PAYERACTIONREQUIRED value for pAYERACTIONREQUIRED.
     * @return The PAYERACTIONREQUIREDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYERACTIONREQUIRED(
            PAYERACTIONREQUIRED pAYERACTIONREQUIRED) {
        return pAYERACTIONREQUIRED == null ? null : new PAYERACTIONREQUIREDCase(pAYERACTIONREQUIRED);
    }

    /**
     * This is APPLE_PAY_AMOUNT_MISMATCH_RESULT case.
     * @param aPPLEPAYAMOUNTMISMATCHRESULT APPLEPAYAMOUNTMISMATCHRESULT value for aPPLEPAYAMOUNTMISMATCHRESULT.
     * @return The APPLEPAYAMOUNTMISMATCHRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromAPPLEPAYAMOUNTMISMATCHRESULT(
            APPLEPAYAMOUNTMISMATCHRESULT aPPLEPAYAMOUNTMISMATCHRESULT) {
        return aPPLEPAYAMOUNTMISMATCHRESULT == null ? null : new APPLEPAYAMOUNTMISMATCHRESULTCase(aPPLEPAYAMOUNTMISMATCHRESULT);
    }

    /**
     * This is CARD_NUMBER_REQUIRED_ERROR case.
     * @param cARDNUMBERREQUIREDERROR CARDNUMBERREQUIREDERROR value for cARDNUMBERREQUIREDERROR.
     * @return The CARDNUMBERREQUIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromCARDNUMBERREQUIREDERROR(
            CARDNUMBERREQUIREDERROR cARDNUMBERREQUIREDERROR) {
        return cARDNUMBERREQUIREDERROR == null ? null : new CARDNUMBERREQUIREDERRORCase(cARDNUMBERREQUIREDERROR);
    }

    /**
     * This is CARD_EXPIRY_REQUIRED_ERROR case.
     * @param cARDEXPIRYREQUIREDERROR CARDEXPIRYREQUIREDERROR value for cARDEXPIRYREQUIREDERROR.
     * @return The CARDEXPIRYREQUIREDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromCARDEXPIRYREQUIREDERROR(
            CARDEXPIRYREQUIREDERROR cARDEXPIRYREQUIREDERROR) {
        return cARDEXPIRYREQUIREDERROR == null ? null : new CARDEXPIRYREQUIREDERRORCase(cARDEXPIRYREQUIREDERROR);
    }

    /**
     * This is VAULT_INSTRUCTION_REQUIRED_RESULT case.
     * @param vAULTINSTRUCTIONREQUIREDRESULT VAULTINSTRUCTIONREQUIREDRESULT value for vAULTINSTRUCTIONREQUIREDRESULT.
     * @return The VAULTINSTRUCTIONREQUIREDRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromVAULTINSTRUCTIONREQUIREDRESULT(
            VAULTINSTRUCTIONREQUIREDRESULT vAULTINSTRUCTIONREQUIREDRESULT) {
        return vAULTINSTRUCTIONREQUIREDRESULT == null ? null : new VAULTINSTRUCTIONREQUIREDRESULTCase(vAULTINSTRUCTIONREQUIREDRESULT);
    }

    /**
     * This is MISMATCHED_VAULT_ID_TO_PAYMENT_SOURCE_RESULT case.
     * @param mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT value for mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT.
     * @return The MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMISMATCHEDVAULTIDTOPAYMENTSOURCERESULT(
            MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT) {
        return mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT == null ? null : new MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase(mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT);
    }

    /**
     * This is ORDER_CANNOT_BE_SAVED case.
     * @param oRDERCANNOTBESAVED ORDERCANNOTBESAVED value for oRDERCANNOTBESAVED.
     * @return The ORDERCANNOTBESAVEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromORDERCANNOTBESAVED(
            ORDERCANNOTBESAVED oRDERCANNOTBESAVED) {
        return oRDERCANNOTBESAVED == null ? null : new ORDERCANNOTBESAVEDCase(oRDERCANNOTBESAVED);
    }

    /**
     * This is SAVE_ORDER_NOT_SUPPORTED case.
     * @param sAVEORDERNOTSUPPORTED SAVEORDERNOTSUPPORTED value for sAVEORDERNOTSUPPORTED.
     * @return The SAVEORDERNOTSUPPORTEDCase object.
     */
    public static OrdersAuthorize422IssuesItems fromSAVEORDERNOTSUPPORTED(
            SAVEORDERNOTSUPPORTED sAVEORDERNOTSUPPORTED) {
        return sAVEORDERNOTSUPPORTED == null ? null : new SAVEORDERNOTSUPPORTEDCase(sAVEORDERNOTSUPPORTED);
    }

    /**
     * This is NOT_ELIGIBLE_FOR_PNREF_PROCESSING_RESULT case.
     * @param nOTELIGIBLEFORPNREFPROCESSINGRESULT NOTELIGIBLEFORPNREFPROCESSINGRESULT value for nOTELIGIBLEFORPNREFPROCESSINGRESULT.
     * @return The NOTELIGIBLEFORPNREFPROCESSINGRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromNOTELIGIBLEFORPNREFPROCESSINGRESULT(
            NOTELIGIBLEFORPNREFPROCESSINGRESULT nOTELIGIBLEFORPNREFPROCESSINGRESULT) {
        return nOTELIGIBLEFORPNREFPROCESSINGRESULT == null ? null : new NOTELIGIBLEFORPNREFPROCESSINGRESULTCase(nOTELIGIBLEFORPNREFPROCESSINGRESULT);
    }

    /**
     * This is PAYPAL_ID_ERROR case.
     * @param pAYPALIDERROR PAYPALIDERROR value for pAYPALIDERROR.
     * @return The PAYPALIDERRORCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYPALIDERROR(PAYPALIDERROR pAYPALIDERROR) {
        return pAYPALIDERROR == null ? null : new PAYPALIDERRORCase(pAYPALIDERROR);
    }

    /**
     * This is PAYPAL_TRANSACTION_ID_NOT_FOUND_RESULT case.
     * @param pAYPALTRANSACTIONIDNOTFOUNDRESULT PAYPALTRANSACTIONIDNOTFOUNDRESULT value for pAYPALTRANSACTIONIDNOTFOUNDRESULT.
     * @return The PAYPALTRANSACTIONIDNOTFOUNDRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPAYPALTRANSACTIONIDNOTFOUNDRESULT(
            PAYPALTRANSACTIONIDNOTFOUNDRESULT pAYPALTRANSACTIONIDNOTFOUNDRESULT) {
        return pAYPALTRANSACTIONIDNOTFOUNDRESULT == null ? null : new PAYPALTRANSACTIONIDNOTFOUNDRESULTCase(pAYPALTRANSACTIONIDNOTFOUNDRESULT);
    }

    /**
     * This is PNREF_NOT_FOUND_RESULT case.
     * @param pNREFNOTFOUNDRESULT PNREFNOTFOUNDRESULT value for pNREFNOTFOUNDRESULT.
     * @return The PNREFNOTFOUNDRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromPNREFNOTFOUNDRESULT(
            PNREFNOTFOUNDRESULT pNREFNOTFOUNDRESULT) {
        return pNREFNOTFOUNDRESULT == null ? null : new PNREFNOTFOUNDRESULTCase(pNREFNOTFOUNDRESULT);
    }

    /**
     * This is INVALID_SECURITY_CODE_LENGTH_RESULT case.
     * @param iNVALIDSECURITYCODELENGTHRESULT INVALIDSECURITYCODELENGTHRESULT value for iNVALIDSECURITYCODELENGTHRESULT.
     * @return The INVALIDSECURITYCODELENGTHRESULTCase object.
     */
    public static OrdersAuthorize422IssuesItems fromINVALIDSECURITYCODELENGTHRESULT(
            INVALIDSECURITYCODELENGTHRESULT iNVALIDSECURITYCODELENGTHRESULT) {
        return iNVALIDSECURITYCODELENGTHRESULT == null ? null : new INVALIDSECURITYCODELENGTHRESULTCase(iNVALIDSECURITYCODELENGTHRESULT);
    }

    /**
     * This is MISSING_PAYMENT_PARAMETER case.
     * @param mISSINGPAYMENTPARAMETER MISSINGPAYMENTPARAMETER value for mISSINGPAYMENTPARAMETER.
     * @return The MISSINGPAYMENTPARAMETERCase object.
     */
    public static OrdersAuthorize422IssuesItems fromMISSINGPAYMENTPARAMETER(
            MISSINGPAYMENTPARAMETER mISSINGPAYMENTPARAMETER) {
        return mISSINGPAYMENTPARAMETER == null ? null : new MISSINGPAYMENTPARAMETERCase(mISSINGPAYMENTPARAMETER);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R aCTIONDOESNOTMATCHINTENT(ACTIONDOESNOTMATCHINTENT aCTIONDOESNOTMATCHINTENT);

        R aGREEMENTALREADYCANCELLEDERROR(AGREEMENTALREADYCANCELLEDERROR aGREEMENTALREADYCANCELLEDERROR);

        R bILLINGAGREEMENTNOTFOUNDERROR(BILLINGAGREEMENTNOTFOUNDERROR bILLINGAGREEMENTNOTFOUNDERROR);

        R mISSINGPREVIOUSREFERENCERESULT(MISSINGPREVIOUSREFERENCERESULT mISSINGPREVIOUSREFERENCERESULT);

        R mISSINGCRYPTOGRAMRESULT(MISSINGCRYPTOGRAMRESULT mISSINGCRYPTOGRAMRESULT);

        R cARDBRANDNOTSUPPORTED(CARDBRANDNOTSUPPORTED cARDBRANDNOTSUPPORTED);

        R dECLINEDDUETORELATEDTXN(DECLINEDDUETORELATEDTXN dECLINEDDUETORELATEDTXN);

        R dOMESTICTRANSACTIONREQUIREDERROR(DOMESTICTRANSACTIONREQUIREDERROR dOMESTICTRANSACTIONREQUIREDERROR);

        R dUPLICATEINVOICEIDERROR(DUPLICATEINVOICEIDERROR dUPLICATEINVOICEIDERROR);

        R oRDERNOTAPPROVED(ORDERNOTAPPROVED oRDERNOTAPPROVED);

        R mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR(MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR);

        R pAYEEBLOCKEDTRANSACTIONERROR(PAYEEBLOCKEDTRANSACTIONERROR pAYEEBLOCKEDTRANSACTIONERROR);

        R pAYEEFXRATEIDEXPIREDERROR(PAYEEFXRATEIDEXPIREDERROR pAYEEFXRATEIDEXPIREDERROR);

        R uNSUPPORTEDINTENTFORPAYMENTSOURCE(UNSUPPORTEDINTENTFORPAYMENTSOURCE uNSUPPORTEDINTENTFORPAYMENTSOURCE);

        R pAYERACCOUNTLOCKEDORCLOSEDERROR(PAYERACCOUNTLOCKEDORCLOSEDERROR pAYERACCOUNTLOCKEDORCLOSEDERROR);

        R pAYERACCOUNTRESTRICTEDERROR(PAYERACCOUNTRESTRICTEDERROR pAYERACCOUNTRESTRICTEDERROR);

        R pAYERCANNOTPAYERROR(PAYERCANNOTPAYERROR pAYERCANNOTPAYERROR);

        R pAYPALTRANSACTIONIDEXPIRED(PAYPALTRANSACTIONIDEXPIRED pAYPALTRANSACTIONIDEXPIRED);

        R pNREFEXPIRED(PNREFEXPIRED pNREFEXPIRED);

        R rEFERENCEDCARDEXPIRED(REFERENCEDCARDEXPIRED rEFERENCEDCARDEXPIRED);

        R tOKENEXPIREDRESULT(TOKENEXPIREDRESULT tOKENEXPIREDRESULT);

        R tOKENIDNOTFOUND(TOKENIDNOTFOUND tOKENIDNOTFOUND);

        R tRANSACTIONLIMITEXCEEDEDERROR(TRANSACTIONLIMITEXCEEDEDERROR tRANSACTIONLIMITEXCEEDEDERROR);

        R tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR(TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR);

        R tRANSACTIONREFUSEDERROR(TRANSACTIONREFUSEDERROR tRANSACTIONREFUSEDERROR);

        R oRDERALREADYAUTHORIZEDERROR(ORDERALREADYAUTHORIZEDERROR oRDERALREADYAUTHORIZEDERROR);

        R aUTHCAPTURENOTENABLEDERROR(AUTHCAPTURENOTENABLEDERROR aUTHCAPTURENOTENABLEDERROR);

        R aMOUNTCANNOTBESPECIFIED(AMOUNTCANNOTBESPECIFIED aMOUNTCANNOTBESPECIFIED);

        R aUTHORIZATIONAMOUNTEXCEEDED(AUTHORIZATIONAMOUNTEXCEEDED aUTHORIZATIONAMOUNTEXCEEDED);

        R aUTHORIZATIONCURRENCYMISMATCH(AUTHORIZATIONCURRENCYMISMATCH aUTHORIZATIONCURRENCYMISMATCH);

        R mAXAUTHORIZATIONCOUNTEXCEEDED(MAXAUTHORIZATIONCOUNTEXCEEDED mAXAUTHORIZATIONCOUNTEXCEEDED);

        R oRDERCOMPLETEDORVOIDED(ORDERCOMPLETEDORVOIDED oRDERCOMPLETEDORVOIDED);

        R oRDEREXPIRED(ORDEREXPIRED oRDEREXPIRED);

        R iNVALIDPICKUPADDRESS(INVALIDPICKUPADDRESS iNVALIDPICKUPADDRESS);

        R sHIPPINGADDRESSINVALIDRESULT(SHIPPINGADDRESSINVALIDRESULT sHIPPINGADDRESSINVALIDRESULT);

        R pAYMENTTYPENOTSUPPORTEDFORINTENT(PAYMENTTYPENOTSUPPORTEDFORINTENT pAYMENTTYPENOTSUPPORTEDFORINTENT);

        R bILLINGAGREEMENTIDMISMATCH(BILLINGAGREEMENTIDMISMATCH bILLINGAGREEMENTIDMISMATCH);

        R pREFERREDPAYMENTSOURCEMISMATCH(PREFERREDPAYMENTSOURCEMISMATCH pREFERREDPAYMENTSOURCEMISMATCH);

        R iNCOMPATIBLEPARAMETERVALUERESULT(INCOMPATIBLEPARAMETERVALUERESULT iNCOMPATIBLEPARAMETERVALUERESULT);

        R iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR(INVALIDPREVIOUSTRANSACTIONREFERENCEERROR iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR);

        R cHARGEBACKONPREVIOUSTRANSACTIONERROR(CHARGEBACKONPREVIOUSTRANSACTIONERROR cHARGEBACKONPREVIOUSTRANSACTIONERROR);

        R pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR(PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR);

        R pAYMENTSOURCEMISMATCHERROR(PAYMENTSOURCEMISMATCHERROR pAYMENTSOURCEMISMATCHERROR);

        R mERCHANTINITIATEDWITHSECURITYCODEERROR(MERCHANTINITIATEDWITHSECURITYCODEERROR mERCHANTINITIATEDWITHSECURITYCODEERROR);

        R mERCHANTAUTHRESULTSERROR(MERCHANTAUTHRESULTSERROR mERCHANTAUTHRESULTSERROR);

        R mULTIPURCHASEUNITSERROR(MULTIPURCHASEUNITSERROR mULTIPURCHASEUNITSERROR);

        R rETURNURLREQUIREDERROR(RETURNURLREQUIREDERROR rETURNURLREQUIREDERROR);

        R cANCELURLREQUIREDERROR(CANCELURLREQUIREDERROR cANCELURLREQUIREDERROR);

        R pAYERACTIONREQUIRED(PAYERACTIONREQUIRED pAYERACTIONREQUIRED);

        R aPPLEPAYAMOUNTMISMATCHRESULT(APPLEPAYAMOUNTMISMATCHRESULT aPPLEPAYAMOUNTMISMATCHRESULT);

        R cARDNUMBERREQUIREDERROR(CARDNUMBERREQUIREDERROR cARDNUMBERREQUIREDERROR);

        R cARDEXPIRYREQUIREDERROR(CARDEXPIRYREQUIREDERROR cARDEXPIRYREQUIREDERROR);

        R vAULTINSTRUCTIONREQUIREDRESULT(VAULTINSTRUCTIONREQUIREDRESULT vAULTINSTRUCTIONREQUIREDRESULT);

        R mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT(MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT);

        R oRDERCANNOTBESAVED(ORDERCANNOTBESAVED oRDERCANNOTBESAVED);

        R sAVEORDERNOTSUPPORTED(SAVEORDERNOTSUPPORTED sAVEORDERNOTSUPPORTED);

        R nOTELIGIBLEFORPNREFPROCESSINGRESULT(NOTELIGIBLEFORPNREFPROCESSINGRESULT nOTELIGIBLEFORPNREFPROCESSINGRESULT);

        R pAYPALIDERROR(PAYPALIDERROR pAYPALIDERROR);

        R pAYPALTRANSACTIONIDNOTFOUNDRESULT(PAYPALTRANSACTIONIDNOTFOUNDRESULT pAYPALTRANSACTIONIDNOTFOUNDRESULT);

        R pNREFNOTFOUNDRESULT(PNREFNOTFOUNDRESULT pNREFNOTFOUNDRESULT);

        R iNVALIDSECURITYCODELENGTHRESULT(INVALIDSECURITYCODELENGTHRESULT iNVALIDSECURITYCODELENGTHRESULT);

        R mISSINGPAYMENTPARAMETER(MISSINGPAYMENTPARAMETER mISSINGPAYMENTPARAMETER);
    }

    /**
     * This is a implementation class for ACTIONDOESNOTMATCHINTENTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ACTIONDOESNOTMATCHINTENT")
    private static class ACTIONDOESNOTMATCHINTENTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ACTIONDOESNOTMATCHINTENT aCTIONDOESNOTMATCHINTENT;

        ACTIONDOESNOTMATCHINTENTCase(ACTIONDOESNOTMATCHINTENT aCTIONDOESNOTMATCHINTENT) {
            this.aCTIONDOESNOTMATCHINTENT = aCTIONDOESNOTMATCHINTENT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aCTIONDOESNOTMATCHINTENT(this.aCTIONDOESNOTMATCHINTENT);
        }

        @JsonCreator
        private ACTIONDOESNOTMATCHINTENTCase(JsonNode jsonNode) throws IOException {
            this.aCTIONDOESNOTMATCHINTENT = ApiHelper.deserialize(jsonNode,
                ACTIONDOESNOTMATCHINTENT.class);
        }

        @Override
        public String toString() {
            return aCTIONDOESNOTMATCHINTENT.toString();
        }
    }

    /**
     * This is a implementation class for AGREEMENTALREADYCANCELLEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AGREEMENTALREADYCANCELLEDERROR")
    private static class AGREEMENTALREADYCANCELLEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private AGREEMENTALREADYCANCELLEDERROR aGREEMENTALREADYCANCELLEDERROR;

        AGREEMENTALREADYCANCELLEDERRORCase(AGREEMENTALREADYCANCELLEDERROR aGREEMENTALREADYCANCELLEDERROR) {
            this.aGREEMENTALREADYCANCELLEDERROR = aGREEMENTALREADYCANCELLEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aGREEMENTALREADYCANCELLEDERROR(this.aGREEMENTALREADYCANCELLEDERROR);
        }

        @JsonCreator
        private AGREEMENTALREADYCANCELLEDERRORCase(JsonNode jsonNode) throws IOException {
            this.aGREEMENTALREADYCANCELLEDERROR = ApiHelper.deserialize(jsonNode,
                AGREEMENTALREADYCANCELLEDERROR.class);
        }

        @Override
        public String toString() {
            return aGREEMENTALREADYCANCELLEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for BILLINGAGREEMENTNOTFOUNDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BILLINGAGREEMENTNOTFOUNDERROR")
    private static class BILLINGAGREEMENTNOTFOUNDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private BILLINGAGREEMENTNOTFOUNDERROR bILLINGAGREEMENTNOTFOUNDERROR;

        BILLINGAGREEMENTNOTFOUNDERRORCase(BILLINGAGREEMENTNOTFOUNDERROR bILLINGAGREEMENTNOTFOUNDERROR) {
            this.bILLINGAGREEMENTNOTFOUNDERROR = bILLINGAGREEMENTNOTFOUNDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bILLINGAGREEMENTNOTFOUNDERROR(this.bILLINGAGREEMENTNOTFOUNDERROR);
        }

        @JsonCreator
        private BILLINGAGREEMENTNOTFOUNDERRORCase(JsonNode jsonNode) throws IOException {
            this.bILLINGAGREEMENTNOTFOUNDERROR = ApiHelper.deserialize(jsonNode,
                BILLINGAGREEMENTNOTFOUNDERROR.class);
        }

        @Override
        public String toString() {
            return bILLINGAGREEMENTNOTFOUNDERROR.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPREVIOUSREFERENCERESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPREVIOUSREFERENCERESULT")
    private static class MISSINGPREVIOUSREFERENCERESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MISSINGPREVIOUSREFERENCERESULT mISSINGPREVIOUSREFERENCERESULT;

        MISSINGPREVIOUSREFERENCERESULTCase(MISSINGPREVIOUSREFERENCERESULT mISSINGPREVIOUSREFERENCERESULT) {
            this.mISSINGPREVIOUSREFERENCERESULT = mISSINGPREVIOUSREFERENCERESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPREVIOUSREFERENCERESULT(this.mISSINGPREVIOUSREFERENCERESULT);
        }

        @JsonCreator
        private MISSINGPREVIOUSREFERENCERESULTCase(JsonNode jsonNode) throws IOException {
            this.mISSINGPREVIOUSREFERENCERESULT = ApiHelper.deserialize(jsonNode,
                MISSINGPREVIOUSREFERENCERESULT.class);
        }

        @Override
        public String toString() {
            return mISSINGPREVIOUSREFERENCERESULT.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGCRYPTOGRAMRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGCRYPTOGRAMRESULT")
    private static class MISSINGCRYPTOGRAMRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MISSINGCRYPTOGRAMRESULT mISSINGCRYPTOGRAMRESULT;

        MISSINGCRYPTOGRAMRESULTCase(MISSINGCRYPTOGRAMRESULT mISSINGCRYPTOGRAMRESULT) {
            this.mISSINGCRYPTOGRAMRESULT = mISSINGCRYPTOGRAMRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGCRYPTOGRAMRESULT(this.mISSINGCRYPTOGRAMRESULT);
        }

        @JsonCreator
        private MISSINGCRYPTOGRAMRESULTCase(JsonNode jsonNode) throws IOException {
            this.mISSINGCRYPTOGRAMRESULT = ApiHelper.deserialize(jsonNode,
                MISSINGCRYPTOGRAMRESULT.class);
        }

        @Override
        public String toString() {
            return mISSINGCRYPTOGRAMRESULT.toString();
        }
    }

    /**
     * This is a implementation class for CARDBRANDNOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDBRANDNOTSUPPORTED")
    private static class CARDBRANDNOTSUPPORTEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private CARDBRANDNOTSUPPORTED cARDBRANDNOTSUPPORTED;

        CARDBRANDNOTSUPPORTEDCase(CARDBRANDNOTSUPPORTED cARDBRANDNOTSUPPORTED) {
            this.cARDBRANDNOTSUPPORTED = cARDBRANDNOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDBRANDNOTSUPPORTED(this.cARDBRANDNOTSUPPORTED);
        }

        @JsonCreator
        private CARDBRANDNOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.cARDBRANDNOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                CARDBRANDNOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return cARDBRANDNOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for DECLINEDDUETORELATEDTXNCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DECLINEDDUETORELATEDTXN")
    private static class DECLINEDDUETORELATEDTXNCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private DECLINEDDUETORELATEDTXN dECLINEDDUETORELATEDTXN;

        DECLINEDDUETORELATEDTXNCase(DECLINEDDUETORELATEDTXN dECLINEDDUETORELATEDTXN) {
            this.dECLINEDDUETORELATEDTXN = dECLINEDDUETORELATEDTXN;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dECLINEDDUETORELATEDTXN(this.dECLINEDDUETORELATEDTXN);
        }

        @JsonCreator
        private DECLINEDDUETORELATEDTXNCase(JsonNode jsonNode) throws IOException {
            this.dECLINEDDUETORELATEDTXN = ApiHelper.deserialize(jsonNode,
                DECLINEDDUETORELATEDTXN.class);
        }

        @Override
        public String toString() {
            return dECLINEDDUETORELATEDTXN.toString();
        }
    }

    /**
     * This is a implementation class for DOMESTICTRANSACTIONREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DOMESTICTRANSACTIONREQUIREDERROR")
    private static class DOMESTICTRANSACTIONREQUIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private DOMESTICTRANSACTIONREQUIREDERROR dOMESTICTRANSACTIONREQUIREDERROR;

        DOMESTICTRANSACTIONREQUIREDERRORCase(DOMESTICTRANSACTIONREQUIREDERROR dOMESTICTRANSACTIONREQUIREDERROR) {
            this.dOMESTICTRANSACTIONREQUIREDERROR = dOMESTICTRANSACTIONREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dOMESTICTRANSACTIONREQUIREDERROR(this.dOMESTICTRANSACTIONREQUIREDERROR);
        }

        @JsonCreator
        private DOMESTICTRANSACTIONREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.dOMESTICTRANSACTIONREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                DOMESTICTRANSACTIONREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return dOMESTICTRANSACTIONREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for DUPLICATEINVOICEIDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DUPLICATEINVOICEIDERROR")
    private static class DUPLICATEINVOICEIDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private DUPLICATEINVOICEIDERROR dUPLICATEINVOICEIDERROR;

        DUPLICATEINVOICEIDERRORCase(DUPLICATEINVOICEIDERROR dUPLICATEINVOICEIDERROR) {
            this.dUPLICATEINVOICEIDERROR = dUPLICATEINVOICEIDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.dUPLICATEINVOICEIDERROR(this.dUPLICATEINVOICEIDERROR);
        }

        @JsonCreator
        private DUPLICATEINVOICEIDERRORCase(JsonNode jsonNode) throws IOException {
            this.dUPLICATEINVOICEIDERROR = ApiHelper.deserialize(jsonNode,
                DUPLICATEINVOICEIDERROR.class);
        }

        @Override
        public String toString() {
            return dUPLICATEINVOICEIDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ORDERNOTAPPROVEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERNOTAPPROVED")
    private static class ORDERNOTAPPROVEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ORDERNOTAPPROVED oRDERNOTAPPROVED;

        ORDERNOTAPPROVEDCase(ORDERNOTAPPROVED oRDERNOTAPPROVED) {
            this.oRDERNOTAPPROVED = oRDERNOTAPPROVED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERNOTAPPROVED(this.oRDERNOTAPPROVED);
        }

        @JsonCreator
        private ORDERNOTAPPROVEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERNOTAPPROVED = ApiHelper.deserialize(jsonNode,
                ORDERNOTAPPROVED.class);
        }

        @Override
        public String toString() {
            return oRDERNOTAPPROVED.toString();
        }
    }

    /**
     * This is a implementation class for MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR")
    private static class MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR;

        MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase(MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR) {
            this.mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR = mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR(this.mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR);
        }

        @JsonCreator
        private MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase(JsonNode jsonNode) throws IOException {
            this.mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR = ApiHelper.deserialize(jsonNode,
                MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR.class);
        }

        @Override
        public String toString() {
            return mAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEBLOCKEDTRANSACTIONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEBLOCKEDTRANSACTIONERROR")
    private static class PAYEEBLOCKEDTRANSACTIONERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYEEBLOCKEDTRANSACTIONERROR pAYEEBLOCKEDTRANSACTIONERROR;

        PAYEEBLOCKEDTRANSACTIONERRORCase(PAYEEBLOCKEDTRANSACTIONERROR pAYEEBLOCKEDTRANSACTIONERROR) {
            this.pAYEEBLOCKEDTRANSACTIONERROR = pAYEEBLOCKEDTRANSACTIONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEBLOCKEDTRANSACTIONERROR(this.pAYEEBLOCKEDTRANSACTIONERROR);
        }

        @JsonCreator
        private PAYEEBLOCKEDTRANSACTIONERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYEEBLOCKEDTRANSACTIONERROR = ApiHelper.deserialize(jsonNode,
                PAYEEBLOCKEDTRANSACTIONERROR.class);
        }

        @Override
        public String toString() {
            return pAYEEBLOCKEDTRANSACTIONERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYEEFXRATEIDEXPIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYEEFXRATEIDEXPIREDERROR")
    private static class PAYEEFXRATEIDEXPIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYEEFXRATEIDEXPIREDERROR pAYEEFXRATEIDEXPIREDERROR;

        PAYEEFXRATEIDEXPIREDERRORCase(PAYEEFXRATEIDEXPIREDERROR pAYEEFXRATEIDEXPIREDERROR) {
            this.pAYEEFXRATEIDEXPIREDERROR = pAYEEFXRATEIDEXPIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYEEFXRATEIDEXPIREDERROR(this.pAYEEFXRATEIDEXPIREDERROR);
        }

        @JsonCreator
        private PAYEEFXRATEIDEXPIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYEEFXRATEIDEXPIREDERROR = ApiHelper.deserialize(jsonNode,
                PAYEEFXRATEIDEXPIREDERROR.class);
        }

        @Override
        public String toString() {
            return pAYEEFXRATEIDEXPIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for UNSUPPORTEDINTENTFORPAYMENTSOURCECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "UNSUPPORTEDINTENTFORPAYMENTSOURCE")
    private static class UNSUPPORTEDINTENTFORPAYMENTSOURCECase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private UNSUPPORTEDINTENTFORPAYMENTSOURCE uNSUPPORTEDINTENTFORPAYMENTSOURCE;

        UNSUPPORTEDINTENTFORPAYMENTSOURCECase(UNSUPPORTEDINTENTFORPAYMENTSOURCE uNSUPPORTEDINTENTFORPAYMENTSOURCE) {
            this.uNSUPPORTEDINTENTFORPAYMENTSOURCE = uNSUPPORTEDINTENTFORPAYMENTSOURCE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.uNSUPPORTEDINTENTFORPAYMENTSOURCE(this.uNSUPPORTEDINTENTFORPAYMENTSOURCE);
        }

        @JsonCreator
        private UNSUPPORTEDINTENTFORPAYMENTSOURCECase(JsonNode jsonNode) throws IOException {
            this.uNSUPPORTEDINTENTFORPAYMENTSOURCE = ApiHelper.deserialize(jsonNode,
                UNSUPPORTEDINTENTFORPAYMENTSOURCE.class);
        }

        @Override
        public String toString() {
            return uNSUPPORTEDINTENTFORPAYMENTSOURCE.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACCOUNTLOCKEDORCLOSEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACCOUNTLOCKEDORCLOSEDERROR")
    private static class PAYERACCOUNTLOCKEDORCLOSEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYERACCOUNTLOCKEDORCLOSEDERROR pAYERACCOUNTLOCKEDORCLOSEDERROR;

        PAYERACCOUNTLOCKEDORCLOSEDERRORCase(PAYERACCOUNTLOCKEDORCLOSEDERROR pAYERACCOUNTLOCKEDORCLOSEDERROR) {
            this.pAYERACCOUNTLOCKEDORCLOSEDERROR = pAYERACCOUNTLOCKEDORCLOSEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACCOUNTLOCKEDORCLOSEDERROR(this.pAYERACCOUNTLOCKEDORCLOSEDERROR);
        }

        @JsonCreator
        private PAYERACCOUNTLOCKEDORCLOSEDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYERACCOUNTLOCKEDORCLOSEDERROR = ApiHelper.deserialize(jsonNode,
                PAYERACCOUNTLOCKEDORCLOSEDERROR.class);
        }

        @Override
        public String toString() {
            return pAYERACCOUNTLOCKEDORCLOSEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACCOUNTRESTRICTEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACCOUNTRESTRICTEDERROR")
    private static class PAYERACCOUNTRESTRICTEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYERACCOUNTRESTRICTEDERROR pAYERACCOUNTRESTRICTEDERROR;

        PAYERACCOUNTRESTRICTEDERRORCase(PAYERACCOUNTRESTRICTEDERROR pAYERACCOUNTRESTRICTEDERROR) {
            this.pAYERACCOUNTRESTRICTEDERROR = pAYERACCOUNTRESTRICTEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACCOUNTRESTRICTEDERROR(this.pAYERACCOUNTRESTRICTEDERROR);
        }

        @JsonCreator
        private PAYERACCOUNTRESTRICTEDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYERACCOUNTRESTRICTEDERROR = ApiHelper.deserialize(jsonNode,
                PAYERACCOUNTRESTRICTEDERROR.class);
        }

        @Override
        public String toString() {
            return pAYERACCOUNTRESTRICTEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYERCANNOTPAYERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERCANNOTPAYERROR")
    private static class PAYERCANNOTPAYERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYERCANNOTPAYERROR pAYERCANNOTPAYERROR;

        PAYERCANNOTPAYERRORCase(PAYERCANNOTPAYERROR pAYERCANNOTPAYERROR) {
            this.pAYERCANNOTPAYERROR = pAYERCANNOTPAYERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERCANNOTPAYERROR(this.pAYERCANNOTPAYERROR);
        }

        @JsonCreator
        private PAYERCANNOTPAYERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYERCANNOTPAYERROR = ApiHelper.deserialize(jsonNode,
                PAYERCANNOTPAYERROR.class);
        }

        @Override
        public String toString() {
            return pAYERCANNOTPAYERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALTRANSACTIONIDEXPIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALTRANSACTIONIDEXPIRED")
    private static class PAYPALTRANSACTIONIDEXPIREDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYPALTRANSACTIONIDEXPIRED pAYPALTRANSACTIONIDEXPIRED;

        PAYPALTRANSACTIONIDEXPIREDCase(PAYPALTRANSACTIONIDEXPIRED pAYPALTRANSACTIONIDEXPIRED) {
            this.pAYPALTRANSACTIONIDEXPIRED = pAYPALTRANSACTIONIDEXPIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALTRANSACTIONIDEXPIRED(this.pAYPALTRANSACTIONIDEXPIRED);
        }

        @JsonCreator
        private PAYPALTRANSACTIONIDEXPIREDCase(JsonNode jsonNode) throws IOException {
            this.pAYPALTRANSACTIONIDEXPIRED = ApiHelper.deserialize(jsonNode,
                PAYPALTRANSACTIONIDEXPIRED.class);
        }

        @Override
        public String toString() {
            return pAYPALTRANSACTIONIDEXPIRED.toString();
        }
    }

    /**
     * This is a implementation class for PNREFEXPIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PNREFEXPIRED")
    private static class PNREFEXPIREDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PNREFEXPIRED pNREFEXPIRED;

        PNREFEXPIREDCase(PNREFEXPIRED pNREFEXPIRED) {
            this.pNREFEXPIRED = pNREFEXPIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pNREFEXPIRED(this.pNREFEXPIRED);
        }

        @JsonCreator
        private PNREFEXPIREDCase(JsonNode jsonNode) throws IOException {
            this.pNREFEXPIRED = ApiHelper.deserialize(jsonNode,
                PNREFEXPIRED.class);
        }

        @Override
        public String toString() {
            return pNREFEXPIRED.toString();
        }
    }

    /**
     * This is a implementation class for REFERENCEDCARDEXPIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFERENCEDCARDEXPIRED")
    private static class REFERENCEDCARDEXPIREDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private REFERENCEDCARDEXPIRED rEFERENCEDCARDEXPIRED;

        REFERENCEDCARDEXPIREDCase(REFERENCEDCARDEXPIRED rEFERENCEDCARDEXPIRED) {
            this.rEFERENCEDCARDEXPIRED = rEFERENCEDCARDEXPIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFERENCEDCARDEXPIRED(this.rEFERENCEDCARDEXPIRED);
        }

        @JsonCreator
        private REFERENCEDCARDEXPIREDCase(JsonNode jsonNode) throws IOException {
            this.rEFERENCEDCARDEXPIRED = ApiHelper.deserialize(jsonNode,
                REFERENCEDCARDEXPIRED.class);
        }

        @Override
        public String toString() {
            return rEFERENCEDCARDEXPIRED.toString();
        }
    }

    /**
     * This is a implementation class for TOKENEXPIREDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TOKENEXPIREDRESULT")
    private static class TOKENEXPIREDRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private TOKENEXPIREDRESULT tOKENEXPIREDRESULT;

        TOKENEXPIREDRESULTCase(TOKENEXPIREDRESULT tOKENEXPIREDRESULT) {
            this.tOKENEXPIREDRESULT = tOKENEXPIREDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tOKENEXPIREDRESULT(this.tOKENEXPIREDRESULT);
        }

        @JsonCreator
        private TOKENEXPIREDRESULTCase(JsonNode jsonNode) throws IOException {
            this.tOKENEXPIREDRESULT = ApiHelper.deserialize(jsonNode,
                TOKENEXPIREDRESULT.class);
        }

        @Override
        public String toString() {
            return tOKENEXPIREDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for TOKENIDNOTFOUNDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TOKENIDNOTFOUND")
    private static class TOKENIDNOTFOUNDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private TOKENIDNOTFOUND tOKENIDNOTFOUND;

        TOKENIDNOTFOUNDCase(TOKENIDNOTFOUND tOKENIDNOTFOUND) {
            this.tOKENIDNOTFOUND = tOKENIDNOTFOUND;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tOKENIDNOTFOUND(this.tOKENIDNOTFOUND);
        }

        @JsonCreator
        private TOKENIDNOTFOUNDCase(JsonNode jsonNode) throws IOException {
            this.tOKENIDNOTFOUND = ApiHelper.deserialize(jsonNode,
                TOKENIDNOTFOUND.class);
        }

        @Override
        public String toString() {
            return tOKENIDNOTFOUND.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONLIMITEXCEEDEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONLIMITEXCEEDEDERROR")
    private static class TRANSACTIONLIMITEXCEEDEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private TRANSACTIONLIMITEXCEEDEDERROR tRANSACTIONLIMITEXCEEDEDERROR;

        TRANSACTIONLIMITEXCEEDEDERRORCase(TRANSACTIONLIMITEXCEEDEDERROR tRANSACTIONLIMITEXCEEDEDERROR) {
            this.tRANSACTIONLIMITEXCEEDEDERROR = tRANSACTIONLIMITEXCEEDEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONLIMITEXCEEDEDERROR(this.tRANSACTIONLIMITEXCEEDEDERROR);
        }

        @JsonCreator
        private TRANSACTIONLIMITEXCEEDEDERRORCase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONLIMITEXCEEDEDERROR = ApiHelper.deserialize(jsonNode,
                TRANSACTIONLIMITEXCEEDEDERROR.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONLIMITEXCEEDEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR")
    private static class TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR;

        TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase(TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR) {
            this.tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR = tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR(this.tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR);
        }

        @JsonCreator
        private TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR = ApiHelper.deserialize(jsonNode,
                TRANSACTIONRECEIVINGLIMITEXCEEDEDERROR.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONRECEIVINGLIMITEXCEEDEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for TRANSACTIONREFUSEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TRANSACTIONREFUSEDERROR")
    private static class TRANSACTIONREFUSEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private TRANSACTIONREFUSEDERROR tRANSACTIONREFUSEDERROR;

        TRANSACTIONREFUSEDERRORCase(TRANSACTIONREFUSEDERROR tRANSACTIONREFUSEDERROR) {
            this.tRANSACTIONREFUSEDERROR = tRANSACTIONREFUSEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.tRANSACTIONREFUSEDERROR(this.tRANSACTIONREFUSEDERROR);
        }

        @JsonCreator
        private TRANSACTIONREFUSEDERRORCase(JsonNode jsonNode) throws IOException {
            this.tRANSACTIONREFUSEDERROR = ApiHelper.deserialize(jsonNode,
                TRANSACTIONREFUSEDERROR.class);
        }

        @Override
        public String toString() {
            return tRANSACTIONREFUSEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for ORDERALREADYAUTHORIZEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERALREADYAUTHORIZEDERROR")
    private static class ORDERALREADYAUTHORIZEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ORDERALREADYAUTHORIZEDERROR oRDERALREADYAUTHORIZEDERROR;

        ORDERALREADYAUTHORIZEDERRORCase(ORDERALREADYAUTHORIZEDERROR oRDERALREADYAUTHORIZEDERROR) {
            this.oRDERALREADYAUTHORIZEDERROR = oRDERALREADYAUTHORIZEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERALREADYAUTHORIZEDERROR(this.oRDERALREADYAUTHORIZEDERROR);
        }

        @JsonCreator
        private ORDERALREADYAUTHORIZEDERRORCase(JsonNode jsonNode) throws IOException {
            this.oRDERALREADYAUTHORIZEDERROR = ApiHelper.deserialize(jsonNode,
                ORDERALREADYAUTHORIZEDERROR.class);
        }

        @Override
        public String toString() {
            return oRDERALREADYAUTHORIZEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for AUTHCAPTURENOTENABLEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AUTHCAPTURENOTENABLEDERROR")
    private static class AUTHCAPTURENOTENABLEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private AUTHCAPTURENOTENABLEDERROR aUTHCAPTURENOTENABLEDERROR;

        AUTHCAPTURENOTENABLEDERRORCase(AUTHCAPTURENOTENABLEDERROR aUTHCAPTURENOTENABLEDERROR) {
            this.aUTHCAPTURENOTENABLEDERROR = aUTHCAPTURENOTENABLEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aUTHCAPTURENOTENABLEDERROR(this.aUTHCAPTURENOTENABLEDERROR);
        }

        @JsonCreator
        private AUTHCAPTURENOTENABLEDERRORCase(JsonNode jsonNode) throws IOException {
            this.aUTHCAPTURENOTENABLEDERROR = ApiHelper.deserialize(jsonNode,
                AUTHCAPTURENOTENABLEDERROR.class);
        }

        @Override
        public String toString() {
            return aUTHCAPTURENOTENABLEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for AMOUNTCANNOTBESPECIFIEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AMOUNTCANNOTBESPECIFIED")
    private static class AMOUNTCANNOTBESPECIFIEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private AMOUNTCANNOTBESPECIFIED aMOUNTCANNOTBESPECIFIED;

        AMOUNTCANNOTBESPECIFIEDCase(AMOUNTCANNOTBESPECIFIED aMOUNTCANNOTBESPECIFIED) {
            this.aMOUNTCANNOTBESPECIFIED = aMOUNTCANNOTBESPECIFIED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aMOUNTCANNOTBESPECIFIED(this.aMOUNTCANNOTBESPECIFIED);
        }

        @JsonCreator
        private AMOUNTCANNOTBESPECIFIEDCase(JsonNode jsonNode) throws IOException {
            this.aMOUNTCANNOTBESPECIFIED = ApiHelper.deserialize(jsonNode,
                AMOUNTCANNOTBESPECIFIED.class);
        }

        @Override
        public String toString() {
            return aMOUNTCANNOTBESPECIFIED.toString();
        }
    }

    /**
     * This is a implementation class for AUTHORIZATIONAMOUNTEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AUTHORIZATIONAMOUNTEXCEEDED")
    private static class AUTHORIZATIONAMOUNTEXCEEDEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private AUTHORIZATIONAMOUNTEXCEEDED aUTHORIZATIONAMOUNTEXCEEDED;

        AUTHORIZATIONAMOUNTEXCEEDEDCase(AUTHORIZATIONAMOUNTEXCEEDED aUTHORIZATIONAMOUNTEXCEEDED) {
            this.aUTHORIZATIONAMOUNTEXCEEDED = aUTHORIZATIONAMOUNTEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aUTHORIZATIONAMOUNTEXCEEDED(this.aUTHORIZATIONAMOUNTEXCEEDED);
        }

        @JsonCreator
        private AUTHORIZATIONAMOUNTEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.aUTHORIZATIONAMOUNTEXCEEDED = ApiHelper.deserialize(jsonNode,
                AUTHORIZATIONAMOUNTEXCEEDED.class);
        }

        @Override
        public String toString() {
            return aUTHORIZATIONAMOUNTEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for AUTHORIZATIONCURRENCYMISMATCHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AUTHORIZATIONCURRENCYMISMATCH")
    private static class AUTHORIZATIONCURRENCYMISMATCHCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private AUTHORIZATIONCURRENCYMISMATCH aUTHORIZATIONCURRENCYMISMATCH;

        AUTHORIZATIONCURRENCYMISMATCHCase(AUTHORIZATIONCURRENCYMISMATCH aUTHORIZATIONCURRENCYMISMATCH) {
            this.aUTHORIZATIONCURRENCYMISMATCH = aUTHORIZATIONCURRENCYMISMATCH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aUTHORIZATIONCURRENCYMISMATCH(this.aUTHORIZATIONCURRENCYMISMATCH);
        }

        @JsonCreator
        private AUTHORIZATIONCURRENCYMISMATCHCase(JsonNode jsonNode) throws IOException {
            this.aUTHORIZATIONCURRENCYMISMATCH = ApiHelper.deserialize(jsonNode,
                AUTHORIZATIONCURRENCYMISMATCH.class);
        }

        @Override
        public String toString() {
            return aUTHORIZATIONCURRENCYMISMATCH.toString();
        }
    }

    /**
     * This is a implementation class for MAXAUTHORIZATIONCOUNTEXCEEDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MAXAUTHORIZATIONCOUNTEXCEEDED")
    private static class MAXAUTHORIZATIONCOUNTEXCEEDEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MAXAUTHORIZATIONCOUNTEXCEEDED mAXAUTHORIZATIONCOUNTEXCEEDED;

        MAXAUTHORIZATIONCOUNTEXCEEDEDCase(MAXAUTHORIZATIONCOUNTEXCEEDED mAXAUTHORIZATIONCOUNTEXCEEDED) {
            this.mAXAUTHORIZATIONCOUNTEXCEEDED = mAXAUTHORIZATIONCOUNTEXCEEDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mAXAUTHORIZATIONCOUNTEXCEEDED(this.mAXAUTHORIZATIONCOUNTEXCEEDED);
        }

        @JsonCreator
        private MAXAUTHORIZATIONCOUNTEXCEEDEDCase(JsonNode jsonNode) throws IOException {
            this.mAXAUTHORIZATIONCOUNTEXCEEDED = ApiHelper.deserialize(jsonNode,
                MAXAUTHORIZATIONCOUNTEXCEEDED.class);
        }

        @Override
        public String toString() {
            return mAXAUTHORIZATIONCOUNTEXCEEDED.toString();
        }
    }

    /**
     * This is a implementation class for ORDERCOMPLETEDORVOIDEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERCOMPLETEDORVOIDED")
    private static class ORDERCOMPLETEDORVOIDEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ORDERCOMPLETEDORVOIDED oRDERCOMPLETEDORVOIDED;

        ORDERCOMPLETEDORVOIDEDCase(ORDERCOMPLETEDORVOIDED oRDERCOMPLETEDORVOIDED) {
            this.oRDERCOMPLETEDORVOIDED = oRDERCOMPLETEDORVOIDED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERCOMPLETEDORVOIDED(this.oRDERCOMPLETEDORVOIDED);
        }

        @JsonCreator
        private ORDERCOMPLETEDORVOIDEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERCOMPLETEDORVOIDED = ApiHelper.deserialize(jsonNode,
                ORDERCOMPLETEDORVOIDED.class);
        }

        @Override
        public String toString() {
            return oRDERCOMPLETEDORVOIDED.toString();
        }
    }

    /**
     * This is a implementation class for ORDEREXPIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDEREXPIRED")
    private static class ORDEREXPIREDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ORDEREXPIRED oRDEREXPIRED;

        ORDEREXPIREDCase(ORDEREXPIRED oRDEREXPIRED) {
            this.oRDEREXPIRED = oRDEREXPIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDEREXPIRED(this.oRDEREXPIRED);
        }

        @JsonCreator
        private ORDEREXPIREDCase(JsonNode jsonNode) throws IOException {
            this.oRDEREXPIRED = ApiHelper.deserialize(jsonNode,
                ORDEREXPIRED.class);
        }

        @Override
        public String toString() {
            return oRDEREXPIRED.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPICKUPADDRESSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPICKUPADDRESS")
    private static class INVALIDPICKUPADDRESSCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private INVALIDPICKUPADDRESS iNVALIDPICKUPADDRESS;

        INVALIDPICKUPADDRESSCase(INVALIDPICKUPADDRESS iNVALIDPICKUPADDRESS) {
            this.iNVALIDPICKUPADDRESS = iNVALIDPICKUPADDRESS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPICKUPADDRESS(this.iNVALIDPICKUPADDRESS);
        }

        @JsonCreator
        private INVALIDPICKUPADDRESSCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPICKUPADDRESS = ApiHelper.deserialize(jsonNode,
                INVALIDPICKUPADDRESS.class);
        }

        @Override
        public String toString() {
            return iNVALIDPICKUPADDRESS.toString();
        }
    }

    /**
     * This is a implementation class for SHIPPINGADDRESSINVALIDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SHIPPINGADDRESSINVALIDRESULT")
    private static class SHIPPINGADDRESSINVALIDRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private SHIPPINGADDRESSINVALIDRESULT sHIPPINGADDRESSINVALIDRESULT;

        SHIPPINGADDRESSINVALIDRESULTCase(SHIPPINGADDRESSINVALIDRESULT sHIPPINGADDRESSINVALIDRESULT) {
            this.sHIPPINGADDRESSINVALIDRESULT = sHIPPINGADDRESSINVALIDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sHIPPINGADDRESSINVALIDRESULT(this.sHIPPINGADDRESSINVALIDRESULT);
        }

        @JsonCreator
        private SHIPPINGADDRESSINVALIDRESULTCase(JsonNode jsonNode) throws IOException {
            this.sHIPPINGADDRESSINVALIDRESULT = ApiHelper.deserialize(jsonNode,
                SHIPPINGADDRESSINVALIDRESULT.class);
        }

        @Override
        public String toString() {
            return sHIPPINGADDRESSINVALIDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTTYPENOTSUPPORTEDFORINTENTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTTYPENOTSUPPORTEDFORINTENT")
    private static class PAYMENTTYPENOTSUPPORTEDFORINTENTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYMENTTYPENOTSUPPORTEDFORINTENT pAYMENTTYPENOTSUPPORTEDFORINTENT;

        PAYMENTTYPENOTSUPPORTEDFORINTENTCase(PAYMENTTYPENOTSUPPORTEDFORINTENT pAYMENTTYPENOTSUPPORTEDFORINTENT) {
            this.pAYMENTTYPENOTSUPPORTEDFORINTENT = pAYMENTTYPENOTSUPPORTEDFORINTENT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTTYPENOTSUPPORTEDFORINTENT(this.pAYMENTTYPENOTSUPPORTEDFORINTENT);
        }

        @JsonCreator
        private PAYMENTTYPENOTSUPPORTEDFORINTENTCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTTYPENOTSUPPORTEDFORINTENT = ApiHelper.deserialize(jsonNode,
                PAYMENTTYPENOTSUPPORTEDFORINTENT.class);
        }

        @Override
        public String toString() {
            return pAYMENTTYPENOTSUPPORTEDFORINTENT.toString();
        }
    }

    /**
     * This is a implementation class for BILLINGAGREEMENTIDMISMATCHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "BILLINGAGREEMENTIDMISMATCH")
    private static class BILLINGAGREEMENTIDMISMATCHCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private BILLINGAGREEMENTIDMISMATCH bILLINGAGREEMENTIDMISMATCH;

        BILLINGAGREEMENTIDMISMATCHCase(BILLINGAGREEMENTIDMISMATCH bILLINGAGREEMENTIDMISMATCH) {
            this.bILLINGAGREEMENTIDMISMATCH = bILLINGAGREEMENTIDMISMATCH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.bILLINGAGREEMENTIDMISMATCH(this.bILLINGAGREEMENTIDMISMATCH);
        }

        @JsonCreator
        private BILLINGAGREEMENTIDMISMATCHCase(JsonNode jsonNode) throws IOException {
            this.bILLINGAGREEMENTIDMISMATCH = ApiHelper.deserialize(jsonNode,
                BILLINGAGREEMENTIDMISMATCH.class);
        }

        @Override
        public String toString() {
            return bILLINGAGREEMENTIDMISMATCH.toString();
        }
    }

    /**
     * This is a implementation class for PREFERREDPAYMENTSOURCEMISMATCHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PREFERREDPAYMENTSOURCEMISMATCH")
    private static class PREFERREDPAYMENTSOURCEMISMATCHCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PREFERREDPAYMENTSOURCEMISMATCH pREFERREDPAYMENTSOURCEMISMATCH;

        PREFERREDPAYMENTSOURCEMISMATCHCase(PREFERREDPAYMENTSOURCEMISMATCH pREFERREDPAYMENTSOURCEMISMATCH) {
            this.pREFERREDPAYMENTSOURCEMISMATCH = pREFERREDPAYMENTSOURCEMISMATCH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pREFERREDPAYMENTSOURCEMISMATCH(this.pREFERREDPAYMENTSOURCEMISMATCH);
        }

        @JsonCreator
        private PREFERREDPAYMENTSOURCEMISMATCHCase(JsonNode jsonNode) throws IOException {
            this.pREFERREDPAYMENTSOURCEMISMATCH = ApiHelper.deserialize(jsonNode,
                PREFERREDPAYMENTSOURCEMISMATCH.class);
        }

        @Override
        public String toString() {
            return pREFERREDPAYMENTSOURCEMISMATCH.toString();
        }
    }

    /**
     * This is a implementation class for INCOMPATIBLEPARAMETERVALUERESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INCOMPATIBLEPARAMETERVALUERESULT")
    private static class INCOMPATIBLEPARAMETERVALUERESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private INCOMPATIBLEPARAMETERVALUERESULT iNCOMPATIBLEPARAMETERVALUERESULT;

        INCOMPATIBLEPARAMETERVALUERESULTCase(INCOMPATIBLEPARAMETERVALUERESULT iNCOMPATIBLEPARAMETERVALUERESULT) {
            this.iNCOMPATIBLEPARAMETERVALUERESULT = iNCOMPATIBLEPARAMETERVALUERESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNCOMPATIBLEPARAMETERVALUERESULT(this.iNCOMPATIBLEPARAMETERVALUERESULT);
        }

        @JsonCreator
        private INCOMPATIBLEPARAMETERVALUERESULTCase(JsonNode jsonNode) throws IOException {
            this.iNCOMPATIBLEPARAMETERVALUERESULT = ApiHelper.deserialize(jsonNode,
                INCOMPATIBLEPARAMETERVALUERESULT.class);
        }

        @Override
        public String toString() {
            return iNCOMPATIBLEPARAMETERVALUERESULT.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPREVIOUSTRANSACTIONREFERENCEERROR")
    private static class INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private INVALIDPREVIOUSTRANSACTIONREFERENCEERROR iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR;

        INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase(INVALIDPREVIOUSTRANSACTIONREFERENCEERROR iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR) {
            this.iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR = iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR(this.iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR);
        }

        @JsonCreator
        private INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR = ApiHelper.deserialize(jsonNode,
                INVALIDPREVIOUSTRANSACTIONREFERENCEERROR.class);
        }

        @Override
        public String toString() {
            return iNVALIDPREVIOUSTRANSACTIONREFERENCEERROR.toString();
        }
    }

    /**
     * This is a implementation class for CHARGEBACKONPREVIOUSTRANSACTIONERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CHARGEBACKONPREVIOUSTRANSACTIONERROR")
    private static class CHARGEBACKONPREVIOUSTRANSACTIONERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private CHARGEBACKONPREVIOUSTRANSACTIONERROR cHARGEBACKONPREVIOUSTRANSACTIONERROR;

        CHARGEBACKONPREVIOUSTRANSACTIONERRORCase(CHARGEBACKONPREVIOUSTRANSACTIONERROR cHARGEBACKONPREVIOUSTRANSACTIONERROR) {
            this.cHARGEBACKONPREVIOUSTRANSACTIONERROR = cHARGEBACKONPREVIOUSTRANSACTIONERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cHARGEBACKONPREVIOUSTRANSACTIONERROR(this.cHARGEBACKONPREVIOUSTRANSACTIONERROR);
        }

        @JsonCreator
        private CHARGEBACKONPREVIOUSTRANSACTIONERRORCase(JsonNode jsonNode) throws IOException {
            this.cHARGEBACKONPREVIOUSTRANSACTIONERROR = ApiHelper.deserialize(jsonNode,
                CHARGEBACKONPREVIOUSTRANSACTIONERROR.class);
        }

        @Override
        public String toString() {
            return cHARGEBACKONPREVIOUSTRANSACTIONERROR.toString();
        }
    }

    /**
     * This is a implementation class for PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR")
    private static class PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR;

        PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase(PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR) {
            this.pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR = pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR(this.pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR);
        }

        @JsonCreator
        private PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase(JsonNode jsonNode) throws IOException {
            this.pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR = ApiHelper.deserialize(jsonNode,
                PREVIOUSTRANSACTIONREFERENCEVOIDEDERROR.class);
        }

        @Override
        public String toString() {
            return pREVIOUSTRANSACTIONREFERENCEVOIDEDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYMENTSOURCEMISMATCHERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYMENTSOURCEMISMATCHERROR")
    private static class PAYMENTSOURCEMISMATCHERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYMENTSOURCEMISMATCHERROR pAYMENTSOURCEMISMATCHERROR;

        PAYMENTSOURCEMISMATCHERRORCase(PAYMENTSOURCEMISMATCHERROR pAYMENTSOURCEMISMATCHERROR) {
            this.pAYMENTSOURCEMISMATCHERROR = pAYMENTSOURCEMISMATCHERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYMENTSOURCEMISMATCHERROR(this.pAYMENTSOURCEMISMATCHERROR);
        }

        @JsonCreator
        private PAYMENTSOURCEMISMATCHERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYMENTSOURCEMISMATCHERROR = ApiHelper.deserialize(jsonNode,
                PAYMENTSOURCEMISMATCHERROR.class);
        }

        @Override
        public String toString() {
            return pAYMENTSOURCEMISMATCHERROR.toString();
        }
    }

    /**
     * This is a implementation class for MERCHANTINITIATEDWITHSECURITYCODEERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MERCHANTINITIATEDWITHSECURITYCODEERROR")
    private static class MERCHANTINITIATEDWITHSECURITYCODEERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MERCHANTINITIATEDWITHSECURITYCODEERROR mERCHANTINITIATEDWITHSECURITYCODEERROR;

        MERCHANTINITIATEDWITHSECURITYCODEERRORCase(MERCHANTINITIATEDWITHSECURITYCODEERROR mERCHANTINITIATEDWITHSECURITYCODEERROR) {
            this.mERCHANTINITIATEDWITHSECURITYCODEERROR = mERCHANTINITIATEDWITHSECURITYCODEERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mERCHANTINITIATEDWITHSECURITYCODEERROR(this.mERCHANTINITIATEDWITHSECURITYCODEERROR);
        }

        @JsonCreator
        private MERCHANTINITIATEDWITHSECURITYCODEERRORCase(JsonNode jsonNode) throws IOException {
            this.mERCHANTINITIATEDWITHSECURITYCODEERROR = ApiHelper.deserialize(jsonNode,
                MERCHANTINITIATEDWITHSECURITYCODEERROR.class);
        }

        @Override
        public String toString() {
            return mERCHANTINITIATEDWITHSECURITYCODEERROR.toString();
        }
    }

    /**
     * This is a implementation class for MERCHANTAUTHRESULTSERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MERCHANTAUTHRESULTSERROR")
    private static class MERCHANTAUTHRESULTSERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MERCHANTAUTHRESULTSERROR mERCHANTAUTHRESULTSERROR;

        MERCHANTAUTHRESULTSERRORCase(MERCHANTAUTHRESULTSERROR mERCHANTAUTHRESULTSERROR) {
            this.mERCHANTAUTHRESULTSERROR = mERCHANTAUTHRESULTSERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mERCHANTAUTHRESULTSERROR(this.mERCHANTAUTHRESULTSERROR);
        }

        @JsonCreator
        private MERCHANTAUTHRESULTSERRORCase(JsonNode jsonNode) throws IOException {
            this.mERCHANTAUTHRESULTSERROR = ApiHelper.deserialize(jsonNode,
                MERCHANTAUTHRESULTSERROR.class);
        }

        @Override
        public String toString() {
            return mERCHANTAUTHRESULTSERROR.toString();
        }
    }

    /**
     * This is a implementation class for MULTIPURCHASEUNITSERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MULTIPURCHASEUNITSERROR")
    private static class MULTIPURCHASEUNITSERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MULTIPURCHASEUNITSERROR mULTIPURCHASEUNITSERROR;

        MULTIPURCHASEUNITSERRORCase(MULTIPURCHASEUNITSERROR mULTIPURCHASEUNITSERROR) {
            this.mULTIPURCHASEUNITSERROR = mULTIPURCHASEUNITSERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mULTIPURCHASEUNITSERROR(this.mULTIPURCHASEUNITSERROR);
        }

        @JsonCreator
        private MULTIPURCHASEUNITSERRORCase(JsonNode jsonNode) throws IOException {
            this.mULTIPURCHASEUNITSERROR = ApiHelper.deserialize(jsonNode,
                MULTIPURCHASEUNITSERROR.class);
        }

        @Override
        public String toString() {
            return mULTIPURCHASEUNITSERROR.toString();
        }
    }

    /**
     * This is a implementation class for RETURNURLREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "RETURNURLREQUIREDERROR")
    private static class RETURNURLREQUIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private RETURNURLREQUIREDERROR rETURNURLREQUIREDERROR;

        RETURNURLREQUIREDERRORCase(RETURNURLREQUIREDERROR rETURNURLREQUIREDERROR) {
            this.rETURNURLREQUIREDERROR = rETURNURLREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rETURNURLREQUIREDERROR(this.rETURNURLREQUIREDERROR);
        }

        @JsonCreator
        private RETURNURLREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.rETURNURLREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                RETURNURLREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return rETURNURLREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for CANCELURLREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CANCELURLREQUIREDERROR")
    private static class CANCELURLREQUIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private CANCELURLREQUIREDERROR cANCELURLREQUIREDERROR;

        CANCELURLREQUIREDERRORCase(CANCELURLREQUIREDERROR cANCELURLREQUIREDERROR) {
            this.cANCELURLREQUIREDERROR = cANCELURLREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cANCELURLREQUIREDERROR(this.cANCELURLREQUIREDERROR);
        }

        @JsonCreator
        private CANCELURLREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.cANCELURLREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                CANCELURLREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return cANCELURLREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYERACTIONREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYERACTIONREQUIRED")
    private static class PAYERACTIONREQUIREDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYERACTIONREQUIRED pAYERACTIONREQUIRED;

        PAYERACTIONREQUIREDCase(PAYERACTIONREQUIRED pAYERACTIONREQUIRED) {
            this.pAYERACTIONREQUIRED = pAYERACTIONREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYERACTIONREQUIRED(this.pAYERACTIONREQUIRED);
        }

        @JsonCreator
        private PAYERACTIONREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.pAYERACTIONREQUIRED = ApiHelper.deserialize(jsonNode,
                PAYERACTIONREQUIRED.class);
        }

        @Override
        public String toString() {
            return pAYERACTIONREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for APPLEPAYAMOUNTMISMATCHRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "APPLEPAYAMOUNTMISMATCHRESULT")
    private static class APPLEPAYAMOUNTMISMATCHRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private APPLEPAYAMOUNTMISMATCHRESULT aPPLEPAYAMOUNTMISMATCHRESULT;

        APPLEPAYAMOUNTMISMATCHRESULTCase(APPLEPAYAMOUNTMISMATCHRESULT aPPLEPAYAMOUNTMISMATCHRESULT) {
            this.aPPLEPAYAMOUNTMISMATCHRESULT = aPPLEPAYAMOUNTMISMATCHRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aPPLEPAYAMOUNTMISMATCHRESULT(this.aPPLEPAYAMOUNTMISMATCHRESULT);
        }

        @JsonCreator
        private APPLEPAYAMOUNTMISMATCHRESULTCase(JsonNode jsonNode) throws IOException {
            this.aPPLEPAYAMOUNTMISMATCHRESULT = ApiHelper.deserialize(jsonNode,
                APPLEPAYAMOUNTMISMATCHRESULT.class);
        }

        @Override
        public String toString() {
            return aPPLEPAYAMOUNTMISMATCHRESULT.toString();
        }
    }

    /**
     * This is a implementation class for CARDNUMBERREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDNUMBERREQUIREDERROR")
    private static class CARDNUMBERREQUIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private CARDNUMBERREQUIREDERROR cARDNUMBERREQUIREDERROR;

        CARDNUMBERREQUIREDERRORCase(CARDNUMBERREQUIREDERROR cARDNUMBERREQUIREDERROR) {
            this.cARDNUMBERREQUIREDERROR = cARDNUMBERREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDNUMBERREQUIREDERROR(this.cARDNUMBERREQUIREDERROR);
        }

        @JsonCreator
        private CARDNUMBERREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.cARDNUMBERREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                CARDNUMBERREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return cARDNUMBERREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for CARDEXPIRYREQUIREDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CARDEXPIRYREQUIREDERROR")
    private static class CARDEXPIRYREQUIREDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private CARDEXPIRYREQUIREDERROR cARDEXPIRYREQUIREDERROR;

        CARDEXPIRYREQUIREDERRORCase(CARDEXPIRYREQUIREDERROR cARDEXPIRYREQUIREDERROR) {
            this.cARDEXPIRYREQUIREDERROR = cARDEXPIRYREQUIREDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cARDEXPIRYREQUIREDERROR(this.cARDEXPIRYREQUIREDERROR);
        }

        @JsonCreator
        private CARDEXPIRYREQUIREDERRORCase(JsonNode jsonNode) throws IOException {
            this.cARDEXPIRYREQUIREDERROR = ApiHelper.deserialize(jsonNode,
                CARDEXPIRYREQUIREDERROR.class);
        }

        @Override
        public String toString() {
            return cARDEXPIRYREQUIREDERROR.toString();
        }
    }

    /**
     * This is a implementation class for VAULTINSTRUCTIONREQUIREDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "VAULTINSTRUCTIONREQUIREDRESULT")
    private static class VAULTINSTRUCTIONREQUIREDRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private VAULTINSTRUCTIONREQUIREDRESULT vAULTINSTRUCTIONREQUIREDRESULT;

        VAULTINSTRUCTIONREQUIREDRESULTCase(VAULTINSTRUCTIONREQUIREDRESULT vAULTINSTRUCTIONREQUIREDRESULT) {
            this.vAULTINSTRUCTIONREQUIREDRESULT = vAULTINSTRUCTIONREQUIREDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.vAULTINSTRUCTIONREQUIREDRESULT(this.vAULTINSTRUCTIONREQUIREDRESULT);
        }

        @JsonCreator
        private VAULTINSTRUCTIONREQUIREDRESULTCase(JsonNode jsonNode) throws IOException {
            this.vAULTINSTRUCTIONREQUIREDRESULT = ApiHelper.deserialize(jsonNode,
                VAULTINSTRUCTIONREQUIREDRESULT.class);
        }

        @Override
        public String toString() {
            return vAULTINSTRUCTIONREQUIREDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT")
    private static class MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT;

        MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase(MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT) {
            this.mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT = mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT(this.mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT);
        }

        @JsonCreator
        private MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase(JsonNode jsonNode) throws IOException {
            this.mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT = ApiHelper.deserialize(jsonNode,
                MISMATCHEDVAULTIDTOPAYMENTSOURCERESULT.class);
        }

        @Override
        public String toString() {
            return mISMATCHEDVAULTIDTOPAYMENTSOURCERESULT.toString();
        }
    }

    /**
     * This is a implementation class for ORDERCANNOTBESAVEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERCANNOTBESAVED")
    private static class ORDERCANNOTBESAVEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private ORDERCANNOTBESAVED oRDERCANNOTBESAVED;

        ORDERCANNOTBESAVEDCase(ORDERCANNOTBESAVED oRDERCANNOTBESAVED) {
            this.oRDERCANNOTBESAVED = oRDERCANNOTBESAVED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERCANNOTBESAVED(this.oRDERCANNOTBESAVED);
        }

        @JsonCreator
        private ORDERCANNOTBESAVEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERCANNOTBESAVED = ApiHelper.deserialize(jsonNode,
                ORDERCANNOTBESAVED.class);
        }

        @Override
        public String toString() {
            return oRDERCANNOTBESAVED.toString();
        }
    }

    /**
     * This is a implementation class for SAVEORDERNOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SAVEORDERNOTSUPPORTED")
    private static class SAVEORDERNOTSUPPORTEDCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private SAVEORDERNOTSUPPORTED sAVEORDERNOTSUPPORTED;

        SAVEORDERNOTSUPPORTEDCase(SAVEORDERNOTSUPPORTED sAVEORDERNOTSUPPORTED) {
            this.sAVEORDERNOTSUPPORTED = sAVEORDERNOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sAVEORDERNOTSUPPORTED(this.sAVEORDERNOTSUPPORTED);
        }

        @JsonCreator
        private SAVEORDERNOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.sAVEORDERNOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                SAVEORDERNOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return sAVEORDERNOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for NOTELIGIBLEFORPNREFPROCESSINGRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTELIGIBLEFORPNREFPROCESSINGRESULT")
    private static class NOTELIGIBLEFORPNREFPROCESSINGRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private NOTELIGIBLEFORPNREFPROCESSINGRESULT nOTELIGIBLEFORPNREFPROCESSINGRESULT;

        NOTELIGIBLEFORPNREFPROCESSINGRESULTCase(NOTELIGIBLEFORPNREFPROCESSINGRESULT nOTELIGIBLEFORPNREFPROCESSINGRESULT) {
            this.nOTELIGIBLEFORPNREFPROCESSINGRESULT = nOTELIGIBLEFORPNREFPROCESSINGRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTELIGIBLEFORPNREFPROCESSINGRESULT(this.nOTELIGIBLEFORPNREFPROCESSINGRESULT);
        }

        @JsonCreator
        private NOTELIGIBLEFORPNREFPROCESSINGRESULTCase(JsonNode jsonNode) throws IOException {
            this.nOTELIGIBLEFORPNREFPROCESSINGRESULT = ApiHelper.deserialize(jsonNode,
                NOTELIGIBLEFORPNREFPROCESSINGRESULT.class);
        }

        @Override
        public String toString() {
            return nOTELIGIBLEFORPNREFPROCESSINGRESULT.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALIDERRORCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALIDERROR")
    private static class PAYPALIDERRORCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYPALIDERROR pAYPALIDERROR;

        PAYPALIDERRORCase(PAYPALIDERROR pAYPALIDERROR) {
            this.pAYPALIDERROR = pAYPALIDERROR;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALIDERROR(this.pAYPALIDERROR);
        }

        @JsonCreator
        private PAYPALIDERRORCase(JsonNode jsonNode) throws IOException {
            this.pAYPALIDERROR = ApiHelper.deserialize(jsonNode,
                PAYPALIDERROR.class);
        }

        @Override
        public String toString() {
            return pAYPALIDERROR.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALTRANSACTIONIDNOTFOUNDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALTRANSACTIONIDNOTFOUNDRESULT")
    private static class PAYPALTRANSACTIONIDNOTFOUNDRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PAYPALTRANSACTIONIDNOTFOUNDRESULT pAYPALTRANSACTIONIDNOTFOUNDRESULT;

        PAYPALTRANSACTIONIDNOTFOUNDRESULTCase(PAYPALTRANSACTIONIDNOTFOUNDRESULT pAYPALTRANSACTIONIDNOTFOUNDRESULT) {
            this.pAYPALTRANSACTIONIDNOTFOUNDRESULT = pAYPALTRANSACTIONIDNOTFOUNDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALTRANSACTIONIDNOTFOUNDRESULT(this.pAYPALTRANSACTIONIDNOTFOUNDRESULT);
        }

        @JsonCreator
        private PAYPALTRANSACTIONIDNOTFOUNDRESULTCase(JsonNode jsonNode) throws IOException {
            this.pAYPALTRANSACTIONIDNOTFOUNDRESULT = ApiHelper.deserialize(jsonNode,
                PAYPALTRANSACTIONIDNOTFOUNDRESULT.class);
        }

        @Override
        public String toString() {
            return pAYPALTRANSACTIONIDNOTFOUNDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for PNREFNOTFOUNDRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PNREFNOTFOUNDRESULT")
    private static class PNREFNOTFOUNDRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private PNREFNOTFOUNDRESULT pNREFNOTFOUNDRESULT;

        PNREFNOTFOUNDRESULTCase(PNREFNOTFOUNDRESULT pNREFNOTFOUNDRESULT) {
            this.pNREFNOTFOUNDRESULT = pNREFNOTFOUNDRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pNREFNOTFOUNDRESULT(this.pNREFNOTFOUNDRESULT);
        }

        @JsonCreator
        private PNREFNOTFOUNDRESULTCase(JsonNode jsonNode) throws IOException {
            this.pNREFNOTFOUNDRESULT = ApiHelper.deserialize(jsonNode,
                PNREFNOTFOUNDRESULT.class);
        }

        @Override
        public String toString() {
            return pNREFNOTFOUNDRESULT.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSECURITYCODELENGTHRESULTCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSECURITYCODELENGTHRESULT")
    private static class INVALIDSECURITYCODELENGTHRESULTCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private INVALIDSECURITYCODELENGTHRESULT iNVALIDSECURITYCODELENGTHRESULT;

        INVALIDSECURITYCODELENGTHRESULTCase(INVALIDSECURITYCODELENGTHRESULT iNVALIDSECURITYCODELENGTHRESULT) {
            this.iNVALIDSECURITYCODELENGTHRESULT = iNVALIDSECURITYCODELENGTHRESULT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSECURITYCODELENGTHRESULT(this.iNVALIDSECURITYCODELENGTHRESULT);
        }

        @JsonCreator
        private INVALIDSECURITYCODELENGTHRESULTCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSECURITYCODELENGTHRESULT = ApiHelper.deserialize(jsonNode,
                INVALIDSECURITYCODELENGTHRESULT.class);
        }

        @Override
        public String toString() {
            return iNVALIDSECURITYCODELENGTHRESULT.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGPAYMENTPARAMETERCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGPAYMENTPARAMETER")
    private static class MISSINGPAYMENTPARAMETERCase extends OrdersAuthorize422IssuesItems {

        @JsonValue
        private MISSINGPAYMENTPARAMETER mISSINGPAYMENTPARAMETER;

        MISSINGPAYMENTPARAMETERCase(MISSINGPAYMENTPARAMETER mISSINGPAYMENTPARAMETER) {
            this.mISSINGPAYMENTPARAMETER = mISSINGPAYMENTPARAMETER;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGPAYMENTPARAMETER(this.mISSINGPAYMENTPARAMETER);
        }

        @JsonCreator
        private MISSINGPAYMENTPARAMETERCase(JsonNode jsonNode) throws IOException {
            this.mISSINGPAYMENTPARAMETER = ApiHelper.deserialize(jsonNode,
                MISSINGPAYMENTPARAMETER.class);
        }

        @Override
        public String toString() {
            return mISSINGPAYMENTPARAMETER.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersAuthorize422IssuesItems.
     */
    protected static class OrdersAuthorize422IssuesItemsDeserializer
            extends JsonDeserializer<OrdersAuthorize422IssuesItems> {

        @Override
        public OrdersAuthorize422IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(ACTIONDOESNOTMATCHINTENTCase.class,
                    AGREEMENTALREADYCANCELLEDERRORCase.class,
                    BILLINGAGREEMENTNOTFOUNDERRORCase.class,
                    MISSINGPREVIOUSREFERENCERESULTCase.class, MISSINGCRYPTOGRAMRESULTCase.class,
                    CARDBRANDNOTSUPPORTEDCase.class, DECLINEDDUETORELATEDTXNCase.class,
                    DOMESTICTRANSACTIONREQUIREDERRORCase.class, DUPLICATEINVOICEIDERRORCase.class,
                    ORDERNOTAPPROVEDCase.class, MAXNUMBEROFPAYMENTATTEMPTSEXCEEDEDERRORCase.class,
                    PAYEEBLOCKEDTRANSACTIONERRORCase.class, PAYEEFXRATEIDEXPIREDERRORCase.class,
                    UNSUPPORTEDINTENTFORPAYMENTSOURCECase.class,
                    PAYERACCOUNTLOCKEDORCLOSEDERRORCase.class,
                    PAYERACCOUNTRESTRICTEDERRORCase.class, PAYERCANNOTPAYERRORCase.class,
                    PAYPALTRANSACTIONIDEXPIREDCase.class, PNREFEXPIREDCase.class,
                    REFERENCEDCARDEXPIREDCase.class, TOKENEXPIREDRESULTCase.class,
                    TOKENIDNOTFOUNDCase.class, TRANSACTIONLIMITEXCEEDEDERRORCase.class,
                    TRANSACTIONRECEIVINGLIMITEXCEEDEDERRORCase.class,
                    TRANSACTIONREFUSEDERRORCase.class, ORDERALREADYAUTHORIZEDERRORCase.class,
                    AUTHCAPTURENOTENABLEDERRORCase.class, AMOUNTCANNOTBESPECIFIEDCase.class,
                    AUTHORIZATIONAMOUNTEXCEEDEDCase.class, AUTHORIZATIONCURRENCYMISMATCHCase.class,
                    MAXAUTHORIZATIONCOUNTEXCEEDEDCase.class, ORDERCOMPLETEDORVOIDEDCase.class,
                    ORDEREXPIREDCase.class, INVALIDPICKUPADDRESSCase.class,
                    SHIPPINGADDRESSINVALIDRESULTCase.class,
                    PAYMENTTYPENOTSUPPORTEDFORINTENTCase.class,
                    BILLINGAGREEMENTIDMISMATCHCase.class, PREFERREDPAYMENTSOURCEMISMATCHCase.class,
                    INCOMPATIBLEPARAMETERVALUERESULTCase.class,
                    INVALIDPREVIOUSTRANSACTIONREFERENCEERRORCase.class,
                    CHARGEBACKONPREVIOUSTRANSACTIONERRORCase.class,
                    PREVIOUSTRANSACTIONREFERENCEVOIDEDERRORCase.class,
                    PAYMENTSOURCEMISMATCHERRORCase.class,
                    MERCHANTINITIATEDWITHSECURITYCODEERRORCase.class,
                    MERCHANTAUTHRESULTSERRORCase.class, MULTIPURCHASEUNITSERRORCase.class,
                    RETURNURLREQUIREDERRORCase.class, CANCELURLREQUIREDERRORCase.class,
                    PAYERACTIONREQUIREDCase.class, APPLEPAYAMOUNTMISMATCHRESULTCase.class,
                    CARDNUMBERREQUIREDERRORCase.class, CARDEXPIRYREQUIREDERRORCase.class,
                    VAULTINSTRUCTIONREQUIREDRESULTCase.class,
                    MISMATCHEDVAULTIDTOPAYMENTSOURCERESULTCase.class, ORDERCANNOTBESAVEDCase.class,
                    SAVEORDERNOTSUPPORTEDCase.class, NOTELIGIBLEFORPNREFPROCESSINGRESULTCase.class,
                    PAYPALIDERRORCase.class, PAYPALTRANSACTIONIDNOTFOUNDRESULTCase.class,
                    PNREFNOTFOUNDRESULTCase.class, INVALIDSECURITYCODELENGTHRESULTCase.class,
                    MISSINGPAYMENTPARAMETERCase.class), false);
        }
    }

}
