/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.paypal.sandbox.apim.models.containers.Badrequest400errorresponseissuesItems;
import java.util.List;

/**
 * This is a model class for BadRequest400ErrorResponse type.
 */
public class BadRequest400ErrorResponse {
    private List<Badrequest400errorresponseissuesItems> issues;

    /**
     * Default constructor.
     */
    public BadRequest400ErrorResponse() {
    }

    /**
     * Initialization constructor.
     * @param  issues  List of Badrequest400errorresponseissuesItems value for issues.
     */
    public BadRequest400ErrorResponse(
            List<Badrequest400errorresponseissuesItems> issues) {
        this.issues = issues;
    }

    /**
     * Getter for Issues.
     * @return Returns the List of Badrequest400errorresponseissuesItems
     */
    @JsonGetter("issues")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Badrequest400errorresponseissuesItems> getIssues() {
        return issues;
    }

    /**
     * Setter for Issues.
     * @param issues Value for List of Badrequest400errorresponseissuesItems
     */
    @JsonSetter("issues")
    public void setIssues(List<Badrequest400errorresponseissuesItems> issues) {
        this.issues = issues;
    }

    /**
     * Converts this BadRequest400ErrorResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BadRequest400ErrorResponse [" + "issues=" + issues + "]";
    }

    /**
     * Builds a new {@link BadRequest400ErrorResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BadRequest400ErrorResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .issues(getIssues());
        return builder;
    }

    /**
     * Class to build instances of {@link BadRequest400ErrorResponse}.
     */
    public static class Builder {
        private List<Badrequest400errorresponseissuesItems> issues;



        /**
         * Setter for issues.
         * @param  issues  List of Badrequest400errorresponseissuesItems value for issues.
         * @return Builder
         */
        public Builder issues(List<Badrequest400errorresponseissuesItems> issues) {
            this.issues = issues;
            return this;
        }

        /**
         * Builds a new {@link BadRequest400ErrorResponse} object using the set fields.
         * @return {@link BadRequest400ErrorResponse}
         */
        public BadRequest400ErrorResponse build() {
            return new BadRequest400ErrorResponse(issues);
        }
    }
}
