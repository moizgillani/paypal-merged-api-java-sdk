/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * PaypalRequestIdRequiredDescriptionEnum to be used.
 */
public enum PaypalRequestIdRequiredDescriptionEnum {
    ENUM_A_PAYPALREQUESTID_IS_REQUIRED_IF_YOU_ARE_TRYING_TO_PROCESS_PAYMENT_FOR_AN_ORDER_PLEASE_SPECIFY_A_PAYPALREQUESTID_OR_CREATE_THE_ORDER_WITHOUT_A_PAYMENT_SOURCE_SPECIFIED;


    private static TreeMap<String, PaypalRequestIdRequiredDescriptionEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        ENUM_A_PAYPALREQUESTID_IS_REQUIRED_IF_YOU_ARE_TRYING_TO_PROCESS_PAYMENT_FOR_AN_ORDER_PLEASE_SPECIFY_A_PAYPALREQUESTID_OR_CREATE_THE_ORDER_WITHOUT_A_PAYMENT_SOURCE_SPECIFIED.value = "A PayPal-Request-Id is required if you are trying to process payment for an Order. Please specify a PayPal-Request-Id or Create the Order without a 'payment_source' specified.";

        valueMap.put("A PayPal-Request-Id is required if you are trying to process payment for an Order. Please specify a PayPal-Request-Id or Create the Order without a 'payment_source' specified.", ENUM_A_PAYPALREQUESTID_IS_REQUIRED_IF_YOU_ARE_TRYING_TO_PROCESS_PAYMENT_FOR_AN_ORDER_PLEASE_SPECIFY_A_PAYPALREQUESTID_OR_CREATE_THE_ORDER_WITHOUT_A_PAYMENT_SOURCE_SPECIFIED);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static PaypalRequestIdRequiredDescriptionEnum constructFromString(String toConvert) throws IOException {
        PaypalRequestIdRequiredDescriptionEnum enumValue = fromString(toConvert);
        if (enumValue == null)
        {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static PaypalRequestIdRequiredDescriptionEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of PaypalRequestIdRequiredDescriptionEnum values to list of string values.
     * @param toConvert The list of PaypalRequestIdRequiredDescriptionEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<PaypalRequestIdRequiredDescriptionEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (PaypalRequestIdRequiredDescriptionEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 