/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.INVALIDARRAYMAXITEMS;
import com.paypal.sandbox.apim.models.INVALIDARRAYMINITEMS;
import com.paypal.sandbox.apim.models.INVALIDCOUNTRYCODE;
import com.paypal.sandbox.apim.models.INVALIDPARAMETERSYNTAX;
import com.paypal.sandbox.apim.models.INVALIDPARAMETERVALUE;
import com.paypal.sandbox.apim.models.INVALIDSTRINGLENGTH;
import com.paypal.sandbox.apim.models.MALFORMEDREQUESTJSON;
import com.paypal.sandbox.apim.models.MISSINGREQUIREDPARAMETER;
import com.paypal.sandbox.apim.models.NOTSUPPORTED;
import com.paypal.sandbox.apim.models.PAYPALREQUESTIDREQUIRED;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = BadRequestIssue.BadRequestIssueDeserializer.class)
public abstract class BadRequestIssue {
    
    /**
     * This is INVALID_ARRAY_MAX_ITEMS case.
     * @param iNVALIDARRAYMAXITEMS INVALIDARRAYMAXITEMS value for iNVALIDARRAYMAXITEMS.
     * @return The INVALIDARRAYMAXITEMSCase object.
     */
    public static BadRequestIssue fromINVALIDARRAYMAXITEMS(
            INVALIDARRAYMAXITEMS iNVALIDARRAYMAXITEMS) {
        return iNVALIDARRAYMAXITEMS == null ? null : new INVALIDARRAYMAXITEMSCase(iNVALIDARRAYMAXITEMS);
    }

    /**
     * This is INVALID_ARRAY_MIN_ITEMS case.
     * @param iNVALIDARRAYMINITEMS INVALIDARRAYMINITEMS value for iNVALIDARRAYMINITEMS.
     * @return The INVALIDARRAYMINITEMSCase object.
     */
    public static BadRequestIssue fromINVALIDARRAYMINITEMS(
            INVALIDARRAYMINITEMS iNVALIDARRAYMINITEMS) {
        return iNVALIDARRAYMINITEMS == null ? null : new INVALIDARRAYMINITEMSCase(iNVALIDARRAYMINITEMS);
    }

    /**
     * This is INVALID_COUNTRY_CODE case.
     * @param iNVALIDCOUNTRYCODE INVALIDCOUNTRYCODE value for iNVALIDCOUNTRYCODE.
     * @return The INVALIDCOUNTRYCODECase object.
     */
    public static BadRequestIssue fromINVALIDCOUNTRYCODE(INVALIDCOUNTRYCODE iNVALIDCOUNTRYCODE) {
        return iNVALIDCOUNTRYCODE == null ? null : new INVALIDCOUNTRYCODECase(iNVALIDCOUNTRYCODE);
    }

    /**
     * This is INVALID_PARAMETER_SYNTAX case.
     * @param iNVALIDPARAMETERSYNTAX INVALIDPARAMETERSYNTAX value for iNVALIDPARAMETERSYNTAX.
     * @return The INVALIDPARAMETERSYNTAXCase object.
     */
    public static BadRequestIssue fromINVALIDPARAMETERSYNTAX(
            INVALIDPARAMETERSYNTAX iNVALIDPARAMETERSYNTAX) {
        return iNVALIDPARAMETERSYNTAX == null ? null : new INVALIDPARAMETERSYNTAXCase(iNVALIDPARAMETERSYNTAX);
    }

    /**
     * This is INVALID_STRING_LENGTH case.
     * @param iNVALIDSTRINGLENGTH INVALIDSTRINGLENGTH value for iNVALIDSTRINGLENGTH.
     * @return The INVALIDSTRINGLENGTHCase object.
     */
    public static BadRequestIssue fromINVALIDSTRINGLENGTH(INVALIDSTRINGLENGTH iNVALIDSTRINGLENGTH) {
        return iNVALIDSTRINGLENGTH == null ? null : new INVALIDSTRINGLENGTHCase(iNVALIDSTRINGLENGTH);
    }

    /**
     * This is INVALID_PARAMETER_VALUE case.
     * @param iNVALIDPARAMETERVALUE INVALIDPARAMETERVALUE value for iNVALIDPARAMETERVALUE.
     * @return The INVALIDPARAMETERVALUECase object.
     */
    public static BadRequestIssue fromINVALIDPARAMETERVALUE(
            INVALIDPARAMETERVALUE iNVALIDPARAMETERVALUE) {
        return iNVALIDPARAMETERVALUE == null ? null : new INVALIDPARAMETERVALUECase(iNVALIDPARAMETERVALUE);
    }

    /**
     * This is MISSING_REQUIRED_PARAMETER case.
     * @param mISSINGREQUIREDPARAMETER MISSINGREQUIREDPARAMETER value for mISSINGREQUIREDPARAMETER.
     * @return The MISSINGREQUIREDPARAMETERCase object.
     */
    public static BadRequestIssue fromMISSINGREQUIREDPARAMETER(
            MISSINGREQUIREDPARAMETER mISSINGREQUIREDPARAMETER) {
        return mISSINGREQUIREDPARAMETER == null ? null : new MISSINGREQUIREDPARAMETERCase(mISSINGREQUIREDPARAMETER);
    }

    /**
     * This is NOT_SUPPORTED case.
     * @param nOTSUPPORTED NOTSUPPORTED value for nOTSUPPORTED.
     * @return The NOTSUPPORTEDCase object.
     */
    public static BadRequestIssue fromNOTSUPPORTED(NOTSUPPORTED nOTSUPPORTED) {
        return nOTSUPPORTED == null ? null : new NOTSUPPORTEDCase(nOTSUPPORTED);
    }

    /**
     * This is PAYPAL_REQUEST_ID_REQUIRED case.
     * @param pAYPALREQUESTIDREQUIRED PAYPALREQUESTIDREQUIRED value for pAYPALREQUESTIDREQUIRED.
     * @return The PAYPALREQUESTIDREQUIREDCase object.
     */
    public static BadRequestIssue fromPAYPALREQUESTIDREQUIRED(
            PAYPALREQUESTIDREQUIRED pAYPALREQUESTIDREQUIRED) {
        return pAYPALREQUESTIDREQUIRED == null ? null : new PAYPALREQUESTIDREQUIREDCase(pAYPALREQUESTIDREQUIRED);
    }

    /**
     * This is MALFORMED_REQUEST_JSON case.
     * @param mALFORMEDREQUESTJSON MALFORMEDREQUESTJSON value for mALFORMEDREQUESTJSON.
     * @return The MALFORMEDREQUESTJSONCase object.
     */
    public static BadRequestIssue fromMALFORMEDREQUESTJSON(
            MALFORMEDREQUESTJSON mALFORMEDREQUESTJSON) {
        return mALFORMEDREQUESTJSON == null ? null : new MALFORMEDREQUESTJSONCase(mALFORMEDREQUESTJSON);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R iNVALIDARRAYMAXITEMS(INVALIDARRAYMAXITEMS iNVALIDARRAYMAXITEMS);

        R iNVALIDARRAYMINITEMS(INVALIDARRAYMINITEMS iNVALIDARRAYMINITEMS);

        R iNVALIDCOUNTRYCODE(INVALIDCOUNTRYCODE iNVALIDCOUNTRYCODE);

        R iNVALIDPARAMETERSYNTAX(INVALIDPARAMETERSYNTAX iNVALIDPARAMETERSYNTAX);

        R iNVALIDSTRINGLENGTH(INVALIDSTRINGLENGTH iNVALIDSTRINGLENGTH);

        R iNVALIDPARAMETERVALUE(INVALIDPARAMETERVALUE iNVALIDPARAMETERVALUE);

        R mISSINGREQUIREDPARAMETER(MISSINGREQUIREDPARAMETER mISSINGREQUIREDPARAMETER);

        R nOTSUPPORTED(NOTSUPPORTED nOTSUPPORTED);

        R pAYPALREQUESTIDREQUIRED(PAYPALREQUESTIDREQUIRED pAYPALREQUESTIDREQUIRED);

        R mALFORMEDREQUESTJSON(MALFORMEDREQUESTJSON mALFORMEDREQUESTJSON);
    }

    /**
     * This is a implementation class for INVALIDARRAYMAXITEMSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDARRAYMAXITEMS")
    private static class INVALIDARRAYMAXITEMSCase extends BadRequestIssue {

        @JsonValue
        private INVALIDARRAYMAXITEMS iNVALIDARRAYMAXITEMS;

        INVALIDARRAYMAXITEMSCase(INVALIDARRAYMAXITEMS iNVALIDARRAYMAXITEMS) {
            this.iNVALIDARRAYMAXITEMS = iNVALIDARRAYMAXITEMS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDARRAYMAXITEMS(this.iNVALIDARRAYMAXITEMS);
        }

        @JsonCreator
        private INVALIDARRAYMAXITEMSCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDARRAYMAXITEMS = ApiHelper.deserialize(jsonNode,
                INVALIDARRAYMAXITEMS.class);
        }

        @Override
        public String toString() {
            return iNVALIDARRAYMAXITEMS.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDARRAYMINITEMSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDARRAYMINITEMS")
    private static class INVALIDARRAYMINITEMSCase extends BadRequestIssue {

        @JsonValue
        private INVALIDARRAYMINITEMS iNVALIDARRAYMINITEMS;

        INVALIDARRAYMINITEMSCase(INVALIDARRAYMINITEMS iNVALIDARRAYMINITEMS) {
            this.iNVALIDARRAYMINITEMS = iNVALIDARRAYMINITEMS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDARRAYMINITEMS(this.iNVALIDARRAYMINITEMS);
        }

        @JsonCreator
        private INVALIDARRAYMINITEMSCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDARRAYMINITEMS = ApiHelper.deserialize(jsonNode,
                INVALIDARRAYMINITEMS.class);
        }

        @Override
        public String toString() {
            return iNVALIDARRAYMINITEMS.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDCOUNTRYCODECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDCOUNTRYCODE")
    private static class INVALIDCOUNTRYCODECase extends BadRequestIssue {

        @JsonValue
        private INVALIDCOUNTRYCODE iNVALIDCOUNTRYCODE;

        INVALIDCOUNTRYCODECase(INVALIDCOUNTRYCODE iNVALIDCOUNTRYCODE) {
            this.iNVALIDCOUNTRYCODE = iNVALIDCOUNTRYCODE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDCOUNTRYCODE(this.iNVALIDCOUNTRYCODE);
        }

        @JsonCreator
        private INVALIDCOUNTRYCODECase(JsonNode jsonNode) throws IOException {
            this.iNVALIDCOUNTRYCODE = ApiHelper.deserialize(jsonNode,
                INVALIDCOUNTRYCODE.class);
        }

        @Override
        public String toString() {
            return iNVALIDCOUNTRYCODE.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPARAMETERSYNTAXCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPARAMETERSYNTAX")
    private static class INVALIDPARAMETERSYNTAXCase extends BadRequestIssue {

        @JsonValue
        private INVALIDPARAMETERSYNTAX iNVALIDPARAMETERSYNTAX;

        INVALIDPARAMETERSYNTAXCase(INVALIDPARAMETERSYNTAX iNVALIDPARAMETERSYNTAX) {
            this.iNVALIDPARAMETERSYNTAX = iNVALIDPARAMETERSYNTAX;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPARAMETERSYNTAX(this.iNVALIDPARAMETERSYNTAX);
        }

        @JsonCreator
        private INVALIDPARAMETERSYNTAXCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPARAMETERSYNTAX = ApiHelper.deserialize(jsonNode,
                INVALIDPARAMETERSYNTAX.class);
        }

        @Override
        public String toString() {
            return iNVALIDPARAMETERSYNTAX.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSTRINGLENGTHCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSTRINGLENGTH")
    private static class INVALIDSTRINGLENGTHCase extends BadRequestIssue {

        @JsonValue
        private INVALIDSTRINGLENGTH iNVALIDSTRINGLENGTH;

        INVALIDSTRINGLENGTHCase(INVALIDSTRINGLENGTH iNVALIDSTRINGLENGTH) {
            this.iNVALIDSTRINGLENGTH = iNVALIDSTRINGLENGTH;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSTRINGLENGTH(this.iNVALIDSTRINGLENGTH);
        }

        @JsonCreator
        private INVALIDSTRINGLENGTHCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSTRINGLENGTH = ApiHelper.deserialize(jsonNode,
                INVALIDSTRINGLENGTH.class);
        }

        @Override
        public String toString() {
            return iNVALIDSTRINGLENGTH.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPARAMETERVALUECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPARAMETERVALUE")
    private static class INVALIDPARAMETERVALUECase extends BadRequestIssue {

        @JsonValue
        private INVALIDPARAMETERVALUE iNVALIDPARAMETERVALUE;

        INVALIDPARAMETERVALUECase(INVALIDPARAMETERVALUE iNVALIDPARAMETERVALUE) {
            this.iNVALIDPARAMETERVALUE = iNVALIDPARAMETERVALUE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPARAMETERVALUE(this.iNVALIDPARAMETERVALUE);
        }

        @JsonCreator
        private INVALIDPARAMETERVALUECase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPARAMETERVALUE = ApiHelper.deserialize(jsonNode,
                INVALIDPARAMETERVALUE.class);
        }

        @Override
        public String toString() {
            return iNVALIDPARAMETERVALUE.toString();
        }
    }

    /**
     * This is a implementation class for MISSINGREQUIREDPARAMETERCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGREQUIREDPARAMETER")
    private static class MISSINGREQUIREDPARAMETERCase extends BadRequestIssue {

        @JsonValue
        private MISSINGREQUIREDPARAMETER mISSINGREQUIREDPARAMETER;

        MISSINGREQUIREDPARAMETERCase(MISSINGREQUIREDPARAMETER mISSINGREQUIREDPARAMETER) {
            this.mISSINGREQUIREDPARAMETER = mISSINGREQUIREDPARAMETER;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGREQUIREDPARAMETER(this.mISSINGREQUIREDPARAMETER);
        }

        @JsonCreator
        private MISSINGREQUIREDPARAMETERCase(JsonNode jsonNode) throws IOException {
            this.mISSINGREQUIREDPARAMETER = ApiHelper.deserialize(jsonNode,
                MISSINGREQUIREDPARAMETER.class);
        }

        @Override
        public String toString() {
            return mISSINGREQUIREDPARAMETER.toString();
        }
    }

    /**
     * This is a implementation class for NOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTSUPPORTED")
    private static class NOTSUPPORTEDCase extends BadRequestIssue {

        @JsonValue
        private NOTSUPPORTED nOTSUPPORTED;

        NOTSUPPORTEDCase(NOTSUPPORTED nOTSUPPORTED) {
            this.nOTSUPPORTED = nOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTSUPPORTED(this.nOTSUPPORTED);
        }

        @JsonCreator
        private NOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.nOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                NOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return nOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for PAYPALREQUESTIDREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PAYPALREQUESTIDREQUIRED")
    private static class PAYPALREQUESTIDREQUIREDCase extends BadRequestIssue {

        @JsonValue
        private PAYPALREQUESTIDREQUIRED pAYPALREQUESTIDREQUIRED;

        PAYPALREQUESTIDREQUIREDCase(PAYPALREQUESTIDREQUIRED pAYPALREQUESTIDREQUIRED) {
            this.pAYPALREQUESTIDREQUIRED = pAYPALREQUESTIDREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pAYPALREQUESTIDREQUIRED(this.pAYPALREQUESTIDREQUIRED);
        }

        @JsonCreator
        private PAYPALREQUESTIDREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.pAYPALREQUESTIDREQUIRED = ApiHelper.deserialize(jsonNode,
                PAYPALREQUESTIDREQUIRED.class);
        }

        @Override
        public String toString() {
            return pAYPALREQUESTIDREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for MALFORMEDREQUESTJSONCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MALFORMEDREQUESTJSON")
    private static class MALFORMEDREQUESTJSONCase extends BadRequestIssue {

        @JsonValue
        private MALFORMEDREQUESTJSON mALFORMEDREQUESTJSON;

        MALFORMEDREQUESTJSONCase(MALFORMEDREQUESTJSON mALFORMEDREQUESTJSON) {
            this.mALFORMEDREQUESTJSON = mALFORMEDREQUESTJSON;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mALFORMEDREQUESTJSON(this.mALFORMEDREQUESTJSON);
        }

        @JsonCreator
        private MALFORMEDREQUESTJSONCase(JsonNode jsonNode) throws IOException {
            this.mALFORMEDREQUESTJSON = ApiHelper.deserialize(jsonNode,
                MALFORMEDREQUESTJSON.class);
        }

        @Override
        public String toString() {
            return mALFORMEDREQUESTJSON.toString();
        }
    }

    /**
     * This is a custom deserializer class for BadRequestIssue.
     */
    protected static class BadRequestIssueDeserializer
            extends JsonDeserializer<BadRequestIssue> {

        @Override
        public BadRequestIssue deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(INVALIDARRAYMAXITEMSCase.class,
                    INVALIDARRAYMINITEMSCase.class, INVALIDCOUNTRYCODECase.class,
                    INVALIDPARAMETERSYNTAXCase.class, INVALIDSTRINGLENGTHCase.class,
                    INVALIDPARAMETERVALUECase.class, MISSINGREQUIREDPARAMETERCase.class,
                    NOTSUPPORTEDCase.class, PAYPALREQUESTIDREQUIREDCase.class,
                    MALFORMEDREQUESTJSONCase.class), false);
        }
    }

}
