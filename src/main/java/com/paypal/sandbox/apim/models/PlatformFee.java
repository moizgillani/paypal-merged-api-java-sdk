/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PlatformFee type.
 */
public class PlatformFee {
    private Money amount;
    private MerchantBase payee;

    /**
     * Default constructor.
     */
    public PlatformFee() {
    }

    /**
     * Initialization constructor.
     * @param  amount  Money value for amount.
     * @param  payee  MerchantBase value for payee.
     */
    public PlatformFee(
            Money amount,
            MerchantBase payee) {
        this.amount = amount;
        this.payee = payee;
    }

    /**
     * Getter for Amount.
     * The fee for this transaction.
     * @return Returns the Money
     */
    @JsonGetter("amount")
    public Money getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * The fee for this transaction.
     * @param amount Value for Money
     */
    @JsonSetter("amount")
    public void setAmount(Money amount) {
        this.amount = amount;
    }

    /**
     * Getter for Payee.
     * The recipient of the fee for this transaction. If you omit this value, the default is the API
     * caller.
     * @return Returns the MerchantBase
     */
    @JsonGetter("payee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public MerchantBase getPayee() {
        return payee;
    }

    /**
     * Setter for Payee.
     * The recipient of the fee for this transaction. If you omit this value, the default is the API
     * caller.
     * @param payee Value for MerchantBase
     */
    @JsonSetter("payee")
    public void setPayee(MerchantBase payee) {
        this.payee = payee;
    }

    /**
     * Converts this PlatformFee into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PlatformFee [" + "amount=" + amount + ", payee=" + payee + "]";
    }

    /**
     * Builds a new {@link PlatformFee.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PlatformFee.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(amount)
                .payee(getPayee());
        return builder;
    }

    /**
     * Class to build instances of {@link PlatformFee}.
     */
    public static class Builder {
        private Money amount;
        private MerchantBase payee;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  amount  Money value for amount.
         */
        public Builder(Money amount) {
            this.amount = amount;
        }

        /**
         * Setter for amount.
         * @param  amount  Money value for amount.
         * @return Builder
         */
        public Builder amount(Money amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for payee.
         * @param  payee  MerchantBase value for payee.
         * @return Builder
         */
        public Builder payee(MerchantBase payee) {
            this.payee = payee;
            return this;
        }

        /**
         * Builds a new {@link PlatformFee} object using the set fields.
         * @return {@link PlatformFee}
         */
        public PlatformFee build() {
            return new PlatformFee(amount, payee);
        }
    }
}
