/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.INVALIDACCOUNTSTATUS;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = UnauthorizedErrorIssue.UnauthorizedErrorIssueDeserializer.class)
public abstract class UnauthorizedErrorIssue {
    
    /**
     * This is INVALID_ACCOUNT_STATUS case.
     * @param iNVALIDACCOUNTSTATUS INVALIDACCOUNTSTATUS value for iNVALIDACCOUNTSTATUS.
     * @return The INVALIDACCOUNTSTATUSCase object.
     */
    public static UnauthorizedErrorIssue fromINVALIDACCOUNTSTATUS(
            INVALIDACCOUNTSTATUS iNVALIDACCOUNTSTATUS) {
        return iNVALIDACCOUNTSTATUS == null ? null : new INVALIDACCOUNTSTATUSCase(iNVALIDACCOUNTSTATUS);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R iNVALIDACCOUNTSTATUS(INVALIDACCOUNTSTATUS iNVALIDACCOUNTSTATUS);
    }

    /**
     * This is a implementation class for INVALIDACCOUNTSTATUSCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDACCOUNTSTATUS")
    private static class INVALIDACCOUNTSTATUSCase extends UnauthorizedErrorIssue {

        @JsonValue
        private INVALIDACCOUNTSTATUS iNVALIDACCOUNTSTATUS;

        INVALIDACCOUNTSTATUSCase(INVALIDACCOUNTSTATUS iNVALIDACCOUNTSTATUS) {
            this.iNVALIDACCOUNTSTATUS = iNVALIDACCOUNTSTATUS;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDACCOUNTSTATUS(this.iNVALIDACCOUNTSTATUS);
        }

        @JsonCreator
        private INVALIDACCOUNTSTATUSCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDACCOUNTSTATUS = ApiHelper.deserialize(jsonNode,
                INVALIDACCOUNTSTATUS.class);
        }

        @Override
        public String toString() {
            return iNVALIDACCOUNTSTATUS.toString();
        }
    }

    /**
     * This is a custom deserializer class for UnauthorizedErrorIssue.
     */
    protected static class UnauthorizedErrorIssueDeserializer
            extends JsonDeserializer<UnauthorizedErrorIssue> {

        @Override
        public UnauthorizedErrorIssue deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    INVALIDACCOUNTSTATUSCase.class), false);
        }
    }

}
