/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CardRequestAllof1 type.
 */
public class CardRequestAllof1 {
    private String verificationMethod;
    private ExperienceContextPaymentMethodTokens experienceContext;

    /**
     * Default constructor.
     */
    public CardRequestAllof1() {
    }

    /**
     * Initialization constructor.
     * @param  verificationMethod  String value for verificationMethod.
     * @param  experienceContext  ExperienceContextPaymentMethodTokens value for experienceContext.
     */
    public CardRequestAllof1(
            String verificationMethod,
            ExperienceContextPaymentMethodTokens experienceContext) {
        this.verificationMethod = verificationMethod;
        this.experienceContext = experienceContext;
    }

    /**
     * Getter for VerificationMethod.
     * The API caller can opt in to verify the payment token through PayPal offered verification
     * services (e.g. Smart Dollar Auth, 3DS).
     * @return Returns the String
     */
    @JsonGetter("verification_method")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVerificationMethod() {
        return verificationMethod;
    }

    /**
     * Setter for VerificationMethod.
     * The API caller can opt in to verify the payment token through PayPal offered verification
     * services (e.g. Smart Dollar Auth, 3DS).
     * @param verificationMethod Value for String
     */
    @JsonSetter("verification_method")
    public void setVerificationMethod(String verificationMethod) {
        this.verificationMethod = verificationMethod;
    }

    /**
     * Getter for ExperienceContext.
     * Customizes the Vault creation flow experience for your customers.
     * @return Returns the ExperienceContextPaymentMethodTokens
     */
    @JsonGetter("experience_context")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ExperienceContextPaymentMethodTokens getExperienceContext() {
        return experienceContext;
    }

    /**
     * Setter for ExperienceContext.
     * Customizes the Vault creation flow experience for your customers.
     * @param experienceContext Value for ExperienceContextPaymentMethodTokens
     */
    @JsonSetter("experience_context")
    public void setExperienceContext(ExperienceContextPaymentMethodTokens experienceContext) {
        this.experienceContext = experienceContext;
    }

    /**
     * Converts this CardRequestAllof1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CardRequestAllof1 [" + "verificationMethod=" + verificationMethod
                + ", experienceContext=" + experienceContext + "]";
    }

    /**
     * Builds a new {@link CardRequestAllof1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CardRequestAllof1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .verificationMethod(getVerificationMethod())
                .experienceContext(getExperienceContext());
        return builder;
    }

    /**
     * Class to build instances of {@link CardRequestAllof1}.
     */
    public static class Builder {
        private String verificationMethod;
        private ExperienceContextPaymentMethodTokens experienceContext;



        /**
         * Setter for verificationMethod.
         * @param  verificationMethod  String value for verificationMethod.
         * @return Builder
         */
        public Builder verificationMethod(String verificationMethod) {
            this.verificationMethod = verificationMethod;
            return this;
        }

        /**
         * Setter for experienceContext.
         * @param  experienceContext  ExperienceContextPaymentMethodTokens value for
         *         experienceContext.
         * @return Builder
         */
        public Builder experienceContext(ExperienceContextPaymentMethodTokens experienceContext) {
            this.experienceContext = experienceContext;
            return this;
        }

        /**
         * Builds a new {@link CardRequestAllof1} object using the set fields.
         * @return {@link CardRequestAllof1}
         */
        public CardRequestAllof1 build() {
            return new CardRequestAllof1(verificationMethod, experienceContext);
        }
    }
}
