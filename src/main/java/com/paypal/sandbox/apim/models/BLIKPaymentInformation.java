/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for BLIKPaymentInformation type.
 */
public class BLIKPaymentInformation {
    private String name;
    private String countryCode;
    private String email;
    private BLIKExperienceContext experienceContext;
    private BLIKLevel0PaymentObject level0;
    private BLIKOneClickPaymentInformation oneClick;

    /**
     * Default constructor.
     */
    public BLIKPaymentInformation() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  countryCode  String value for countryCode.
     * @param  email  String value for email.
     * @param  experienceContext  BLIKExperienceContext value for experienceContext.
     * @param  level0  BLIKLevel0PaymentObject value for level0.
     * @param  oneClick  BLIKOneClickPaymentInformation value for oneClick.
     */
    public BLIKPaymentInformation(
            String name,
            String countryCode,
            String email,
            BLIKExperienceContext experienceContext,
            BLIKLevel0PaymentObject level0,
            BLIKOneClickPaymentInformation oneClick) {
        this.name = name;
        this.countryCode = countryCode;
        this.email = email;
        this.experienceContext = experienceContext;
        this.level0 = level0;
        this.oneClick = oneClick;
    }

    /**
     * Getter for Name.
     * The name of the account holder associated with this payment method.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the account holder associated with this payment method.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for CountryCode.
     * The [two-character ISO-3166-1 country code](/docs/integration/direct/rest/country-codes/) of
     * the bank.
     * @return Returns the String
     */
    @JsonGetter("country_code")
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * Setter for CountryCode.
     * The [two-character ISO-3166-1 country code](/docs/integration/direct/rest/country-codes/) of
     * the bank.
     * @param countryCode Value for String
     */
    @JsonSetter("country_code")
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * Getter for Email.
     * The email address of the account holder associated with this payment method.
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * The email address of the account holder associated with this payment method.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for ExperienceContext.
     * Customizes the payer experience during the approval process for the payment.
     * @return Returns the BLIKExperienceContext
     */
    @JsonGetter("experience_context")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BLIKExperienceContext getExperienceContext() {
        return experienceContext;
    }

    /**
     * Setter for ExperienceContext.
     * Customizes the payer experience during the approval process for the payment.
     * @param experienceContext Value for BLIKExperienceContext
     */
    @JsonSetter("experience_context")
    public void setExperienceContext(BLIKExperienceContext experienceContext) {
        this.experienceContext = experienceContext;
    }

    /**
     * Getter for Level0.
     * The level_0 integration flow object.
     * @return Returns the BLIKLevel0PaymentObject
     */
    @JsonGetter("level_0")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BLIKLevel0PaymentObject getLevel0() {
        return level0;
    }

    /**
     * Setter for Level0.
     * The level_0 integration flow object.
     * @param level0 Value for BLIKLevel0PaymentObject
     */
    @JsonSetter("level_0")
    public void setLevel0(BLIKLevel0PaymentObject level0) {
        this.level0 = level0;
    }

    /**
     * Getter for OneClick.
     * The one-click integration flow object.
     * @return Returns the BLIKOneClickPaymentInformation
     */
    @JsonGetter("one_click")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BLIKOneClickPaymentInformation getOneClick() {
        return oneClick;
    }

    /**
     * Setter for OneClick.
     * The one-click integration flow object.
     * @param oneClick Value for BLIKOneClickPaymentInformation
     */
    @JsonSetter("one_click")
    public void setOneClick(BLIKOneClickPaymentInformation oneClick) {
        this.oneClick = oneClick;
    }

    /**
     * Converts this BLIKPaymentInformation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BLIKPaymentInformation [" + "name=" + name + ", countryCode=" + countryCode
                + ", email=" + email + ", experienceContext=" + experienceContext + ", level0="
                + level0 + ", oneClick=" + oneClick + "]";
    }

    /**
     * Builds a new {@link BLIKPaymentInformation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BLIKPaymentInformation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, countryCode)
                .email(getEmail())
                .experienceContext(getExperienceContext())
                .level0(getLevel0())
                .oneClick(getOneClick());
        return builder;
    }

    /**
     * Class to build instances of {@link BLIKPaymentInformation}.
     */
    public static class Builder {
        private String name;
        private String countryCode;
        private String email;
        private BLIKExperienceContext experienceContext;
        private BLIKLevel0PaymentObject level0;
        private BLIKOneClickPaymentInformation oneClick;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  countryCode  String value for countryCode.
         */
        public Builder(String name, String countryCode) {
            this.name = name;
            this.countryCode = countryCode;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = countryCode;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for experienceContext.
         * @param  experienceContext  BLIKExperienceContext value for experienceContext.
         * @return Builder
         */
        public Builder experienceContext(BLIKExperienceContext experienceContext) {
            this.experienceContext = experienceContext;
            return this;
        }

        /**
         * Setter for level0.
         * @param  level0  BLIKLevel0PaymentObject value for level0.
         * @return Builder
         */
        public Builder level0(BLIKLevel0PaymentObject level0) {
            this.level0 = level0;
            return this;
        }

        /**
         * Setter for oneClick.
         * @param  oneClick  BLIKOneClickPaymentInformation value for oneClick.
         * @return Builder
         */
        public Builder oneClick(BLIKOneClickPaymentInformation oneClick) {
            this.oneClick = oneClick;
            return this;
        }

        /**
         * Builds a new {@link BLIKPaymentInformation} object using the set fields.
         * @return {@link BLIKPaymentInformation}
         */
        public BLIKPaymentInformation build() {
            return new BLIKPaymentInformation(name, countryCode, email, experienceContext, level0,
                    oneClick);
        }
    }
}
