/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for BlikExperienceContextBase type.
 */
public class BlikExperienceContextBase {
    private String consumerIp;
    private String consumerUserAgent;

    /**
     * Default constructor.
     */
    public BlikExperienceContextBase() {
    }

    /**
     * Initialization constructor.
     * @param  consumerIp  String value for consumerIp.
     * @param  consumerUserAgent  String value for consumerUserAgent.
     */
    public BlikExperienceContextBase(
            String consumerIp,
            String consumerUserAgent) {
        this.consumerIp = consumerIp;
        this.consumerUserAgent = consumerUserAgent;
    }

    /**
     * Getter for ConsumerIp.
     * The IP address of the consumer. It could be either IPv4 or IPv6.
     * @return Returns the String
     */
    @JsonGetter("consumer_ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsumerIp() {
        return consumerIp;
    }

    /**
     * Setter for ConsumerIp.
     * The IP address of the consumer. It could be either IPv4 or IPv6.
     * @param consumerIp Value for String
     */
    @JsonSetter("consumer_ip")
    public void setConsumerIp(String consumerIp) {
        this.consumerIp = consumerIp;
    }

    /**
     * Getter for ConsumerUserAgent.
     * The payer's User Agent. For example, Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0).
     * @return Returns the String
     */
    @JsonGetter("consumer_user_agent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConsumerUserAgent() {
        return consumerUserAgent;
    }

    /**
     * Setter for ConsumerUserAgent.
     * The payer's User Agent. For example, Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0).
     * @param consumerUserAgent Value for String
     */
    @JsonSetter("consumer_user_agent")
    public void setConsumerUserAgent(String consumerUserAgent) {
        this.consumerUserAgent = consumerUserAgent;
    }

    /**
     * Converts this BlikExperienceContextBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BlikExperienceContextBase [" + "consumerIp=" + consumerIp + ", consumerUserAgent="
                + consumerUserAgent + "]";
    }

    /**
     * Builds a new {@link BlikExperienceContextBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BlikExperienceContextBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .consumerIp(getConsumerIp())
                .consumerUserAgent(getConsumerUserAgent());
        return builder;
    }

    /**
     * Class to build instances of {@link BlikExperienceContextBase}.
     */
    public static class Builder {
        private String consumerIp;
        private String consumerUserAgent;



        /**
         * Setter for consumerIp.
         * @param  consumerIp  String value for consumerIp.
         * @return Builder
         */
        public Builder consumerIp(String consumerIp) {
            this.consumerIp = consumerIp;
            return this;
        }

        /**
         * Setter for consumerUserAgent.
         * @param  consumerUserAgent  String value for consumerUserAgent.
         * @return Builder
         */
        public Builder consumerUserAgent(String consumerUserAgent) {
            this.consumerUserAgent = consumerUserAgent;
            return this;
        }

        /**
         * Builds a new {@link BlikExperienceContextBase} object using the set fields.
         * @return {@link BlikExperienceContextBase}
         */
        public BlikExperienceContextBase build() {
            return new BlikExperienceContextBase(consumerIp, consumerUserAgent);
        }
    }
}
