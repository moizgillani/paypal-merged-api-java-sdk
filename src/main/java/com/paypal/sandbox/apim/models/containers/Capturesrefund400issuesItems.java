/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.INVALIDPARAMETERSYNTAXPayments;
import com.paypal.sandbox.apim.models.INVALIDSTRINGLENGTHPayments;
import com.paypal.sandbox.apim.models.MISSINGREQUIREDPARAMETERPayments;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = Capturesrefund400issuesItems.Capturesrefund400issuesItemsDeserializer.class)
public abstract class Capturesrefund400issuesItems {
    
    /**
     * This is MISSING_REQUIRED_PARAMETER_Payments case.
     * @param mISSINGREQUIREDPARAMETERPayments MISSINGREQUIREDPARAMETERPayments value for mISSINGREQUIREDPARAMETERPayments.
     * @return The MISSINGREQUIREDPARAMETERPaymentsCase object.
     */
    public static Capturesrefund400issuesItems fromMISSINGREQUIREDPARAMETERPayments(
            MISSINGREQUIREDPARAMETERPayments mISSINGREQUIREDPARAMETERPayments) {
        return mISSINGREQUIREDPARAMETERPayments == null ? null : new MISSINGREQUIREDPARAMETERPaymentsCase(mISSINGREQUIREDPARAMETERPayments);
    }

    /**
     * This is INVALID_PARAMETER_SYNTAX_Payments case.
     * @param iNVALIDPARAMETERSYNTAXPayments INVALIDPARAMETERSYNTAXPayments value for iNVALIDPARAMETERSYNTAXPayments.
     * @return The INVALIDPARAMETERSYNTAXPaymentsCase object.
     */
    public static Capturesrefund400issuesItems fromINVALIDPARAMETERSYNTAXPayments(
            INVALIDPARAMETERSYNTAXPayments iNVALIDPARAMETERSYNTAXPayments) {
        return iNVALIDPARAMETERSYNTAXPayments == null ? null : new INVALIDPARAMETERSYNTAXPaymentsCase(iNVALIDPARAMETERSYNTAXPayments);
    }

    /**
     * This is INVALID_STRING_LENGTH_Payments case.
     * @param iNVALIDSTRINGLENGTHPayments INVALIDSTRINGLENGTHPayments value for iNVALIDSTRINGLENGTHPayments.
     * @return The INVALIDSTRINGLENGTHPaymentsCase object.
     */
    public static Capturesrefund400issuesItems fromINVALIDSTRINGLENGTHPayments(
            INVALIDSTRINGLENGTHPayments iNVALIDSTRINGLENGTHPayments) {
        return iNVALIDSTRINGLENGTHPayments == null ? null : new INVALIDSTRINGLENGTHPaymentsCase(iNVALIDSTRINGLENGTHPayments);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R mISSINGREQUIREDPARAMETERPayments(MISSINGREQUIREDPARAMETERPayments mISSINGREQUIREDPARAMETERPayments);

        R iNVALIDPARAMETERSYNTAXPayments(INVALIDPARAMETERSYNTAXPayments iNVALIDPARAMETERSYNTAXPayments);

        R iNVALIDSTRINGLENGTHPayments(INVALIDSTRINGLENGTHPayments iNVALIDSTRINGLENGTHPayments);
    }

    /**
     * This is a implementation class for MISSINGREQUIREDPARAMETERPaymentsCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MISSINGREQUIREDPARAMETERPayments")
    private static class MISSINGREQUIREDPARAMETERPaymentsCase extends Capturesrefund400issuesItems {

        @JsonValue
        private MISSINGREQUIREDPARAMETERPayments mISSINGREQUIREDPARAMETERPayments;

        MISSINGREQUIREDPARAMETERPaymentsCase(MISSINGREQUIREDPARAMETERPayments mISSINGREQUIREDPARAMETERPayments) {
            this.mISSINGREQUIREDPARAMETERPayments = mISSINGREQUIREDPARAMETERPayments;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mISSINGREQUIREDPARAMETERPayments(this.mISSINGREQUIREDPARAMETERPayments);
        }

        @JsonCreator
        private MISSINGREQUIREDPARAMETERPaymentsCase(JsonNode jsonNode) throws IOException {
            this.mISSINGREQUIREDPARAMETERPayments = ApiHelper.deserialize(jsonNode,
                MISSINGREQUIREDPARAMETERPayments.class);
        }

        @Override
        public String toString() {
            return mISSINGREQUIREDPARAMETERPayments.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPARAMETERSYNTAXPaymentsCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPARAMETERSYNTAXPayments")
    private static class INVALIDPARAMETERSYNTAXPaymentsCase extends Capturesrefund400issuesItems {

        @JsonValue
        private INVALIDPARAMETERSYNTAXPayments iNVALIDPARAMETERSYNTAXPayments;

        INVALIDPARAMETERSYNTAXPaymentsCase(INVALIDPARAMETERSYNTAXPayments iNVALIDPARAMETERSYNTAXPayments) {
            this.iNVALIDPARAMETERSYNTAXPayments = iNVALIDPARAMETERSYNTAXPayments;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPARAMETERSYNTAXPayments(this.iNVALIDPARAMETERSYNTAXPayments);
        }

        @JsonCreator
        private INVALIDPARAMETERSYNTAXPaymentsCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPARAMETERSYNTAXPayments = ApiHelper.deserialize(jsonNode,
                INVALIDPARAMETERSYNTAXPayments.class);
        }

        @Override
        public String toString() {
            return iNVALIDPARAMETERSYNTAXPayments.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDSTRINGLENGTHPaymentsCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDSTRINGLENGTHPayments")
    private static class INVALIDSTRINGLENGTHPaymentsCase extends Capturesrefund400issuesItems {

        @JsonValue
        private INVALIDSTRINGLENGTHPayments iNVALIDSTRINGLENGTHPayments;

        INVALIDSTRINGLENGTHPaymentsCase(INVALIDSTRINGLENGTHPayments iNVALIDSTRINGLENGTHPayments) {
            this.iNVALIDSTRINGLENGTHPayments = iNVALIDSTRINGLENGTHPayments;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDSTRINGLENGTHPayments(this.iNVALIDSTRINGLENGTHPayments);
        }

        @JsonCreator
        private INVALIDSTRINGLENGTHPaymentsCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDSTRINGLENGTHPayments = ApiHelper.deserialize(jsonNode,
                INVALIDSTRINGLENGTHPayments.class);
        }

        @Override
        public String toString() {
            return iNVALIDSTRINGLENGTHPayments.toString();
        }
    }

    /**
     * This is a custom deserializer class for Capturesrefund400issuesItems.
     */
    protected static class Capturesrefund400issuesItemsDeserializer
            extends JsonDeserializer<Capturesrefund400issuesItems> {

        @Override
        public Capturesrefund400issuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    MISSINGREQUIREDPARAMETERPaymentsCase.class,
                    INVALIDPARAMETERSYNTAXPaymentsCase.class,
                    INVALIDSTRINGLENGTHPaymentsCase.class), false);
        }
    }

}
