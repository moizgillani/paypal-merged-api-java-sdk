/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ShippingDetailsPaymentMethodTokens type.
 */
public class ShippingDetailsPaymentMethodTokens {
    private PartyName name;
    private ShippingType1Enum type;
    private PortablePostalAddressMediumGrained address;

    /**
     * Default constructor.
     */
    public ShippingDetailsPaymentMethodTokens() {
    }

    /**
     * Initialization constructor.
     * @param  name  PartyName value for name.
     * @param  type  ShippingType1Enum value for type.
     * @param  address  PortablePostalAddressMediumGrained value for address.
     */
    public ShippingDetailsPaymentMethodTokens(
            PartyName name,
            ShippingType1Enum type,
            PortablePostalAddressMediumGrained address) {
        this.name = name;
        this.type = type;
        this.address = address;
    }

    /**
     * Getter for Name.
     * The name of the person to whom to ship the items. Supports only the `full_name` property.
     * @return Returns the PartyName
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PartyName getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the person to whom to ship the items. Supports only the `full_name` property.
     * @param name Value for PartyName
     */
    @JsonSetter("name")
    public void setName(PartyName name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * The method by which the payer wants to get their items from the payee e.g shipping, in-person
     * pickup. Either type or options but not both may be present.
     * @return Returns the ShippingType1Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ShippingType1Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The method by which the payer wants to get their items from the payee e.g shipping, in-person
     * pickup. Either type or options but not both may be present.
     * @param type Value for ShippingType1Enum
     */
    @JsonSetter("type")
    public void setType(ShippingType1Enum type) {
        this.type = type;
    }

    /**
     * Getter for Address.
     * The address of the person to whom to ship the items. Supports only the `address_line_1`,
     * `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code`
     * properties.
     * @return Returns the PortablePostalAddressMediumGrained
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PortablePostalAddressMediumGrained getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * The address of the person to whom to ship the items. Supports only the `address_line_1`,
     * `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code`
     * properties.
     * @param address Value for PortablePostalAddressMediumGrained
     */
    @JsonSetter("address")
    public void setAddress(PortablePostalAddressMediumGrained address) {
        this.address = address;
    }

    /**
     * Converts this ShippingDetailsPaymentMethodTokens into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ShippingDetailsPaymentMethodTokens [" + "name=" + name + ", type=" + type
                + ", address=" + address + "]";
    }

    /**
     * Builds a new {@link ShippingDetailsPaymentMethodTokens.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ShippingDetailsPaymentMethodTokens.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .type(getType())
                .address(getAddress());
        return builder;
    }

    /**
     * Class to build instances of {@link ShippingDetailsPaymentMethodTokens}.
     */
    public static class Builder {
        private PartyName name;
        private ShippingType1Enum type;
        private PortablePostalAddressMediumGrained address;



        /**
         * Setter for name.
         * @param  name  PartyName value for name.
         * @return Builder
         */
        public Builder name(PartyName name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  ShippingType1Enum value for type.
         * @return Builder
         */
        public Builder type(ShippingType1Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  PortablePostalAddressMediumGrained value for address.
         * @return Builder
         */
        public Builder address(PortablePostalAddressMediumGrained address) {
            this.address = address;
            return this;
        }

        /**
         * Builds a new {@link ShippingDetailsPaymentMethodTokens} object using the set fields.
         * @return {@link ShippingDetailsPaymentMethodTokens}
         */
        public ShippingDetailsPaymentMethodTokens build() {
            return new ShippingDetailsPaymentMethodTokens(name, type, address);
        }
    }
}
