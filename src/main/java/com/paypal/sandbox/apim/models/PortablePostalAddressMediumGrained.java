/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PortablePostalAddressMediumGrained type.
 */
public class PortablePostalAddressMediumGrained {
    private String addressLine1;
    private String addressLine2;
    private String addressLine3;
    private String adminArea4;
    private String adminArea3;
    private String adminArea2;
    private String adminArea1;
    private String postalCode;
    private String countryCode;
    private NonPortableAdditionalAddressDetails addressDetails;

    /**
     * Default constructor.
     */
    public PortablePostalAddressMediumGrained() {
    }

    /**
     * Initialization constructor.
     * @param  countryCode  String value for countryCode.
     * @param  addressLine1  String value for addressLine1.
     * @param  addressLine2  String value for addressLine2.
     * @param  addressLine3  String value for addressLine3.
     * @param  adminArea4  String value for adminArea4.
     * @param  adminArea3  String value for adminArea3.
     * @param  adminArea2  String value for adminArea2.
     * @param  adminArea1  String value for adminArea1.
     * @param  postalCode  String value for postalCode.
     * @param  addressDetails  NonPortableAdditionalAddressDetails value for addressDetails.
     */
    public PortablePostalAddressMediumGrained(
            String countryCode,
            String addressLine1,
            String addressLine2,
            String addressLine3,
            String adminArea4,
            String adminArea3,
            String adminArea2,
            String adminArea1,
            String postalCode,
            NonPortableAdditionalAddressDetails addressDetails) {
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.addressLine3 = addressLine3;
        this.adminArea4 = adminArea4;
        this.adminArea3 = adminArea3;
        this.adminArea2 = adminArea2;
        this.adminArea1 = adminArea1;
        this.postalCode = postalCode;
        this.countryCode = countryCode;
        this.addressDetails = addressDetails;
    }

    /**
     * Getter for AddressLine1.
     * The first line of the address. For example, number or street. For example, `173 Drury Lane`.
     * Required for data entry and compliance and risk checks. Must contain the full address.
     * @return Returns the String
     */
    @JsonGetter("address_line_1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddressLine1() {
        return addressLine1;
    }

    /**
     * Setter for AddressLine1.
     * The first line of the address. For example, number or street. For example, `173 Drury Lane`.
     * Required for data entry and compliance and risk checks. Must contain the full address.
     * @param addressLine1 Value for String
     */
    @JsonSetter("address_line_1")
    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    /**
     * Getter for AddressLine2.
     * The second line of the address. For example, suite or apartment number.
     * @return Returns the String
     */
    @JsonGetter("address_line_2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddressLine2() {
        return addressLine2;
    }

    /**
     * Setter for AddressLine2.
     * The second line of the address. For example, suite or apartment number.
     * @param addressLine2 Value for String
     */
    @JsonSetter("address_line_2")
    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    /**
     * Getter for AddressLine3.
     * The third line of the address, if needed. For example, a street complement for Brazil,
     * direction text, such as `next to Walmart`, or a landmark in an Indian address.
     * @return Returns the String
     */
    @JsonGetter("address_line_3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddressLine3() {
        return addressLine3;
    }

    /**
     * Setter for AddressLine3.
     * The third line of the address, if needed. For example, a street complement for Brazil,
     * direction text, such as `next to Walmart`, or a landmark in an Indian address.
     * @param addressLine3 Value for String
     */
    @JsonSetter("address_line_3")
    public void setAddressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
    }

    /**
     * Getter for AdminArea4.
     * The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`.
     * Value is:&lt;ul&gt;&lt;li&gt;The postal sorting code for Guernsey and many French territories, such as
     * French Guiana.&lt;/li&gt;&lt;li&gt;The fine-grained administrative levels in China.&lt;/li&gt;&lt;/ul&gt;
     * @return Returns the String
     */
    @JsonGetter("admin_area_4")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdminArea4() {
        return adminArea4;
    }

    /**
     * Setter for AdminArea4.
     * The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`.
     * Value is:&lt;ul&gt;&lt;li&gt;The postal sorting code for Guernsey and many French territories, such as
     * French Guiana.&lt;/li&gt;&lt;li&gt;The fine-grained administrative levels in China.&lt;/li&gt;&lt;/ul&gt;
     * @param adminArea4 Value for String
     */
    @JsonSetter("admin_area_4")
    public void setAdminArea4(String adminArea4) {
        this.adminArea4 = adminArea4;
    }

    /**
     * Getter for AdminArea3.
     * A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value
     * is:&lt;ul&gt;&lt;li&gt;Brazil. Suburb, bairro, or neighborhood.&lt;/li&gt;&lt;li&gt;India. Sub-locality or district.
     * Street name information is not always available but a sub-locality or district can be a very
     * small area.&lt;/li&gt;&lt;/ul&gt;
     * @return Returns the String
     */
    @JsonGetter("admin_area_3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdminArea3() {
        return adminArea3;
    }

    /**
     * Setter for AdminArea3.
     * A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value
     * is:&lt;ul&gt;&lt;li&gt;Brazil. Suburb, bairro, or neighborhood.&lt;/li&gt;&lt;li&gt;India. Sub-locality or district.
     * Street name information is not always available but a sub-locality or district can be a very
     * small area.&lt;/li&gt;&lt;/ul&gt;
     * @param adminArea3 Value for String
     */
    @JsonSetter("admin_area_3")
    public void setAdminArea3(String adminArea3) {
        this.adminArea3 = adminArea3;
    }

    /**
     * Getter for AdminArea2.
     * A city, town, or village. Smaller than `admin_area_level_1`.
     * @return Returns the String
     */
    @JsonGetter("admin_area_2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdminArea2() {
        return adminArea2;
    }

    /**
     * Setter for AdminArea2.
     * A city, town, or village. Smaller than `admin_area_level_1`.
     * @param adminArea2 Value for String
     */
    @JsonSetter("admin_area_2")
    public void setAdminArea2(String adminArea2) {
        this.adminArea2 = adminArea2;
    }

    /**
     * Getter for AdminArea1.
     * The highest level sub-division in a country, which is usually a province, state, or
     * ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`.
     * Value, by country, is:&lt;ul&gt;&lt;li&gt;UK. A county.&lt;/li&gt;&lt;li&gt;US. A state.&lt;/li&gt;&lt;li&gt;Canada. A
     * province.&lt;/li&gt;&lt;li&gt;Japan. A prefecture.&lt;/li&gt;&lt;li&gt;Switzerland. A kanton.&lt;/li&gt;&lt;/ul&gt;
     * @return Returns the String
     */
    @JsonGetter("admin_area_1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAdminArea1() {
        return adminArea1;
    }

    /**
     * Setter for AdminArea1.
     * The highest level sub-division in a country, which is usually a province, state, or
     * ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`.
     * Value, by country, is:&lt;ul&gt;&lt;li&gt;UK. A county.&lt;/li&gt;&lt;li&gt;US. A state.&lt;/li&gt;&lt;li&gt;Canada. A
     * province.&lt;/li&gt;&lt;li&gt;Japan. A prefecture.&lt;/li&gt;&lt;li&gt;Switzerland. A kanton.&lt;/li&gt;&lt;/ul&gt;
     * @param adminArea1 Value for String
     */
    @JsonSetter("admin_area_1")
    public void setAdminArea1(String adminArea1) {
        this.adminArea1 = adminArea1;
    }

    /**
     * Getter for PostalCode.
     * The postal code, which is the zip code or equivalent. Typically required for countries with a
     * postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
     * @return Returns the String
     */
    @JsonGetter("postal_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPostalCode() {
        return postalCode;
    }

    /**
     * Setter for PostalCode.
     * The postal code, which is the zip code or equivalent. Typically required for countries with a
     * postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
     * @param postalCode Value for String
     */
    @JsonSetter("postal_code")
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    /**
     * Getter for CountryCode.
     * The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the
     * country or region.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The country code for Great Britain is
     * &lt;code&gt;GB&lt;/code&gt; and not &lt;code&gt;UK&lt;/code&gt; as used in the top-level domain names for that
     * country. Use the `C2` country code for China worldwide for comparable uncontrolled price
     * (CUP) method, bank card, and cross-border transactions.&lt;/blockquote&gt;
     * @return Returns the String
     */
    @JsonGetter("country_code")
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * Setter for CountryCode.
     * The [two-character ISO 3166-1 code](/api/rest/reference/country-codes/) that identifies the
     * country or region.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The country code for Great Britain is
     * &lt;code&gt;GB&lt;/code&gt; and not &lt;code&gt;UK&lt;/code&gt; as used in the top-level domain names for that
     * country. Use the `C2` country code for China worldwide for comparable uncontrolled price
     * (CUP) method, bank card, and cross-border transactions.&lt;/blockquote&gt;
     * @param countryCode Value for String
     */
    @JsonSetter("country_code")
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * Getter for AddressDetails.
     * The non-portable additional address details that are sometimes needed for compliance, risk,
     * or other scenarios where fine-grain address information might be needed. Not portable with
     * common third party and open source. Redundant with core fields.&lt;br/&gt;For example,
     * `address_portable.address_line_1` is usually a combination of
     * `address_details.street_number`, `street_name`, and `street_type`.
     * @return Returns the NonPortableAdditionalAddressDetails
     */
    @JsonGetter("address_details")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NonPortableAdditionalAddressDetails getAddressDetails() {
        return addressDetails;
    }

    /**
     * Setter for AddressDetails.
     * The non-portable additional address details that are sometimes needed for compliance, risk,
     * or other scenarios where fine-grain address information might be needed. Not portable with
     * common third party and open source. Redundant with core fields.&lt;br/&gt;For example,
     * `address_portable.address_line_1` is usually a combination of
     * `address_details.street_number`, `street_name`, and `street_type`.
     * @param addressDetails Value for NonPortableAdditionalAddressDetails
     */
    @JsonSetter("address_details")
    public void setAddressDetails(NonPortableAdditionalAddressDetails addressDetails) {
        this.addressDetails = addressDetails;
    }

    /**
     * Converts this PortablePostalAddressMediumGrained into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PortablePostalAddressMediumGrained [" + "countryCode=" + countryCode
                + ", addressLine1=" + addressLine1 + ", addressLine2=" + addressLine2
                + ", addressLine3=" + addressLine3 + ", adminArea4=" + adminArea4 + ", adminArea3="
                + adminArea3 + ", adminArea2=" + adminArea2 + ", adminArea1=" + adminArea1
                + ", postalCode=" + postalCode + ", addressDetails=" + addressDetails + "]";
    }

    /**
     * Builds a new {@link PortablePostalAddressMediumGrained.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PortablePostalAddressMediumGrained.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(countryCode)
                .addressLine1(getAddressLine1())
                .addressLine2(getAddressLine2())
                .addressLine3(getAddressLine3())
                .adminArea4(getAdminArea4())
                .adminArea3(getAdminArea3())
                .adminArea2(getAdminArea2())
                .adminArea1(getAdminArea1())
                .postalCode(getPostalCode())
                .addressDetails(getAddressDetails());
        return builder;
    }

    /**
     * Class to build instances of {@link PortablePostalAddressMediumGrained}.
     */
    public static class Builder {
        private String countryCode;
        private String addressLine1;
        private String addressLine2;
        private String addressLine3;
        private String adminArea4;
        private String adminArea3;
        private String adminArea2;
        private String adminArea1;
        private String postalCode;
        private NonPortableAdditionalAddressDetails addressDetails;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  countryCode  String value for countryCode.
         */
        public Builder(String countryCode) {
            this.countryCode = countryCode;
        }

        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = countryCode;
            return this;
        }

        /**
         * Setter for addressLine1.
         * @param  addressLine1  String value for addressLine1.
         * @return Builder
         */
        public Builder addressLine1(String addressLine1) {
            this.addressLine1 = addressLine1;
            return this;
        }

        /**
         * Setter for addressLine2.
         * @param  addressLine2  String value for addressLine2.
         * @return Builder
         */
        public Builder addressLine2(String addressLine2) {
            this.addressLine2 = addressLine2;
            return this;
        }

        /**
         * Setter for addressLine3.
         * @param  addressLine3  String value for addressLine3.
         * @return Builder
         */
        public Builder addressLine3(String addressLine3) {
            this.addressLine3 = addressLine3;
            return this;
        }

        /**
         * Setter for adminArea4.
         * @param  adminArea4  String value for adminArea4.
         * @return Builder
         */
        public Builder adminArea4(String adminArea4) {
            this.adminArea4 = adminArea4;
            return this;
        }

        /**
         * Setter for adminArea3.
         * @param  adminArea3  String value for adminArea3.
         * @return Builder
         */
        public Builder adminArea3(String adminArea3) {
            this.adminArea3 = adminArea3;
            return this;
        }

        /**
         * Setter for adminArea2.
         * @param  adminArea2  String value for adminArea2.
         * @return Builder
         */
        public Builder adminArea2(String adminArea2) {
            this.adminArea2 = adminArea2;
            return this;
        }

        /**
         * Setter for adminArea1.
         * @param  adminArea1  String value for adminArea1.
         * @return Builder
         */
        public Builder adminArea1(String adminArea1) {
            this.adminArea1 = adminArea1;
            return this;
        }

        /**
         * Setter for postalCode.
         * @param  postalCode  String value for postalCode.
         * @return Builder
         */
        public Builder postalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
        }

        /**
         * Setter for addressDetails.
         * @param  addressDetails  NonPortableAdditionalAddressDetails value for addressDetails.
         * @return Builder
         */
        public Builder addressDetails(NonPortableAdditionalAddressDetails addressDetails) {
            this.addressDetails = addressDetails;
            return this;
        }

        /**
         * Builds a new {@link PortablePostalAddressMediumGrained} object using the set fields.
         * @return {@link PortablePostalAddressMediumGrained}
         */
        public PortablePostalAddressMediumGrained build() {
            return new PortablePostalAddressMediumGrained(countryCode, addressLine1, addressLine2,
                    addressLine3, adminArea4, adminArea3, adminArea2, adminArea1, postalCode,
                    addressDetails);
        }
    }
}
