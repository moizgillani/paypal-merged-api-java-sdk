/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.paypal.sandbox.apim.ApiHelper;
import com.paypal.sandbox.apim.models.AMOUNTCHANGENOTALLOWED;
import com.paypal.sandbox.apim.models.AmountMismatch1;
import com.paypal.sandbox.apim.models.CannotBeNegative1;
import com.paypal.sandbox.apim.models.CannotBeZeroOrNegative1;
import com.paypal.sandbox.apim.models.CityRequired1;
import com.paypal.sandbox.apim.models.DecimalPrecision1;
import com.paypal.sandbox.apim.models.DonationItemsNotSupported1;
import com.paypal.sandbox.apim.models.DuplicateReferenceID1;
import com.paypal.sandbox.apim.models.INVALIDJSONPOINTERFORMAT;
import com.paypal.sandbox.apim.models.INVALIDPARAMETER;
import com.paypal.sandbox.apim.models.InvalidCurrencyCode1;
import com.paypal.sandbox.apim.models.InvalidFXRateID1;
import com.paypal.sandbox.apim.models.InvalidPlatformFeesAccountError;
import com.paypal.sandbox.apim.models.InvalidPlatformFeesAmount1;
import com.paypal.sandbox.apim.models.ItemTotalMismatch1;
import com.paypal.sandbox.apim.models.ItemTotalRequired1;
import com.paypal.sandbox.apim.models.MaxValueExceeded1;
import com.paypal.sandbox.apim.models.MultiCurrencyOrder1;
import com.paypal.sandbox.apim.models.MultipleShippingOptionSelected1;
import com.paypal.sandbox.apim.models.NOTPATCHABLE;
import com.paypal.sandbox.apim.models.ORDERALREADYCOMPLETED;
import com.paypal.sandbox.apim.models.PATCHPATHREQUIRED;
import com.paypal.sandbox.apim.models.PATCHVALUEREQUIRED;
import com.paypal.sandbox.apim.models.PayeeAccountLockedOrClosed1;
import com.paypal.sandbox.apim.models.PayeeAccountRestricted1;
import com.paypal.sandbox.apim.models.PayeeFXRateIDCurrencyMismatch1;
import com.paypal.sandbox.apim.models.PayeeFXRateIDExpired1;
import com.paypal.sandbox.apim.models.PlatformFeesNotSupported1;
import com.paypal.sandbox.apim.models.PostalCodeRequired1;
import com.paypal.sandbox.apim.models.PreferredShippingOptionAmountMismatch1;
import com.paypal.sandbox.apim.models.REFERENCEIDNOTFOUND;
import com.paypal.sandbox.apim.models.ReferenceIDRequired1;
import com.paypal.sandbox.apim.models.SHIPPINGOPTIONSNOTSUPPORTED;
import com.paypal.sandbox.apim.models.ShippingOptionNotSelected1;
import com.paypal.sandbox.apim.models.TaxTotalMismatch1;
import com.paypal.sandbox.apim.models.TaxTotalRequired1;
import com.paypal.sandbox.apim.models.UNSUPPORTEDPATCHPARAMETERVALUE;
import com.paypal.sandbox.apim.models.UnsupportedIntent1;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = OrdersPatch422IssuesItems.OrdersPatch422IssuesItemsDeserializer.class)
public abstract class OrdersPatch422IssuesItems {
    
    /**
     * This is Amount Mismatch1 case.
     * @param amountMismatch1 AmountMismatch1 value for amountMismatch1.
     * @return The AmountMismatch1Case object.
     */
    public static OrdersPatch422IssuesItems fromAmountMismatch1(AmountMismatch1 amountMismatch1) {
        return amountMismatch1 == null ? null : new AmountMismatch1Case(amountMismatch1);
    }

    /**
     * This is Cannot Be Negative1 case.
     * @param cannotBeNegative1 CannotBeNegative1 value for cannotBeNegative1.
     * @return The CannotBeNegative1Case object.
     */
    public static OrdersPatch422IssuesItems fromCannotBeNegative1(
            CannotBeNegative1 cannotBeNegative1) {
        return cannotBeNegative1 == null ? null : new CannotBeNegative1Case(cannotBeNegative1);
    }

    /**
     * This is Cannot Be Zero Or Negative1 case.
     * @param cannotBeZeroOrNegative1 CannotBeZeroOrNegative1 value for cannotBeZeroOrNegative1.
     * @return The CannotBeZeroOrNegative1Case object.
     */
    public static OrdersPatch422IssuesItems fromCannotBeZeroOrNegative1(
            CannotBeZeroOrNegative1 cannotBeZeroOrNegative1) {
        return cannotBeZeroOrNegative1 == null ? null : new CannotBeZeroOrNegative1Case(cannotBeZeroOrNegative1);
    }

    /**
     * This is City Required1 case.
     * @param cityRequired1 CityRequired1 value for cityRequired1.
     * @return The CityRequired1Case object.
     */
    public static OrdersPatch422IssuesItems fromCityRequired1(CityRequired1 cityRequired1) {
        return cityRequired1 == null ? null : new CityRequired1Case(cityRequired1);
    }

    /**
     * This is Decimal Precision1 case.
     * @param decimalPrecision1 DecimalPrecision1 value for decimalPrecision1.
     * @return The DecimalPrecision1Case object.
     */
    public static OrdersPatch422IssuesItems fromDecimalPrecision1(
            DecimalPrecision1 decimalPrecision1) {
        return decimalPrecision1 == null ? null : new DecimalPrecision1Case(decimalPrecision1);
    }

    /**
     * This is Donation Items Not Supported1 case.
     * @param donationItemsNotSupported1 DonationItemsNotSupported1 value for donationItemsNotSupported1.
     * @return The DonationItemsNotSupported1Case object.
     */
    public static OrdersPatch422IssuesItems fromDonationItemsNotSupported1(
            DonationItemsNotSupported1 donationItemsNotSupported1) {
        return donationItemsNotSupported1 == null ? null : new DonationItemsNotSupported1Case(donationItemsNotSupported1);
    }

    /**
     * This is Duplicate Reference ID1 case.
     * @param duplicateReferenceID1 DuplicateReferenceID1 value for duplicateReferenceID1.
     * @return The DuplicateReferenceID1Case object.
     */
    public static OrdersPatch422IssuesItems fromDuplicateReferenceID1(
            DuplicateReferenceID1 duplicateReferenceID1) {
        return duplicateReferenceID1 == null ? null : new DuplicateReferenceID1Case(duplicateReferenceID1);
    }

    /**
     * This is Invalid Currency Code1 case.
     * @param invalidCurrencyCode1 InvalidCurrencyCode1 value for invalidCurrencyCode1.
     * @return The InvalidCurrencyCode1Case object.
     */
    public static OrdersPatch422IssuesItems fromInvalidCurrencyCode1(
            InvalidCurrencyCode1 invalidCurrencyCode1) {
        return invalidCurrencyCode1 == null ? null : new InvalidCurrencyCode1Case(invalidCurrencyCode1);
    }

    /**
     * This is Item Total Mismatch1 case.
     * @param itemTotalMismatch1 ItemTotalMismatch1 value for itemTotalMismatch1.
     * @return The ItemTotalMismatch1Case object.
     */
    public static OrdersPatch422IssuesItems fromItemTotalMismatch1(
            ItemTotalMismatch1 itemTotalMismatch1) {
        return itemTotalMismatch1 == null ? null : new ItemTotalMismatch1Case(itemTotalMismatch1);
    }

    /**
     * This is Item Total Required1 case.
     * @param itemTotalRequired1 ItemTotalRequired1 value for itemTotalRequired1.
     * @return The ItemTotalRequired1Case object.
     */
    public static OrdersPatch422IssuesItems fromItemTotalRequired1(
            ItemTotalRequired1 itemTotalRequired1) {
        return itemTotalRequired1 == null ? null : new ItemTotalRequired1Case(itemTotalRequired1);
    }

    /**
     * This is Max Value Exceeded1 case.
     * @param maxValueExceeded1 MaxValueExceeded1 value for maxValueExceeded1.
     * @return The MaxValueExceeded1Case object.
     */
    public static OrdersPatch422IssuesItems fromMaxValueExceeded1(
            MaxValueExceeded1 maxValueExceeded1) {
        return maxValueExceeded1 == null ? null : new MaxValueExceeded1Case(maxValueExceeded1);
    }

    /**
     * This is INVALID_JSON_POINTER_FORMAT case.
     * @param iNVALIDJSONPOINTERFORMAT INVALIDJSONPOINTERFORMAT value for iNVALIDJSONPOINTERFORMAT.
     * @return The INVALIDJSONPOINTERFORMATCase object.
     */
    public static OrdersPatch422IssuesItems fromINVALIDJSONPOINTERFORMAT(
            INVALIDJSONPOINTERFORMAT iNVALIDJSONPOINTERFORMAT) {
        return iNVALIDJSONPOINTERFORMAT == null ? null : new INVALIDJSONPOINTERFORMATCase(iNVALIDJSONPOINTERFORMAT);
    }

    /**
     * This is INVALID_PARAMETER case.
     * @param iNVALIDPARAMETER INVALIDPARAMETER value for iNVALIDPARAMETER.
     * @return The INVALIDPARAMETERCase object.
     */
    public static OrdersPatch422IssuesItems fromINVALIDPARAMETER(
            INVALIDPARAMETER iNVALIDPARAMETER) {
        return iNVALIDPARAMETER == null ? null : new INVALIDPARAMETERCase(iNVALIDPARAMETER);
    }

    /**
     * This is NOT_PATCHABLE case.
     * @param nOTPATCHABLE NOTPATCHABLE value for nOTPATCHABLE.
     * @return The NOTPATCHABLECase object.
     */
    public static OrdersPatch422IssuesItems fromNOTPATCHABLE(NOTPATCHABLE nOTPATCHABLE) {
        return nOTPATCHABLE == null ? null : new NOTPATCHABLECase(nOTPATCHABLE);
    }

    /**
     * This is Tax Total Mismatch1 case.
     * @param taxTotalMismatch1 TaxTotalMismatch1 value for taxTotalMismatch1.
     * @return The TaxTotalMismatch1Case object.
     */
    public static OrdersPatch422IssuesItems fromTaxTotalMismatch1(
            TaxTotalMismatch1 taxTotalMismatch1) {
        return taxTotalMismatch1 == null ? null : new TaxTotalMismatch1Case(taxTotalMismatch1);
    }

    /**
     * This is Tax Total Required1 case.
     * @param taxTotalRequired1 TaxTotalRequired1 value for taxTotalRequired1.
     * @return The TaxTotalRequired1Case object.
     */
    public static OrdersPatch422IssuesItems fromTaxTotalRequired1(
            TaxTotalRequired1 taxTotalRequired1) {
        return taxTotalRequired1 == null ? null : new TaxTotalRequired1Case(taxTotalRequired1);
    }

    /**
     * This is Unsupported Intent1 case.
     * @param unsupportedIntent1 UnsupportedIntent1 value for unsupportedIntent1.
     * @return The UnsupportedIntent1Case object.
     */
    public static OrdersPatch422IssuesItems fromUnsupportedIntent1(
            UnsupportedIntent1 unsupportedIntent1) {
        return unsupportedIntent1 == null ? null : new UnsupportedIntent1Case(unsupportedIntent1);
    }

    /**
     * This is UNSUPPORTED_PATCH_PARAMETER_VALUE case.
     * @param uNSUPPORTEDPATCHPARAMETERVALUE UNSUPPORTEDPATCHPARAMETERVALUE value for uNSUPPORTEDPATCHPARAMETERVALUE.
     * @return The UNSUPPORTEDPATCHPARAMETERVALUECase object.
     */
    public static OrdersPatch422IssuesItems fromUNSUPPORTEDPATCHPARAMETERVALUE(
            UNSUPPORTEDPATCHPARAMETERVALUE uNSUPPORTEDPATCHPARAMETERVALUE) {
        return uNSUPPORTEDPATCHPARAMETERVALUE == null ? null : new UNSUPPORTEDPATCHPARAMETERVALUECase(uNSUPPORTEDPATCHPARAMETERVALUE);
    }

    /**
     * This is PATCH_VALUE_REQUIRED case.
     * @param pATCHVALUEREQUIRED PATCHVALUEREQUIRED value for pATCHVALUEREQUIRED.
     * @return The PATCHVALUEREQUIREDCase object.
     */
    public static OrdersPatch422IssuesItems fromPATCHVALUEREQUIRED(
            PATCHVALUEREQUIRED pATCHVALUEREQUIRED) {
        return pATCHVALUEREQUIRED == null ? null : new PATCHVALUEREQUIREDCase(pATCHVALUEREQUIRED);
    }

    /**
     * This is PATCH_PATH_REQUIRED case.
     * @param pATCHPATHREQUIRED PATCHPATHREQUIRED value for pATCHPATHREQUIRED.
     * @return The PATCHPATHREQUIREDCase object.
     */
    public static OrdersPatch422IssuesItems fromPATCHPATHREQUIRED(
            PATCHPATHREQUIRED pATCHPATHREQUIRED) {
        return pATCHPATHREQUIRED == null ? null : new PATCHPATHREQUIREDCase(pATCHPATHREQUIRED);
    }

    /**
     * This is Payee Account Locked Or Closed1 case.
     * @param payeeAccountLockedOrClosed1 PayeeAccountLockedOrClosed1 value for payeeAccountLockedOrClosed1.
     * @return The PayeeAccountLockedOrClosed1Case object.
     */
    public static OrdersPatch422IssuesItems fromPayeeAccountLockedOrClosed1(
            PayeeAccountLockedOrClosed1 payeeAccountLockedOrClosed1) {
        return payeeAccountLockedOrClosed1 == null ? null : new PayeeAccountLockedOrClosed1Case(payeeAccountLockedOrClosed1);
    }

    /**
     * This is Payee Account Restricted1 case.
     * @param payeeAccountRestricted1 PayeeAccountRestricted1 value for payeeAccountRestricted1.
     * @return The PayeeAccountRestricted1Case object.
     */
    public static OrdersPatch422IssuesItems fromPayeeAccountRestricted1(
            PayeeAccountRestricted1 payeeAccountRestricted1) {
        return payeeAccountRestricted1 == null ? null : new PayeeAccountRestricted1Case(payeeAccountRestricted1);
    }

    /**
     * This is Payee FX Rate ID Expired1 case.
     * @param payeeFXRateIDExpired1 PayeeFXRateIDExpired1 value for payeeFXRateIDExpired1.
     * @return The PayeeFXRateIDExpired1Case object.
     */
    public static OrdersPatch422IssuesItems fromPayeeFXRateIDExpired1(
            PayeeFXRateIDExpired1 payeeFXRateIDExpired1) {
        return payeeFXRateIDExpired1 == null ? null : new PayeeFXRateIDExpired1Case(payeeFXRateIDExpired1);
    }

    /**
     * This is Payee FX Rate ID Currency Mismatch1 case.
     * @param payeeFXRateIDCurrencyMismatch1 PayeeFXRateIDCurrencyMismatch1 value for payeeFXRateIDCurrencyMismatch1.
     * @return The PayeeFXRateIDCurrencyMismatch1Case object.
     */
    public static OrdersPatch422IssuesItems fromPayeeFXRateIDCurrencyMismatch1(
            PayeeFXRateIDCurrencyMismatch1 payeeFXRateIDCurrencyMismatch1) {
        return payeeFXRateIDCurrencyMismatch1 == null ? null : new PayeeFXRateIDCurrencyMismatch1Case(payeeFXRateIDCurrencyMismatch1);
    }

    /**
     * This is Invalid FX Rate ID1 case.
     * @param invalidFXRateID1 InvalidFXRateID1 value for invalidFXRateID1.
     * @return The InvalidFXRateID1Case object.
     */
    public static OrdersPatch422IssuesItems fromInvalidFXRateID1(
            InvalidFXRateID1 invalidFXRateID1) {
        return invalidFXRateID1 == null ? null : new InvalidFXRateID1Case(invalidFXRateID1);
    }

    /**
     * This is Platform Fees Not Supported1 case.
     * @param platformFeesNotSupported1 PlatformFeesNotSupported1 value for platformFeesNotSupported1.
     * @return The PlatformFeesNotSupported1Case object.
     */
    public static OrdersPatch422IssuesItems fromPlatformFeesNotSupported1(
            PlatformFeesNotSupported1 platformFeesNotSupported1) {
        return platformFeesNotSupported1 == null ? null : new PlatformFeesNotSupported1Case(platformFeesNotSupported1);
    }

    /**
     * This is Invalid Platform Fees Account Error case.
     * @param invalidPlatformFeesAccountError InvalidPlatformFeesAccountError value for invalidPlatformFeesAccountError.
     * @return The InvalidPlatformFeesAccountErrorCase object.
     */
    public static OrdersPatch422IssuesItems fromInvalidPlatformFeesAccountError(
            InvalidPlatformFeesAccountError invalidPlatformFeesAccountError) {
        return invalidPlatformFeesAccountError == null ? null : new InvalidPlatformFeesAccountErrorCase(invalidPlatformFeesAccountError);
    }

    /**
     * This is Invalid Platform Fees Amount1 case.
     * @param invalidPlatformFeesAmount1 InvalidPlatformFeesAmount1 value for invalidPlatformFeesAmount1.
     * @return The InvalidPlatformFeesAmount1Case object.
     */
    public static OrdersPatch422IssuesItems fromInvalidPlatformFeesAmount1(
            InvalidPlatformFeesAmount1 invalidPlatformFeesAmount1) {
        return invalidPlatformFeesAmount1 == null ? null : new InvalidPlatformFeesAmount1Case(invalidPlatformFeesAmount1);
    }

    /**
     * This is Postal Code Required1 case.
     * @param postalCodeRequired1 PostalCodeRequired1 value for postalCodeRequired1.
     * @return The PostalCodeRequired1Case object.
     */
    public static OrdersPatch422IssuesItems fromPostalCodeRequired1(
            PostalCodeRequired1 postalCodeRequired1) {
        return postalCodeRequired1 == null ? null : new PostalCodeRequired1Case(postalCodeRequired1);
    }

    /**
     * This is REFERENCE_ID_NOT_FOUND case.
     * @param rEFERENCEIDNOTFOUND REFERENCEIDNOTFOUND value for rEFERENCEIDNOTFOUND.
     * @return The REFERENCEIDNOTFOUNDCase object.
     */
    public static OrdersPatch422IssuesItems fromREFERENCEIDNOTFOUND(
            REFERENCEIDNOTFOUND rEFERENCEIDNOTFOUND) {
        return rEFERENCEIDNOTFOUND == null ? null : new REFERENCEIDNOTFOUNDCase(rEFERENCEIDNOTFOUND);
    }

    /**
     * This is Reference ID Required1 case.
     * @param referenceIDRequired1 ReferenceIDRequired1 value for referenceIDRequired1.
     * @return The ReferenceIDRequired1Case object.
     */
    public static OrdersPatch422IssuesItems fromReferenceIDRequired1(
            ReferenceIDRequired1 referenceIDRequired1) {
        return referenceIDRequired1 == null ? null : new ReferenceIDRequired1Case(referenceIDRequired1);
    }

    /**
     * This is Multi-Currency Order1 case.
     * @param multiCurrencyOrder1 MultiCurrencyOrder1 value for multiCurrencyOrder1.
     * @return The MultiCurrencyOrder1Case object.
     */
    public static OrdersPatch422IssuesItems fromMultiCurrencyOrder1(
            MultiCurrencyOrder1 multiCurrencyOrder1) {
        return multiCurrencyOrder1 == null ? null : new MultiCurrencyOrder1Case(multiCurrencyOrder1);
    }

    /**
     * This is Shipping Option Not Selected1 case.
     * @param shippingOptionNotSelected1 ShippingOptionNotSelected1 value for shippingOptionNotSelected1.
     * @return The ShippingOptionNotSelected1Case object.
     */
    public static OrdersPatch422IssuesItems fromShippingOptionNotSelected1(
            ShippingOptionNotSelected1 shippingOptionNotSelected1) {
        return shippingOptionNotSelected1 == null ? null : new ShippingOptionNotSelected1Case(shippingOptionNotSelected1);
    }

    /**
     * This is SHIPPING_OPTIONS_NOT_SUPPORTED case.
     * @param sHIPPINGOPTIONSNOTSUPPORTED SHIPPINGOPTIONSNOTSUPPORTED value for sHIPPINGOPTIONSNOTSUPPORTED.
     * @return The SHIPPINGOPTIONSNOTSUPPORTEDCase object.
     */
    public static OrdersPatch422IssuesItems fromSHIPPINGOPTIONSNOTSUPPORTED(
            SHIPPINGOPTIONSNOTSUPPORTED sHIPPINGOPTIONSNOTSUPPORTED) {
        return sHIPPINGOPTIONSNOTSUPPORTED == null ? null : new SHIPPINGOPTIONSNOTSUPPORTEDCase(sHIPPINGOPTIONSNOTSUPPORTED);
    }

    /**
     * This is Multiple Shipping Option Selected1 case.
     * @param multipleShippingOptionSelected1 MultipleShippingOptionSelected1 value for multipleShippingOptionSelected1.
     * @return The MultipleShippingOptionSelected1Case object.
     */
    public static OrdersPatch422IssuesItems fromMultipleShippingOptionSelected1(
            MultipleShippingOptionSelected1 multipleShippingOptionSelected1) {
        return multipleShippingOptionSelected1 == null ? null : new MultipleShippingOptionSelected1Case(multipleShippingOptionSelected1);
    }

    /**
     * This is ORDER_ALREADY_COMPLETED case.
     * @param oRDERALREADYCOMPLETED ORDERALREADYCOMPLETED value for oRDERALREADYCOMPLETED.
     * @return The ORDERALREADYCOMPLETEDCase object.
     */
    public static OrdersPatch422IssuesItems fromORDERALREADYCOMPLETED(
            ORDERALREADYCOMPLETED oRDERALREADYCOMPLETED) {
        return oRDERALREADYCOMPLETED == null ? null : new ORDERALREADYCOMPLETEDCase(oRDERALREADYCOMPLETED);
    }

    /**
     * This is Preferred Shipping Option Amount Mismatch1 case.
     * @param preferredShippingOptionAmountMismatch1 PreferredShippingOptionAmountMismatch1 value for preferredShippingOptionAmountMismatch1.
     * @return The PreferredShippingOptionAmountMismatch1Case object.
     */
    public static OrdersPatch422IssuesItems fromPreferredShippingOptionAmountMismatch1(
            PreferredShippingOptionAmountMismatch1 preferredShippingOptionAmountMismatch1) {
        return preferredShippingOptionAmountMismatch1 == null ? null : new PreferredShippingOptionAmountMismatch1Case(preferredShippingOptionAmountMismatch1);
    }

    /**
     * This is AMOUNT_CHANGE_NOT_ALLOWED case.
     * @param aMOUNTCHANGENOTALLOWED AMOUNTCHANGENOTALLOWED value for aMOUNTCHANGENOTALLOWED.
     * @return The AMOUNTCHANGENOTALLOWEDCase object.
     */
    public static OrdersPatch422IssuesItems fromAMOUNTCHANGENOTALLOWED(
            AMOUNTCHANGENOTALLOWED aMOUNTCHANGENOTALLOWED) {
        return aMOUNTCHANGENOTALLOWED == null ? null : new AMOUNTCHANGENOTALLOWEDCase(aMOUNTCHANGENOTALLOWED);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R amountMismatch1(AmountMismatch1 amountMismatch1);

        R cannotBeNegative1(CannotBeNegative1 cannotBeNegative1);

        R cannotBeZeroOrNegative1(CannotBeZeroOrNegative1 cannotBeZeroOrNegative1);

        R cityRequired1(CityRequired1 cityRequired1);

        R decimalPrecision1(DecimalPrecision1 decimalPrecision1);

        R donationItemsNotSupported1(DonationItemsNotSupported1 donationItemsNotSupported1);

        R duplicateReferenceID1(DuplicateReferenceID1 duplicateReferenceID1);

        R invalidCurrencyCode1(InvalidCurrencyCode1 invalidCurrencyCode1);

        R itemTotalMismatch1(ItemTotalMismatch1 itemTotalMismatch1);

        R itemTotalRequired1(ItemTotalRequired1 itemTotalRequired1);

        R maxValueExceeded1(MaxValueExceeded1 maxValueExceeded1);

        R iNVALIDJSONPOINTERFORMAT(INVALIDJSONPOINTERFORMAT iNVALIDJSONPOINTERFORMAT);

        R iNVALIDPARAMETER(INVALIDPARAMETER iNVALIDPARAMETER);

        R nOTPATCHABLE(NOTPATCHABLE nOTPATCHABLE);

        R taxTotalMismatch1(TaxTotalMismatch1 taxTotalMismatch1);

        R taxTotalRequired1(TaxTotalRequired1 taxTotalRequired1);

        R unsupportedIntent1(UnsupportedIntent1 unsupportedIntent1);

        R uNSUPPORTEDPATCHPARAMETERVALUE(UNSUPPORTEDPATCHPARAMETERVALUE uNSUPPORTEDPATCHPARAMETERVALUE);

        R pATCHVALUEREQUIRED(PATCHVALUEREQUIRED pATCHVALUEREQUIRED);

        R pATCHPATHREQUIRED(PATCHPATHREQUIRED pATCHPATHREQUIRED);

        R payeeAccountLockedOrClosed1(PayeeAccountLockedOrClosed1 payeeAccountLockedOrClosed1);

        R payeeAccountRestricted1(PayeeAccountRestricted1 payeeAccountRestricted1);

        R payeeFXRateIDExpired1(PayeeFXRateIDExpired1 payeeFXRateIDExpired1);

        R payeeFXRateIDCurrencyMismatch1(PayeeFXRateIDCurrencyMismatch1 payeeFXRateIDCurrencyMismatch1);

        R invalidFXRateID1(InvalidFXRateID1 invalidFXRateID1);

        R platformFeesNotSupported1(PlatformFeesNotSupported1 platformFeesNotSupported1);

        R invalidPlatformFeesAccountError(InvalidPlatformFeesAccountError invalidPlatformFeesAccountError);

        R invalidPlatformFeesAmount1(InvalidPlatformFeesAmount1 invalidPlatformFeesAmount1);

        R postalCodeRequired1(PostalCodeRequired1 postalCodeRequired1);

        R rEFERENCEIDNOTFOUND(REFERENCEIDNOTFOUND rEFERENCEIDNOTFOUND);

        R referenceIDRequired1(ReferenceIDRequired1 referenceIDRequired1);

        R multiCurrencyOrder1(MultiCurrencyOrder1 multiCurrencyOrder1);

        R shippingOptionNotSelected1(ShippingOptionNotSelected1 shippingOptionNotSelected1);

        R sHIPPINGOPTIONSNOTSUPPORTED(SHIPPINGOPTIONSNOTSUPPORTED sHIPPINGOPTIONSNOTSUPPORTED);

        R multipleShippingOptionSelected1(MultipleShippingOptionSelected1 multipleShippingOptionSelected1);

        R oRDERALREADYCOMPLETED(ORDERALREADYCOMPLETED oRDERALREADYCOMPLETED);

        R preferredShippingOptionAmountMismatch1(PreferredShippingOptionAmountMismatch1 preferredShippingOptionAmountMismatch1);

        R aMOUNTCHANGENOTALLOWED(AMOUNTCHANGENOTALLOWED aMOUNTCHANGENOTALLOWED);
    }

    /**
     * This is a implementation class for AmountMismatch1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AmountMismatch1")
    private static class AmountMismatch1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private AmountMismatch1 amountMismatch1;

        AmountMismatch1Case(AmountMismatch1 amountMismatch1) {
            this.amountMismatch1 = amountMismatch1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.amountMismatch1(this.amountMismatch1);
        }

        @JsonCreator
        private AmountMismatch1Case(JsonNode jsonNode) throws IOException {
            this.amountMismatch1 = ApiHelper.deserialize(jsonNode,
                AmountMismatch1.class);
        }

        @Override
        public String toString() {
            return amountMismatch1.toString();
        }
    }

    /**
     * This is a implementation class for CannotBeNegative1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CannotBeNegative1")
    private static class CannotBeNegative1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private CannotBeNegative1 cannotBeNegative1;

        CannotBeNegative1Case(CannotBeNegative1 cannotBeNegative1) {
            this.cannotBeNegative1 = cannotBeNegative1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cannotBeNegative1(this.cannotBeNegative1);
        }

        @JsonCreator
        private CannotBeNegative1Case(JsonNode jsonNode) throws IOException {
            this.cannotBeNegative1 = ApiHelper.deserialize(jsonNode,
                CannotBeNegative1.class);
        }

        @Override
        public String toString() {
            return cannotBeNegative1.toString();
        }
    }

    /**
     * This is a implementation class for CannotBeZeroOrNegative1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CannotBeZeroOrNegative1")
    private static class CannotBeZeroOrNegative1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private CannotBeZeroOrNegative1 cannotBeZeroOrNegative1;

        CannotBeZeroOrNegative1Case(CannotBeZeroOrNegative1 cannotBeZeroOrNegative1) {
            this.cannotBeZeroOrNegative1 = cannotBeZeroOrNegative1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cannotBeZeroOrNegative1(this.cannotBeZeroOrNegative1);
        }

        @JsonCreator
        private CannotBeZeroOrNegative1Case(JsonNode jsonNode) throws IOException {
            this.cannotBeZeroOrNegative1 = ApiHelper.deserialize(jsonNode,
                CannotBeZeroOrNegative1.class);
        }

        @Override
        public String toString() {
            return cannotBeZeroOrNegative1.toString();
        }
    }

    /**
     * This is a implementation class for CityRequired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "CityRequired1")
    private static class CityRequired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private CityRequired1 cityRequired1;

        CityRequired1Case(CityRequired1 cityRequired1) {
            this.cityRequired1 = cityRequired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.cityRequired1(this.cityRequired1);
        }

        @JsonCreator
        private CityRequired1Case(JsonNode jsonNode) throws IOException {
            this.cityRequired1 = ApiHelper.deserialize(jsonNode,
                CityRequired1.class);
        }

        @Override
        public String toString() {
            return cityRequired1.toString();
        }
    }

    /**
     * This is a implementation class for DecimalPrecision1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DecimalPrecision1")
    private static class DecimalPrecision1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private DecimalPrecision1 decimalPrecision1;

        DecimalPrecision1Case(DecimalPrecision1 decimalPrecision1) {
            this.decimalPrecision1 = decimalPrecision1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.decimalPrecision1(this.decimalPrecision1);
        }

        @JsonCreator
        private DecimalPrecision1Case(JsonNode jsonNode) throws IOException {
            this.decimalPrecision1 = ApiHelper.deserialize(jsonNode,
                DecimalPrecision1.class);
        }

        @Override
        public String toString() {
            return decimalPrecision1.toString();
        }
    }

    /**
     * This is a implementation class for DonationItemsNotSupported1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DonationItemsNotSupported1")
    private static class DonationItemsNotSupported1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private DonationItemsNotSupported1 donationItemsNotSupported1;

        DonationItemsNotSupported1Case(DonationItemsNotSupported1 donationItemsNotSupported1) {
            this.donationItemsNotSupported1 = donationItemsNotSupported1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.donationItemsNotSupported1(this.donationItemsNotSupported1);
        }

        @JsonCreator
        private DonationItemsNotSupported1Case(JsonNode jsonNode) throws IOException {
            this.donationItemsNotSupported1 = ApiHelper.deserialize(jsonNode,
                DonationItemsNotSupported1.class);
        }

        @Override
        public String toString() {
            return donationItemsNotSupported1.toString();
        }
    }

    /**
     * This is a implementation class for DuplicateReferenceID1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DuplicateReferenceID1")
    private static class DuplicateReferenceID1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private DuplicateReferenceID1 duplicateReferenceID1;

        DuplicateReferenceID1Case(DuplicateReferenceID1 duplicateReferenceID1) {
            this.duplicateReferenceID1 = duplicateReferenceID1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.duplicateReferenceID1(this.duplicateReferenceID1);
        }

        @JsonCreator
        private DuplicateReferenceID1Case(JsonNode jsonNode) throws IOException {
            this.duplicateReferenceID1 = ApiHelper.deserialize(jsonNode,
                DuplicateReferenceID1.class);
        }

        @Override
        public String toString() {
            return duplicateReferenceID1.toString();
        }
    }

    /**
     * This is a implementation class for InvalidCurrencyCode1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidCurrencyCode1")
    private static class InvalidCurrencyCode1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private InvalidCurrencyCode1 invalidCurrencyCode1;

        InvalidCurrencyCode1Case(InvalidCurrencyCode1 invalidCurrencyCode1) {
            this.invalidCurrencyCode1 = invalidCurrencyCode1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidCurrencyCode1(this.invalidCurrencyCode1);
        }

        @JsonCreator
        private InvalidCurrencyCode1Case(JsonNode jsonNode) throws IOException {
            this.invalidCurrencyCode1 = ApiHelper.deserialize(jsonNode,
                InvalidCurrencyCode1.class);
        }

        @Override
        public String toString() {
            return invalidCurrencyCode1.toString();
        }
    }

    /**
     * This is a implementation class for ItemTotalMismatch1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ItemTotalMismatch1")
    private static class ItemTotalMismatch1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private ItemTotalMismatch1 itemTotalMismatch1;

        ItemTotalMismatch1Case(ItemTotalMismatch1 itemTotalMismatch1) {
            this.itemTotalMismatch1 = itemTotalMismatch1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.itemTotalMismatch1(this.itemTotalMismatch1);
        }

        @JsonCreator
        private ItemTotalMismatch1Case(JsonNode jsonNode) throws IOException {
            this.itemTotalMismatch1 = ApiHelper.deserialize(jsonNode,
                ItemTotalMismatch1.class);
        }

        @Override
        public String toString() {
            return itemTotalMismatch1.toString();
        }
    }

    /**
     * This is a implementation class for ItemTotalRequired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ItemTotalRequired1")
    private static class ItemTotalRequired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private ItemTotalRequired1 itemTotalRequired1;

        ItemTotalRequired1Case(ItemTotalRequired1 itemTotalRequired1) {
            this.itemTotalRequired1 = itemTotalRequired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.itemTotalRequired1(this.itemTotalRequired1);
        }

        @JsonCreator
        private ItemTotalRequired1Case(JsonNode jsonNode) throws IOException {
            this.itemTotalRequired1 = ApiHelper.deserialize(jsonNode,
                ItemTotalRequired1.class);
        }

        @Override
        public String toString() {
            return itemTotalRequired1.toString();
        }
    }

    /**
     * This is a implementation class for MaxValueExceeded1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MaxValueExceeded1")
    private static class MaxValueExceeded1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private MaxValueExceeded1 maxValueExceeded1;

        MaxValueExceeded1Case(MaxValueExceeded1 maxValueExceeded1) {
            this.maxValueExceeded1 = maxValueExceeded1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.maxValueExceeded1(this.maxValueExceeded1);
        }

        @JsonCreator
        private MaxValueExceeded1Case(JsonNode jsonNode) throws IOException {
            this.maxValueExceeded1 = ApiHelper.deserialize(jsonNode,
                MaxValueExceeded1.class);
        }

        @Override
        public String toString() {
            return maxValueExceeded1.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDJSONPOINTERFORMATCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDJSONPOINTERFORMAT")
    private static class INVALIDJSONPOINTERFORMATCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private INVALIDJSONPOINTERFORMAT iNVALIDJSONPOINTERFORMAT;

        INVALIDJSONPOINTERFORMATCase(INVALIDJSONPOINTERFORMAT iNVALIDJSONPOINTERFORMAT) {
            this.iNVALIDJSONPOINTERFORMAT = iNVALIDJSONPOINTERFORMAT;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDJSONPOINTERFORMAT(this.iNVALIDJSONPOINTERFORMAT);
        }

        @JsonCreator
        private INVALIDJSONPOINTERFORMATCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDJSONPOINTERFORMAT = ApiHelper.deserialize(jsonNode,
                INVALIDJSONPOINTERFORMAT.class);
        }

        @Override
        public String toString() {
            return iNVALIDJSONPOINTERFORMAT.toString();
        }
    }

    /**
     * This is a implementation class for INVALIDPARAMETERCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "INVALIDPARAMETER")
    private static class INVALIDPARAMETERCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private INVALIDPARAMETER iNVALIDPARAMETER;

        INVALIDPARAMETERCase(INVALIDPARAMETER iNVALIDPARAMETER) {
            this.iNVALIDPARAMETER = iNVALIDPARAMETER;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.iNVALIDPARAMETER(this.iNVALIDPARAMETER);
        }

        @JsonCreator
        private INVALIDPARAMETERCase(JsonNode jsonNode) throws IOException {
            this.iNVALIDPARAMETER = ApiHelper.deserialize(jsonNode,
                INVALIDPARAMETER.class);
        }

        @Override
        public String toString() {
            return iNVALIDPARAMETER.toString();
        }
    }

    /**
     * This is a implementation class for NOTPATCHABLECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NOTPATCHABLE")
    private static class NOTPATCHABLECase extends OrdersPatch422IssuesItems {

        @JsonValue
        private NOTPATCHABLE nOTPATCHABLE;

        NOTPATCHABLECase(NOTPATCHABLE nOTPATCHABLE) {
            this.nOTPATCHABLE = nOTPATCHABLE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.nOTPATCHABLE(this.nOTPATCHABLE);
        }

        @JsonCreator
        private NOTPATCHABLECase(JsonNode jsonNode) throws IOException {
            this.nOTPATCHABLE = ApiHelper.deserialize(jsonNode,
                NOTPATCHABLE.class);
        }

        @Override
        public String toString() {
            return nOTPATCHABLE.toString();
        }
    }

    /**
     * This is a implementation class for TaxTotalMismatch1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TaxTotalMismatch1")
    private static class TaxTotalMismatch1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private TaxTotalMismatch1 taxTotalMismatch1;

        TaxTotalMismatch1Case(TaxTotalMismatch1 taxTotalMismatch1) {
            this.taxTotalMismatch1 = taxTotalMismatch1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.taxTotalMismatch1(this.taxTotalMismatch1);
        }

        @JsonCreator
        private TaxTotalMismatch1Case(JsonNode jsonNode) throws IOException {
            this.taxTotalMismatch1 = ApiHelper.deserialize(jsonNode,
                TaxTotalMismatch1.class);
        }

        @Override
        public String toString() {
            return taxTotalMismatch1.toString();
        }
    }

    /**
     * This is a implementation class for TaxTotalRequired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TaxTotalRequired1")
    private static class TaxTotalRequired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private TaxTotalRequired1 taxTotalRequired1;

        TaxTotalRequired1Case(TaxTotalRequired1 taxTotalRequired1) {
            this.taxTotalRequired1 = taxTotalRequired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.taxTotalRequired1(this.taxTotalRequired1);
        }

        @JsonCreator
        private TaxTotalRequired1Case(JsonNode jsonNode) throws IOException {
            this.taxTotalRequired1 = ApiHelper.deserialize(jsonNode,
                TaxTotalRequired1.class);
        }

        @Override
        public String toString() {
            return taxTotalRequired1.toString();
        }
    }

    /**
     * This is a implementation class for UnsupportedIntent1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "UnsupportedIntent1")
    private static class UnsupportedIntent1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private UnsupportedIntent1 unsupportedIntent1;

        UnsupportedIntent1Case(UnsupportedIntent1 unsupportedIntent1) {
            this.unsupportedIntent1 = unsupportedIntent1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.unsupportedIntent1(this.unsupportedIntent1);
        }

        @JsonCreator
        private UnsupportedIntent1Case(JsonNode jsonNode) throws IOException {
            this.unsupportedIntent1 = ApiHelper.deserialize(jsonNode,
                UnsupportedIntent1.class);
        }

        @Override
        public String toString() {
            return unsupportedIntent1.toString();
        }
    }

    /**
     * This is a implementation class for UNSUPPORTEDPATCHPARAMETERVALUECase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "UNSUPPORTEDPATCHPARAMETERVALUE")
    private static class UNSUPPORTEDPATCHPARAMETERVALUECase extends OrdersPatch422IssuesItems {

        @JsonValue
        private UNSUPPORTEDPATCHPARAMETERVALUE uNSUPPORTEDPATCHPARAMETERVALUE;

        UNSUPPORTEDPATCHPARAMETERVALUECase(UNSUPPORTEDPATCHPARAMETERVALUE uNSUPPORTEDPATCHPARAMETERVALUE) {
            this.uNSUPPORTEDPATCHPARAMETERVALUE = uNSUPPORTEDPATCHPARAMETERVALUE;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.uNSUPPORTEDPATCHPARAMETERVALUE(this.uNSUPPORTEDPATCHPARAMETERVALUE);
        }

        @JsonCreator
        private UNSUPPORTEDPATCHPARAMETERVALUECase(JsonNode jsonNode) throws IOException {
            this.uNSUPPORTEDPATCHPARAMETERVALUE = ApiHelper.deserialize(jsonNode,
                UNSUPPORTEDPATCHPARAMETERVALUE.class);
        }

        @Override
        public String toString() {
            return uNSUPPORTEDPATCHPARAMETERVALUE.toString();
        }
    }

    /**
     * This is a implementation class for PATCHVALUEREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PATCHVALUEREQUIRED")
    private static class PATCHVALUEREQUIREDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private PATCHVALUEREQUIRED pATCHVALUEREQUIRED;

        PATCHVALUEREQUIREDCase(PATCHVALUEREQUIRED pATCHVALUEREQUIRED) {
            this.pATCHVALUEREQUIRED = pATCHVALUEREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pATCHVALUEREQUIRED(this.pATCHVALUEREQUIRED);
        }

        @JsonCreator
        private PATCHVALUEREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.pATCHVALUEREQUIRED = ApiHelper.deserialize(jsonNode,
                PATCHVALUEREQUIRED.class);
        }

        @Override
        public String toString() {
            return pATCHVALUEREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for PATCHPATHREQUIREDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PATCHPATHREQUIRED")
    private static class PATCHPATHREQUIREDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private PATCHPATHREQUIRED pATCHPATHREQUIRED;

        PATCHPATHREQUIREDCase(PATCHPATHREQUIRED pATCHPATHREQUIRED) {
            this.pATCHPATHREQUIRED = pATCHPATHREQUIRED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.pATCHPATHREQUIRED(this.pATCHPATHREQUIRED);
        }

        @JsonCreator
        private PATCHPATHREQUIREDCase(JsonNode jsonNode) throws IOException {
            this.pATCHPATHREQUIRED = ApiHelper.deserialize(jsonNode,
                PATCHPATHREQUIRED.class);
        }

        @Override
        public String toString() {
            return pATCHPATHREQUIRED.toString();
        }
    }

    /**
     * This is a implementation class for PayeeAccountLockedOrClosed1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PayeeAccountLockedOrClosed1")
    private static class PayeeAccountLockedOrClosed1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PayeeAccountLockedOrClosed1 payeeAccountLockedOrClosed1;

        PayeeAccountLockedOrClosed1Case(PayeeAccountLockedOrClosed1 payeeAccountLockedOrClosed1) {
            this.payeeAccountLockedOrClosed1 = payeeAccountLockedOrClosed1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.payeeAccountLockedOrClosed1(this.payeeAccountLockedOrClosed1);
        }

        @JsonCreator
        private PayeeAccountLockedOrClosed1Case(JsonNode jsonNode) throws IOException {
            this.payeeAccountLockedOrClosed1 = ApiHelper.deserialize(jsonNode,
                PayeeAccountLockedOrClosed1.class);
        }

        @Override
        public String toString() {
            return payeeAccountLockedOrClosed1.toString();
        }
    }

    /**
     * This is a implementation class for PayeeAccountRestricted1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PayeeAccountRestricted1")
    private static class PayeeAccountRestricted1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PayeeAccountRestricted1 payeeAccountRestricted1;

        PayeeAccountRestricted1Case(PayeeAccountRestricted1 payeeAccountRestricted1) {
            this.payeeAccountRestricted1 = payeeAccountRestricted1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.payeeAccountRestricted1(this.payeeAccountRestricted1);
        }

        @JsonCreator
        private PayeeAccountRestricted1Case(JsonNode jsonNode) throws IOException {
            this.payeeAccountRestricted1 = ApiHelper.deserialize(jsonNode,
                PayeeAccountRestricted1.class);
        }

        @Override
        public String toString() {
            return payeeAccountRestricted1.toString();
        }
    }

    /**
     * This is a implementation class for PayeeFXRateIDExpired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PayeeFXRateIDExpired1")
    private static class PayeeFXRateIDExpired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PayeeFXRateIDExpired1 payeeFXRateIDExpired1;

        PayeeFXRateIDExpired1Case(PayeeFXRateIDExpired1 payeeFXRateIDExpired1) {
            this.payeeFXRateIDExpired1 = payeeFXRateIDExpired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.payeeFXRateIDExpired1(this.payeeFXRateIDExpired1);
        }

        @JsonCreator
        private PayeeFXRateIDExpired1Case(JsonNode jsonNode) throws IOException {
            this.payeeFXRateIDExpired1 = ApiHelper.deserialize(jsonNode,
                PayeeFXRateIDExpired1.class);
        }

        @Override
        public String toString() {
            return payeeFXRateIDExpired1.toString();
        }
    }

    /**
     * This is a implementation class for PayeeFXRateIDCurrencyMismatch1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PayeeFXRateIDCurrencyMismatch1")
    private static class PayeeFXRateIDCurrencyMismatch1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PayeeFXRateIDCurrencyMismatch1 payeeFXRateIDCurrencyMismatch1;

        PayeeFXRateIDCurrencyMismatch1Case(PayeeFXRateIDCurrencyMismatch1 payeeFXRateIDCurrencyMismatch1) {
            this.payeeFXRateIDCurrencyMismatch1 = payeeFXRateIDCurrencyMismatch1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.payeeFXRateIDCurrencyMismatch1(this.payeeFXRateIDCurrencyMismatch1);
        }

        @JsonCreator
        private PayeeFXRateIDCurrencyMismatch1Case(JsonNode jsonNode) throws IOException {
            this.payeeFXRateIDCurrencyMismatch1 = ApiHelper.deserialize(jsonNode,
                PayeeFXRateIDCurrencyMismatch1.class);
        }

        @Override
        public String toString() {
            return payeeFXRateIDCurrencyMismatch1.toString();
        }
    }

    /**
     * This is a implementation class for InvalidFXRateID1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidFXRateID1")
    private static class InvalidFXRateID1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private InvalidFXRateID1 invalidFXRateID1;

        InvalidFXRateID1Case(InvalidFXRateID1 invalidFXRateID1) {
            this.invalidFXRateID1 = invalidFXRateID1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidFXRateID1(this.invalidFXRateID1);
        }

        @JsonCreator
        private InvalidFXRateID1Case(JsonNode jsonNode) throws IOException {
            this.invalidFXRateID1 = ApiHelper.deserialize(jsonNode,
                InvalidFXRateID1.class);
        }

        @Override
        public String toString() {
            return invalidFXRateID1.toString();
        }
    }

    /**
     * This is a implementation class for PlatformFeesNotSupported1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PlatformFeesNotSupported1")
    private static class PlatformFeesNotSupported1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PlatformFeesNotSupported1 platformFeesNotSupported1;

        PlatformFeesNotSupported1Case(PlatformFeesNotSupported1 platformFeesNotSupported1) {
            this.platformFeesNotSupported1 = platformFeesNotSupported1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.platformFeesNotSupported1(this.platformFeesNotSupported1);
        }

        @JsonCreator
        private PlatformFeesNotSupported1Case(JsonNode jsonNode) throws IOException {
            this.platformFeesNotSupported1 = ApiHelper.deserialize(jsonNode,
                PlatformFeesNotSupported1.class);
        }

        @Override
        public String toString() {
            return platformFeesNotSupported1.toString();
        }
    }

    /**
     * This is a implementation class for InvalidPlatformFeesAccountErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidPlatformFeesAccountError")
    private static class InvalidPlatformFeesAccountErrorCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private InvalidPlatformFeesAccountError invalidPlatformFeesAccountError;

        InvalidPlatformFeesAccountErrorCase(InvalidPlatformFeesAccountError invalidPlatformFeesAccountError) {
            this.invalidPlatformFeesAccountError = invalidPlatformFeesAccountError;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidPlatformFeesAccountError(this.invalidPlatformFeesAccountError);
        }

        @JsonCreator
        private InvalidPlatformFeesAccountErrorCase(JsonNode jsonNode) throws IOException {
            this.invalidPlatformFeesAccountError = ApiHelper.deserialize(jsonNode,
                InvalidPlatformFeesAccountError.class);
        }

        @Override
        public String toString() {
            return invalidPlatformFeesAccountError.toString();
        }
    }

    /**
     * This is a implementation class for InvalidPlatformFeesAmount1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "InvalidPlatformFeesAmount1")
    private static class InvalidPlatformFeesAmount1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private InvalidPlatformFeesAmount1 invalidPlatformFeesAmount1;

        InvalidPlatformFeesAmount1Case(InvalidPlatformFeesAmount1 invalidPlatformFeesAmount1) {
            this.invalidPlatformFeesAmount1 = invalidPlatformFeesAmount1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.invalidPlatformFeesAmount1(this.invalidPlatformFeesAmount1);
        }

        @JsonCreator
        private InvalidPlatformFeesAmount1Case(JsonNode jsonNode) throws IOException {
            this.invalidPlatformFeesAmount1 = ApiHelper.deserialize(jsonNode,
                InvalidPlatformFeesAmount1.class);
        }

        @Override
        public String toString() {
            return invalidPlatformFeesAmount1.toString();
        }
    }

    /**
     * This is a implementation class for PostalCodeRequired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PostalCodeRequired1")
    private static class PostalCodeRequired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PostalCodeRequired1 postalCodeRequired1;

        PostalCodeRequired1Case(PostalCodeRequired1 postalCodeRequired1) {
            this.postalCodeRequired1 = postalCodeRequired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.postalCodeRequired1(this.postalCodeRequired1);
        }

        @JsonCreator
        private PostalCodeRequired1Case(JsonNode jsonNode) throws IOException {
            this.postalCodeRequired1 = ApiHelper.deserialize(jsonNode,
                PostalCodeRequired1.class);
        }

        @Override
        public String toString() {
            return postalCodeRequired1.toString();
        }
    }

    /**
     * This is a implementation class for REFERENCEIDNOTFOUNDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "REFERENCEIDNOTFOUND")
    private static class REFERENCEIDNOTFOUNDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private REFERENCEIDNOTFOUND rEFERENCEIDNOTFOUND;

        REFERENCEIDNOTFOUNDCase(REFERENCEIDNOTFOUND rEFERENCEIDNOTFOUND) {
            this.rEFERENCEIDNOTFOUND = rEFERENCEIDNOTFOUND;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rEFERENCEIDNOTFOUND(this.rEFERENCEIDNOTFOUND);
        }

        @JsonCreator
        private REFERENCEIDNOTFOUNDCase(JsonNode jsonNode) throws IOException {
            this.rEFERENCEIDNOTFOUND = ApiHelper.deserialize(jsonNode,
                REFERENCEIDNOTFOUND.class);
        }

        @Override
        public String toString() {
            return rEFERENCEIDNOTFOUND.toString();
        }
    }

    /**
     * This is a implementation class for ReferenceIDRequired1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ReferenceIDRequired1")
    private static class ReferenceIDRequired1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private ReferenceIDRequired1 referenceIDRequired1;

        ReferenceIDRequired1Case(ReferenceIDRequired1 referenceIDRequired1) {
            this.referenceIDRequired1 = referenceIDRequired1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.referenceIDRequired1(this.referenceIDRequired1);
        }

        @JsonCreator
        private ReferenceIDRequired1Case(JsonNode jsonNode) throws IOException {
            this.referenceIDRequired1 = ApiHelper.deserialize(jsonNode,
                ReferenceIDRequired1.class);
        }

        @Override
        public String toString() {
            return referenceIDRequired1.toString();
        }
    }

    /**
     * This is a implementation class for MultiCurrencyOrder1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MultiCurrencyOrder1")
    private static class MultiCurrencyOrder1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private MultiCurrencyOrder1 multiCurrencyOrder1;

        MultiCurrencyOrder1Case(MultiCurrencyOrder1 multiCurrencyOrder1) {
            this.multiCurrencyOrder1 = multiCurrencyOrder1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.multiCurrencyOrder1(this.multiCurrencyOrder1);
        }

        @JsonCreator
        private MultiCurrencyOrder1Case(JsonNode jsonNode) throws IOException {
            this.multiCurrencyOrder1 = ApiHelper.deserialize(jsonNode,
                MultiCurrencyOrder1.class);
        }

        @Override
        public String toString() {
            return multiCurrencyOrder1.toString();
        }
    }

    /**
     * This is a implementation class for ShippingOptionNotSelected1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ShippingOptionNotSelected1")
    private static class ShippingOptionNotSelected1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private ShippingOptionNotSelected1 shippingOptionNotSelected1;

        ShippingOptionNotSelected1Case(ShippingOptionNotSelected1 shippingOptionNotSelected1) {
            this.shippingOptionNotSelected1 = shippingOptionNotSelected1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.shippingOptionNotSelected1(this.shippingOptionNotSelected1);
        }

        @JsonCreator
        private ShippingOptionNotSelected1Case(JsonNode jsonNode) throws IOException {
            this.shippingOptionNotSelected1 = ApiHelper.deserialize(jsonNode,
                ShippingOptionNotSelected1.class);
        }

        @Override
        public String toString() {
            return shippingOptionNotSelected1.toString();
        }
    }

    /**
     * This is a implementation class for SHIPPINGOPTIONSNOTSUPPORTEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "SHIPPINGOPTIONSNOTSUPPORTED")
    private static class SHIPPINGOPTIONSNOTSUPPORTEDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private SHIPPINGOPTIONSNOTSUPPORTED sHIPPINGOPTIONSNOTSUPPORTED;

        SHIPPINGOPTIONSNOTSUPPORTEDCase(SHIPPINGOPTIONSNOTSUPPORTED sHIPPINGOPTIONSNOTSUPPORTED) {
            this.sHIPPINGOPTIONSNOTSUPPORTED = sHIPPINGOPTIONSNOTSUPPORTED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.sHIPPINGOPTIONSNOTSUPPORTED(this.sHIPPINGOPTIONSNOTSUPPORTED);
        }

        @JsonCreator
        private SHIPPINGOPTIONSNOTSUPPORTEDCase(JsonNode jsonNode) throws IOException {
            this.sHIPPINGOPTIONSNOTSUPPORTED = ApiHelper.deserialize(jsonNode,
                SHIPPINGOPTIONSNOTSUPPORTED.class);
        }

        @Override
        public String toString() {
            return sHIPPINGOPTIONSNOTSUPPORTED.toString();
        }
    }

    /**
     * This is a implementation class for MultipleShippingOptionSelected1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "MultipleShippingOptionSelected1")
    private static class MultipleShippingOptionSelected1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private MultipleShippingOptionSelected1 multipleShippingOptionSelected1;

        MultipleShippingOptionSelected1Case(MultipleShippingOptionSelected1 multipleShippingOptionSelected1) {
            this.multipleShippingOptionSelected1 = multipleShippingOptionSelected1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.multipleShippingOptionSelected1(this.multipleShippingOptionSelected1);
        }

        @JsonCreator
        private MultipleShippingOptionSelected1Case(JsonNode jsonNode) throws IOException {
            this.multipleShippingOptionSelected1 = ApiHelper.deserialize(jsonNode,
                MultipleShippingOptionSelected1.class);
        }

        @Override
        public String toString() {
            return multipleShippingOptionSelected1.toString();
        }
    }

    /**
     * This is a implementation class for ORDERALREADYCOMPLETEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ORDERALREADYCOMPLETED")
    private static class ORDERALREADYCOMPLETEDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private ORDERALREADYCOMPLETED oRDERALREADYCOMPLETED;

        ORDERALREADYCOMPLETEDCase(ORDERALREADYCOMPLETED oRDERALREADYCOMPLETED) {
            this.oRDERALREADYCOMPLETED = oRDERALREADYCOMPLETED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.oRDERALREADYCOMPLETED(this.oRDERALREADYCOMPLETED);
        }

        @JsonCreator
        private ORDERALREADYCOMPLETEDCase(JsonNode jsonNode) throws IOException {
            this.oRDERALREADYCOMPLETED = ApiHelper.deserialize(jsonNode,
                ORDERALREADYCOMPLETED.class);
        }

        @Override
        public String toString() {
            return oRDERALREADYCOMPLETED.toString();
        }
    }

    /**
     * This is a implementation class for PreferredShippingOptionAmountMismatch1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PreferredShippingOptionAmountMismatch1")
    private static class PreferredShippingOptionAmountMismatch1Case extends OrdersPatch422IssuesItems {

        @JsonValue
        private PreferredShippingOptionAmountMismatch1 preferredShippingOptionAmountMismatch1;

        PreferredShippingOptionAmountMismatch1Case(PreferredShippingOptionAmountMismatch1 preferredShippingOptionAmountMismatch1) {
            this.preferredShippingOptionAmountMismatch1 = preferredShippingOptionAmountMismatch1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.preferredShippingOptionAmountMismatch1(this.preferredShippingOptionAmountMismatch1);
        }

        @JsonCreator
        private PreferredShippingOptionAmountMismatch1Case(JsonNode jsonNode) throws IOException {
            this.preferredShippingOptionAmountMismatch1 = ApiHelper.deserialize(jsonNode,
                PreferredShippingOptionAmountMismatch1.class);
        }

        @Override
        public String toString() {
            return preferredShippingOptionAmountMismatch1.toString();
        }
    }

    /**
     * This is a implementation class for AMOUNTCHANGENOTALLOWEDCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AMOUNTCHANGENOTALLOWED")
    private static class AMOUNTCHANGENOTALLOWEDCase extends OrdersPatch422IssuesItems {

        @JsonValue
        private AMOUNTCHANGENOTALLOWED aMOUNTCHANGENOTALLOWED;

        AMOUNTCHANGENOTALLOWEDCase(AMOUNTCHANGENOTALLOWED aMOUNTCHANGENOTALLOWED) {
            this.aMOUNTCHANGENOTALLOWED = aMOUNTCHANGENOTALLOWED;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.aMOUNTCHANGENOTALLOWED(this.aMOUNTCHANGENOTALLOWED);
        }

        @JsonCreator
        private AMOUNTCHANGENOTALLOWEDCase(JsonNode jsonNode) throws IOException {
            this.aMOUNTCHANGENOTALLOWED = ApiHelper.deserialize(jsonNode,
                AMOUNTCHANGENOTALLOWED.class);
        }

        @Override
        public String toString() {
            return aMOUNTCHANGENOTALLOWED.toString();
        }
    }

    /**
     * This is a custom deserializer class for OrdersPatch422IssuesItems.
     */
    protected static class OrdersPatch422IssuesItemsDeserializer
            extends JsonDeserializer<OrdersPatch422IssuesItems> {

        @Override
        public OrdersPatch422IssuesItems deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(AmountMismatch1Case.class,
                    CannotBeNegative1Case.class, CannotBeZeroOrNegative1Case.class,
                    CityRequired1Case.class, DecimalPrecision1Case.class,
                    DonationItemsNotSupported1Case.class, DuplicateReferenceID1Case.class,
                    InvalidCurrencyCode1Case.class, ItemTotalMismatch1Case.class,
                    ItemTotalRequired1Case.class, MaxValueExceeded1Case.class,
                    INVALIDJSONPOINTERFORMATCase.class, INVALIDPARAMETERCase.class,
                    NOTPATCHABLECase.class, TaxTotalMismatch1Case.class,
                    TaxTotalRequired1Case.class, UnsupportedIntent1Case.class,
                    UNSUPPORTEDPATCHPARAMETERVALUECase.class, PATCHVALUEREQUIREDCase.class,
                    PATCHPATHREQUIREDCase.class, PayeeAccountLockedOrClosed1Case.class,
                    PayeeAccountRestricted1Case.class, PayeeFXRateIDExpired1Case.class,
                    PayeeFXRateIDCurrencyMismatch1Case.class, InvalidFXRateID1Case.class,
                    PlatformFeesNotSupported1Case.class, InvalidPlatformFeesAccountErrorCase.class,
                    InvalidPlatformFeesAmount1Case.class, PostalCodeRequired1Case.class,
                    REFERENCEIDNOTFOUNDCase.class, ReferenceIDRequired1Case.class,
                    MultiCurrencyOrder1Case.class, ShippingOptionNotSelected1Case.class,
                    SHIPPINGOPTIONSNOTSUPPORTEDCase.class,
                    MultipleShippingOptionSelected1Case.class, ORDERALREADYCOMPLETEDCase.class,
                    PreferredShippingOptionAmountMismatch1Case.class,
                    AMOUNTCHANGENOTALLOWEDCase.class), false);
        }
    }

}
