/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for CARDEXPIRYREQUIRED type.
 */
public class CARDEXPIRYREQUIRED {
    private CardExpiryRequiredIssueEnum issue;
    private CardExpiryRequiredDescriptionEnum description;

    /**
     * Default constructor.
     */
    public CARDEXPIRYREQUIRED() {
    }

    /**
     * Initialization constructor.
     * @param  issue  CardExpiryRequiredIssueEnum value for issue.
     * @param  description  CardExpiryRequiredDescriptionEnum value for description.
     */
    public CARDEXPIRYREQUIRED(
            CardExpiryRequiredIssueEnum issue,
            CardExpiryRequiredDescriptionEnum description) {
        this.issue = issue;
        this.description = description;
    }

    /**
     * Getter for Issue.
     * @return Returns the CardExpiryRequiredIssueEnum
     */
    @JsonGetter("issue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CardExpiryRequiredIssueEnum getIssue() {
        return issue;
    }

    /**
     * Setter for Issue.
     * @param issue Value for CardExpiryRequiredIssueEnum
     */
    @JsonSetter("issue")
    public void setIssue(CardExpiryRequiredIssueEnum issue) {
        this.issue = issue;
    }

    /**
     * Getter for Description.
     * @return Returns the CardExpiryRequiredDescriptionEnum
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CardExpiryRequiredDescriptionEnum getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for CardExpiryRequiredDescriptionEnum
     */
    @JsonSetter("description")
    public void setDescription(CardExpiryRequiredDescriptionEnum description) {
        this.description = description;
    }

    /**
     * Converts this CARDEXPIRYREQUIRED into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CARDEXPIRYREQUIRED [" + "issue=" + issue + ", description=" + description + "]";
    }

    /**
     * Builds a new {@link CARDEXPIRYREQUIRED.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CARDEXPIRYREQUIRED.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .issue(getIssue())
                .description(getDescription());
        return builder;
    }

    /**
     * Class to build instances of {@link CARDEXPIRYREQUIRED}.
     */
    public static class Builder {
        private CardExpiryRequiredIssueEnum issue;
        private CardExpiryRequiredDescriptionEnum description;



        /**
         * Setter for issue.
         * @param  issue  CardExpiryRequiredIssueEnum value for issue.
         * @return Builder
         */
        public Builder issue(CardExpiryRequiredIssueEnum issue) {
            this.issue = issue;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  CardExpiryRequiredDescriptionEnum value for description.
         * @return Builder
         */
        public Builder description(CardExpiryRequiredDescriptionEnum description) {
            this.description = description;
            return this;
        }

        /**
         * Builds a new {@link CARDEXPIRYREQUIRED} object using the set fields.
         * @return {@link CARDEXPIRYREQUIRED}
         */
        public CARDEXPIRYREQUIRED build() {
            return new CARDEXPIRYREQUIRED(issue, description);
        }
    }
}
