/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.paypal.sandbox.apim.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for AuthenticationResponse type.
 */
public class AuthenticationResponse {
    private LiabilityShiftIndicatorEnum liabilityShift;
    private The3DSecureAuthenticationResponse threeDSecure;
    private Object authenticationFlow;
    private Object exemptionDetails;

    /**
     * Default constructor.
     */
    public AuthenticationResponse() {
    }

    /**
     * Initialization constructor.
     * @param  liabilityShift  LiabilityShiftIndicatorEnum value for liabilityShift.
     * @param  threeDSecure  The3DSecureAuthenticationResponse value for threeDSecure.
     * @param  authenticationFlow  Object value for authenticationFlow.
     * @param  exemptionDetails  Object value for exemptionDetails.
     */
    public AuthenticationResponse(
            LiabilityShiftIndicatorEnum liabilityShift,
            The3DSecureAuthenticationResponse threeDSecure,
            Object authenticationFlow,
            Object exemptionDetails) {
        this.liabilityShift = liabilityShift;
        this.threeDSecure = threeDSecure;
        this.authenticationFlow = authenticationFlow;
        this.exemptionDetails = exemptionDetails;
    }

    /**
     * Getter for LiabilityShift.
     * Liability shift indicator. The outcome of the issuer's authentication.
     * @return Returns the LiabilityShiftIndicatorEnum
     */
    @JsonGetter("liability_shift")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LiabilityShiftIndicatorEnum getLiabilityShift() {
        return liabilityShift;
    }

    /**
     * Setter for LiabilityShift.
     * Liability shift indicator. The outcome of the issuer's authentication.
     * @param liabilityShift Value for LiabilityShiftIndicatorEnum
     */
    @JsonSetter("liability_shift")
    public void setLiabilityShift(LiabilityShiftIndicatorEnum liabilityShift) {
        this.liabilityShift = liabilityShift;
    }

    /**
     * Getter for ThreeDSecure.
     * Results of 3D Secure Authentication.
     * @return Returns the The3DSecureAuthenticationResponse
     */
    @JsonGetter("three_d_secure")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public The3DSecureAuthenticationResponse getThreeDSecure() {
        return threeDSecure;
    }

    /**
     * Setter for ThreeDSecure.
     * Results of 3D Secure Authentication.
     * @param threeDSecure Value for The3DSecureAuthenticationResponse
     */
    @JsonSetter("three_d_secure")
    public void setThreeDSecure(The3DSecureAuthenticationResponse threeDSecure) {
        this.threeDSecure = threeDSecure;
    }

    /**
     * Getter for AuthenticationFlow.
     * @return Returns the Object
     */
    @JsonGetter("authentication_flow")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getAuthenticationFlow() {
        return authenticationFlow;
    }

    /**
     * Setter for AuthenticationFlow.
     * @param authenticationFlow Value for Object
     */
    @JsonSetter("authentication_flow")
    public void setAuthenticationFlow(Object authenticationFlow) {
        this.authenticationFlow = authenticationFlow;
    }

    /**
     * Getter for ExemptionDetails.
     * Exemption details of 3D Secure Authentication.
     * @return Returns the Object
     */
    @JsonGetter("exemption_details")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getExemptionDetails() {
        return exemptionDetails;
    }

    /**
     * Setter for ExemptionDetails.
     * Exemption details of 3D Secure Authentication.
     * @param exemptionDetails Value for Object
     */
    @JsonSetter("exemption_details")
    public void setExemptionDetails(Object exemptionDetails) {
        this.exemptionDetails = exemptionDetails;
    }

    /**
     * Converts this AuthenticationResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AuthenticationResponse [" + "liabilityShift=" + liabilityShift + ", threeDSecure="
                + threeDSecure + ", authenticationFlow=" + authenticationFlow
                + ", exemptionDetails=" + exemptionDetails + "]";
    }

    /**
     * Builds a new {@link AuthenticationResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AuthenticationResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .liabilityShift(getLiabilityShift())
                .threeDSecure(getThreeDSecure())
                .authenticationFlow(getAuthenticationFlow())
                .exemptionDetails(getExemptionDetails());
        return builder;
    }

    /**
     * Class to build instances of {@link AuthenticationResponse}.
     */
    public static class Builder {
        private LiabilityShiftIndicatorEnum liabilityShift;
        private The3DSecureAuthenticationResponse threeDSecure;
        private Object authenticationFlow;
        private Object exemptionDetails;



        /**
         * Setter for liabilityShift.
         * @param  liabilityShift  LiabilityShiftIndicatorEnum value for liabilityShift.
         * @return Builder
         */
        public Builder liabilityShift(LiabilityShiftIndicatorEnum liabilityShift) {
            this.liabilityShift = liabilityShift;
            return this;
        }

        /**
         * Setter for threeDSecure.
         * @param  threeDSecure  The3DSecureAuthenticationResponse value for threeDSecure.
         * @return Builder
         */
        public Builder threeDSecure(The3DSecureAuthenticationResponse threeDSecure) {
            this.threeDSecure = threeDSecure;
            return this;
        }

        /**
         * Setter for authenticationFlow.
         * @param  authenticationFlow  Object value for authenticationFlow.
         * @return Builder
         */
        public Builder authenticationFlow(Object authenticationFlow) {
            this.authenticationFlow = authenticationFlow;
            return this;
        }

        /**
         * Setter for exemptionDetails.
         * @param  exemptionDetails  Object value for exemptionDetails.
         * @return Builder
         */
        public Builder exemptionDetails(Object exemptionDetails) {
            this.exemptionDetails = exemptionDetails;
            return this;
        }

        /**
         * Builds a new {@link AuthenticationResponse} object using the set fields.
         * @return {@link AuthenticationResponse}
         */
        public AuthenticationResponse build() {
            return new AuthenticationResponse(liabilityShift, threeDSecure, authenticationFlow,
                    exemptionDetails);
        }
    }
}
